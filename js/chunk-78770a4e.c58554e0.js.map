{"version":3,"sources":["webpack:///./node_modules/web3-eth-iban/node_modules/web3-utils/src/utils.js","webpack:///./node_modules/web3-eth-abi/src/types/bool.js","webpack:///./node_modules/web3-eth-abi/src/types/dynamicbytes.js","webpack:///./node_modules/web3-eth-abi/node_modules/web3-core-helpers/src/index.js","webpack:///./node_modules/web3-eth-iban/node_modules/bn.js/lib/bn.js","webpack:///./node_modules/web3-eth-abi/node_modules/web3-utils/src/index.js","webpack:///./node_modules/web3-eth-abi/node_modules/web3-utils/src/soliditySha3.js","webpack:///./node_modules/web3-eth-abi/src/formatters.js","webpack:///./node_modules/web3-eth-abi/node_modules/web3-utils/src/utils.js","webpack:///./node_modules/web3-eth-abi/node_modules/web3-core-helpers/src/errors.js","webpack:///./node_modules/web3-eth-abi/src/param.js","webpack:///./node_modules/web3-eth-abi/src/types/bytes.js","webpack:///./node_modules/web3-eth-abi/node_modules/bn.js/lib/bn.js","webpack:///./node_modules/web3-eth-abi/src/types/uint.js","webpack:///./node_modules/web3-eth-iban/node_modules/web3-utils/src/soliditySha3.js","webpack:///./node_modules/web3-eth-abi/src/types/address.js","webpack:///./node_modules/web3-eth-abi/src/index.js","webpack:///./node_modules/web3-eth-abi/src/types/int.js","webpack:///./node_modules/web3-eth-iban/src/index.js","webpack:///./node_modules/web3-eth-abi/node_modules/web3-core-helpers/src/formatters.js","webpack:///./node_modules/web3-eth-iban/node_modules/web3-utils/src/index.js","webpack:///./node_modules/web3-eth-abi/src/type.js","webpack:///./node_modules/web3-eth-abi/src/types/string.js"],"names":["_","BN","numberToBN","utf8","Hash","isBN","object","constructor","name","isBigNumber","toBN","number","apply","arguments","e","Error","toTwosComplement","toTwos","toString","isAddress","address","test","checkAddressChecksum","replace","addressHash","sha3","toLowerCase","i","parseInt","toUpperCase","leftPad","string","chars","sign","hasPrefix","padding","length","Array","join","rightPad","utf8ToHex","str","encode","hex","split","reverse","code","charCodeAt","n","hexToUtf8","isHexStrict","l","substr","String","fromCharCode","decode","hexToNumber","value","toNumber","hexToNumberString","numberToHex","isNull","isUndefined","isFinite","result","lt","bytesToHex","bytes","push","hexToBytes","c","toHex","returnType","isBoolean","isObject","JSON","stringify","isString","indexOf","isNumber","isHex","isBloom","bloom","isTopic","topic","SHA3_NULL_S","returnValue","keccak256","_Hash","module","exports","f","SolidityType","SolidityTypeBool","this","_inputFormatter","formatInputBool","_outputFormatter","formatOutputBool","prototype","isType","match","SolidityTypeDynamicBytes","formatInputDynamicBytes","formatOutputDynamicBytes","isDynamicType","errors","formatters","assert","val","msg","inherits","ctor","superCtor","super_","TempCtor","base","endian","negative","words","red","_init","Buffer","wordSize","parseHex","start","end","r","len","Math","min","parseBase","mul","num","isArray","max","left","right","cmp","_initNumber","_initArray","_parseHex","_parseBase","strip","toArray","ceil","j","w","off","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","copy","dest","clone","_expand","size","_normSign","inspect","zeros","groupSizes","groupBases","toBitArray","bitLength","bit","wbit","smallMulTo","self","out","a","b","lo","carry","k","ncarry","rword","maxJ","groupSize","groupBase","isZero","modn","idivn","ret","toJSON","toBuffer","toArrayLike","ArrayType","byteLength","reqLength","littleEndian","res","q","andln","iushrn","clz32","_countBits","t","_zeroBits","hi","zeroBits","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","iadd","isub","add","sub","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","imul","w0","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","fftm","FFTM","mulp","x","y","mulTo","makeRBT","N","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","s","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","muln","sqr","isqr","iushln","bits","carryMask","newCarry","ishln","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","shift","_wordDiv","mode","bhi","bhiBits","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","acc","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","tmp","_tmp","K256","call","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","imulK","input","output","outLen","prev","next","mod3","one","nOne","lpow","z","inv","windowSize","wnd","current","currentLen","mont","u","ethjsUnit","utils","soliditySha3","randomHex","_fireError","error","emitter","reject","callback","data","message","isFunction","listeners","catch","setTimeout","emit","removeAllListeners","_jsonInterfaceMethodToString","json","typeName","inputs","map","type","hexToAscii","substring","asciiToHex","getUnitValue","unit","unitMap","fromWei","toWei","toChecksumAddress","checksumAddress","toDecimal","fromDecimal","hexToString","toUtf8","stringToHex","fromUtf8","toAscii","fromAscii","padLeft","padRight","_elementaryName","startsWith","slice","_parseTypeN","typesize","exec","_parseTypeNArray","arraySize","_parseNumber","arg","_solidityPack","_processSoliditySha3Args","hexArg","hasOwnProperty","v","args","hexArgs","SolidityParam","formatInputInt","trunc","formatInputBytes","floor","formatInputString","signedIsNegative","formatOutputInt","param","staticPart","rawValue","formatOutputUInt","formatOutputBytes","matches","dynamicPart","formatOutputString","formatOutputAddress","ErrorResponse","InvalidNumberOfParams","got","expected","method","InvalidConnection","host","InvalidProvider","InvalidResponse","ConnectionTimeout","ms","offset","dynamicPartLength","withOffset","combine","isDynamic","undefined","offsetAsBytes","encodeList","params","totalOffset","offsetParams","reduce","SolidityTypeBytes","SolidityTypeUInt","SolidityTypeAddress","inputAddressFormatter","SolidityTypeInt","SolidityTypeString","solidityType","isDynamicArray","Result","ABICoder","types","_types","_requireType","filter","_getOffsets","solidityTypes","lengths","index","staticPartLength","_getSolidityTypes","_encodeMultiWithOffset","encodeds","dynamicOffset","forEach","_encodeWithOffset","encoded","nestedName","nestedStaticPartLength","previousLength","additionalOffset","isStaticArray","encodeFunctionSignature","functionName","encodeEventSignature","encodeParameter","encodeParameters","roundedStaticPartLength","encodeFunctionCall","jsonInterface","decodeParameter","decodeParameters","outputs","isTypeArray","offsets","__length__","count","decodedValue","decodeLog","topics","notIndexedInputs","indexedInputs","indexed","nonIndexedData","indexedData","notIndexedParams","indexedParams","coder","BigNumber","iso13616Prepare","iban","Z","mod9710","block","remainder","Iban","_iban","toAddress","ib","isDirect","toIban","fromAddress","asBn","base36","padded","fromBban","bban","countryCode","checkDigit","createIndirect","options","institution","identifier","isValid","isIndirect","checksum","client","outputBigNumberFormatter","isPredefinedBlockNumber","blockNumber","inputDefaultBlockNumberFormatter","inputBlockNumberFormatter","defaultBlock","_txInputFormatter","to","gas","gasLimit","key","inputCallFormatter","from","defaultAccount","inputTransactionFormatter","inputSignFormatter","outputTransactionFormatter","tx","transactionIndex","nonce","gasPrice","outputTransactionReceiptFormatter","receipt","cumulativeGasUsed","gasUsed","logs","outputLogFormatter","contractAddress","status","Boolean","outputBlockFormatter","timestamp","difficulty","totalDifficulty","transactions","item","miner","inputLogFormatter","toTopic","addr","log","blockHash","transactionHash","logIndex","shaId","id","inputPostFormatter","post","ttl","workToProve","priority","outputPostFormatter","expiry","sent","workProved","outputSyncingFormatter","startingBlock","currentBlock","highestBlock","knownStates","pulledStates","config","inputFormatter","outputFormatter","nestedTypes","previous","staticArrayLength","arrayOffset","arrayStart","roundedNestedStaticPartLength","roundedLength"],"mappings":"qGAsBA,IAAIA,EAAI,EAAQ,QACZC,EAAK,EAAQ,QACbC,EAAa,EAAQ,QACrBC,EAAO,EAAQ,QACfC,EAAO,EAAQ,SAUfC,EAAO,SAAUC,GACjB,OAAOA,aAAkBL,GACpBK,GAAUA,EAAOC,aAA2C,OAA5BD,EAAOC,YAAYC,MAUxDC,EAAc,SAAUH,GACxB,OAAOA,GAAUA,EAAOC,aAA2C,cAA5BD,EAAOC,YAAYC,MAU1DE,EAAO,SAASC,GAChB,IACI,OAAOT,EAAWU,MAAM,KAAMC,WAChC,MAAMC,GACJ,MAAM,IAAIC,MAAMD,EAAI,kBAAmBH,EAAQ,OAYnDK,EAAmB,SAAUL,GAC7B,MAAO,KAAMD,EAAKC,GAAQM,OAAO,KAAKC,SAAS,GAAI,KAUnDC,EAAY,SAAUC,GAEtB,QAAK,uBAAuBC,KAAKD,QAGtB,yBAAyBC,KAAKD,KAAY,yBAAyBC,KAAKD,KAIxEE,EAAqBF,KAahCE,EAAuB,SAAUF,GAEjCA,EAAUA,EAAQG,QAAQ,OAAO,IAGjC,IAFA,IAAIC,EAAcC,EAAKL,EAAQM,eAAeH,QAAQ,OAAO,IAEpDI,EAAI,EAAGA,EAAI,GAAIA,IAEpB,GAAKC,SAASJ,EAAYG,GAAI,IAAM,GAAKP,EAAQO,GAAGE,gBAAkBT,EAAQO,IAAQC,SAASJ,EAAYG,GAAI,KAAO,GAAKP,EAAQO,GAAGD,gBAAkBN,EAAQO,GAC5J,OAAO,EAGf,OAAO,GAYPG,EAAU,SAAUC,EAAQC,EAAOC,GACnC,IAAIC,EAAY,OAAOb,KAAKU,IAA6B,kBAAXA,EAC9CA,EAASA,EAAOb,SAAS,IAAIK,QAAQ,OAAO,IAE5C,IAAIY,EAAWH,EAAQD,EAAOK,OAAS,GAAK,EAAKJ,EAAQD,EAAOK,OAAS,EAAI,EAE7E,OAAQF,EAAY,KAAO,IAAM,IAAIG,MAAMF,GAASG,KAAKL,GAAc,KAAOF,GAY9EQ,EAAW,SAAUR,EAAQC,EAAOC,GACpC,IAAIC,EAAY,OAAOb,KAAKU,IAA6B,kBAAXA,EAC9CA,EAASA,EAAOb,SAAS,IAAIK,QAAQ,OAAO,IAE5C,IAAIY,EAAWH,EAAQD,EAAOK,OAAS,GAAK,EAAKJ,EAAQD,EAAOK,OAAS,EAAI,EAE7E,OAAQF,EAAY,KAAO,IAAMH,EAAU,IAAIM,MAAMF,GAASG,KAAKL,GAAc,MAWjFO,EAAY,SAASC,GACrBA,EAAMtC,EAAKuC,OAAOD,GAClB,IAAIE,EAAM,GAGVF,EAAMA,EAAIlB,QAAQ,eAAe,IACjCkB,EAAMA,EAAIG,MAAM,IAAIC,UAAUP,KAAK,IACnCG,EAAMA,EAAIlB,QAAQ,eAAe,IACjCkB,EAAMA,EAAIG,MAAM,IAAIC,UAAUP,KAAK,IAEnC,IAAI,IAAIX,EAAI,EAAGA,EAAIc,EAAIL,OAAQT,IAAK,CAChC,IAAImB,EAAOL,EAAIM,WAAWpB,GAEtBqB,EAAIF,EAAK5B,SAAS,IACtByB,GAAOK,EAAEZ,OAAS,EAAI,IAAMY,EAAIA,EAIpC,MAAO,KAAOL,GAUdM,EAAY,SAASN,GACrB,IAAKO,EAAYP,GACb,MAAM,IAAI5B,MAAM,kBAAmB4B,EAAK,iCAE5C,IAAIF,EAAM,GACNK,EAAO,EACXH,EAAMA,EAAIpB,QAAQ,OAAO,IAGzBoB,EAAMA,EAAIpB,QAAQ,WAAW,IAC7BoB,EAAMA,EAAIC,MAAM,IAAIC,UAAUP,KAAK,IACnCK,EAAMA,EAAIpB,QAAQ,WAAW,IAC7BoB,EAAMA,EAAIC,MAAM,IAAIC,UAAUP,KAAK,IAInC,IAFA,IAAIa,EAAIR,EAAIP,OAEHT,EAAE,EAAGA,EAAIwB,EAAGxB,GAAG,EACpBmB,EAAOlB,SAASe,EAAIS,OAAOzB,EAAG,GAAI,IAElCc,GAAOY,OAAOC,aAAaR,GAI/B,OAAO3C,EAAKoD,OAAOd,IAWnBe,EAAc,SAAUC,GACxB,OAAKA,EAIE/C,EAAK+C,GAAOC,WAHRD,GAaXE,EAAoB,SAAUF,GAC9B,OAAKA,EAEE/C,EAAK+C,GAAOvC,SAAS,IAFTuC,GAanBG,EAAc,SAAUH,GACxB,GAAIzD,EAAE6D,OAAOJ,IAAUzD,EAAE8D,YAAYL,GACjC,OAAOA,EAGX,IAAKM,SAASN,KAAWP,EAAYO,GACjC,MAAM,IAAI1C,MAAM,gBAAgB0C,EAAM,sBAG1C,IAAI9C,EAASD,EAAK+C,GACdO,EAASrD,EAAOO,SAAS,IAE7B,OAAOP,EAAOsD,GAAG,IAAIhE,EAAG,IAAM,MAAQ+D,EAAOZ,OAAO,GAAK,KAAOY,GAahEE,EAAa,SAASC,GACtB,IAAK,IAAIxB,EAAM,GAAIhB,EAAI,EAAGA,EAAIwC,EAAM/B,OAAQT,IAExCgB,EAAIyB,MAAMD,EAAMxC,KAAO,GAAGT,SAAS,KACnCyB,EAAIyB,MAAiB,GAAXD,EAAMxC,IAAUT,SAAS,KAGvC,MAAO,KAAMyB,EAAIL,KAAK,KAYtB+B,EAAa,SAAS1B,GAGtB,GAFAA,EAAMA,EAAIzB,SAAS,KAEdgC,EAAYP,GACb,MAAM,IAAI5B,MAAM,gBAAiB4B,EAAK,gCAG1CA,EAAMA,EAAIpB,QAAQ,OAAO,IAEzB,IAAK,IAAI4C,EAAQ,GAAIG,EAAI,EAAGA,EAAI3B,EAAIP,OAAQkC,GAAK,EAC7CH,EAAMC,KAAKxC,SAASe,EAAIS,OAAOkB,EAAG,GAAI,KAC1C,OAAOH,GAaPI,EAAQ,SAAUd,EAAOe,GAGzB,GAAIrD,EAAUsC,GACV,OAAOe,EAAa,UAAY,KAAMf,EAAM/B,cAAcH,QAAQ,OAAO,IAG7E,GAAIvB,EAAEyE,UAAUhB,GACZ,OAAOe,EAAa,OAASf,EAAQ,OAAS,OAIlD,GAAIzD,EAAE0E,SAASjB,KAAWhD,EAAYgD,KAAWpD,EAAKoD,GAClD,OAAOe,EAAa,SAAWhC,EAAUmC,KAAKC,UAAUnB,IAI5D,GAAIzD,EAAE6E,SAASpB,GAAQ,CACnB,GAA6B,IAAzBA,EAAMqB,QAAQ,QAAyC,IAAzBrB,EAAMqB,QAAQ,OAC5C,OAAON,EAAa,SAAWZ,EAAYH,GACxC,GAA2B,IAAxBA,EAAMqB,QAAQ,OAAuC,IAAxBrB,EAAMqB,QAAQ,MACjD,OAAON,EAAa,QAAUf,EAC3B,IAAKM,SAASN,GACjB,OAAOe,EAAa,SAAWhC,EAAUiB,GAIjD,OAAOe,EAAcf,EAAQ,EAAI,SAAW,UAAaG,EAAYH,IAWrEP,EAAc,SAAUP,GACxB,OAAS3C,EAAE6E,SAASlC,IAAQ3C,EAAE+E,SAASpC,KAAS,qBAAqBtB,KAAKsB,IAU1EqC,EAAQ,SAAUrC,GAClB,OAAS3C,EAAE6E,SAASlC,IAAQ3C,EAAE+E,SAASpC,KAAS,wBAAwBtB,KAAKsB,IAa7EsC,EAAU,SAAUC,GACpB,QAAK,wBAAwB7D,KAAK6D,OAEvB,uBAAuB7D,KAAK6D,KAAU,uBAAuB7D,KAAK6D,KAe7EC,EAAU,SAAUC,GACpB,QAAK,uBAAuB/D,KAAK+D,OAEtB,sBAAsB/D,KAAK+D,KAAU,sBAAsB/D,KAAK+D,KAe3EC,EAAc,qEAEd5D,EAAO,SAAUgC,GACbP,EAAYO,IAAU,OAAOpC,KAAK,EAAQH,cAC1CuC,EAAQY,EAAWZ,IAGvB,IAAI6B,EAAclF,EAAKmF,UAAU9B,GAEjC,OAAG6B,IAAgBD,EACR,KAEAC,GAIf7D,EAAK+D,MAAQpF,EAGbqF,EAAOC,QAAU,CACbzF,GAAIA,EACJI,KAAMA,EACNI,YAAaA,EACbC,KAAMA,EACNS,UAAWA,EACX8D,QAASA,EACTE,QAASA,EACT7D,qBAAsBA,EACtBkB,UAAWA,EACXS,UAAWA,EACXO,YAAaA,EACbG,kBAAmBA,EACnBC,YAAaA,EACbW,MAAOA,EACPF,WAAYA,EACZH,WAAYA,EACZc,MAAOA,EACP9B,YAAaA,EACbpB,QAASA,EACTS,SAAUA,EACVvB,iBAAkBA,EAClBS,KAAMA,I,uBCjdV,IAAIkE,EAAI,EAAQ,QACZC,EAAe,EAAQ,QAYvBC,EAAmB,WACnBC,KAAKC,gBAAkBJ,EAAEK,gBACzBF,KAAKG,iBAAmBN,EAAEO,kBAG9BL,EAAiBM,UAAY,IAAIP,EAAa,IAC9CC,EAAiBM,UAAU5F,YAAcsF,EAEzCA,EAAiBM,UAAUC,OAAS,SAAU5F,GAC1C,QAASA,EAAK6F,MAAM,0BAGxBZ,EAAOC,QAAUG,G,uBCzBjB,IAAIF,EAAI,EAAQ,QACZC,EAAe,EAAQ,QAEvBU,EAA2B,WAC3BR,KAAKC,gBAAkBJ,EAAEY,wBACzBT,KAAKG,iBAAmBN,EAAEa,0BAG9BF,EAAyBH,UAAY,IAAIP,EAAa,IACtDU,EAAyBH,UAAU5F,YAAc+F,EAEjDA,EAAyBH,UAAUC,OAAS,SAAU5F,GAClD,QAASA,EAAK6F,MAAM,2BAGxBC,EAAyBH,UAAUM,cAAgB,WAC/C,OAAO,GAGXhB,EAAOC,QAAUY,G,oCCKjB,IAAII,EAAS,EAAQ,QACjBC,EAAa,EAAQ,QAEzBlB,EAAOC,QAAU,CACbgB,OAAQA,EACRC,WAAYA,I,wBC7BhB,2BACE,aAGA,SAASC,EAAQC,EAAKC,GACpB,IAAKD,EAAK,MAAM,IAAI9F,MAAM+F,GAAO,oBAKnC,SAASC,EAAUC,EAAMC,GACvBD,EAAKE,OAASD,EACd,IAAIE,EAAW,aACfA,EAAShB,UAAYc,EAAUd,UAC/Ba,EAAKb,UAAY,IAAIgB,EACrBH,EAAKb,UAAU5F,YAAcyG,EAK/B,SAAS/G,EAAIU,EAAQyG,EAAMC,GACzB,GAAIpH,EAAGI,KAAKM,GACV,OAAOA,EAGTmF,KAAKwB,SAAW,EAChBxB,KAAKyB,MAAQ,KACbzB,KAAK1D,OAAS,EAGd0D,KAAK0B,IAAM,KAEI,OAAX7G,IACW,OAATyG,GAA0B,OAATA,IACnBC,EAASD,EACTA,EAAO,IAGTtB,KAAK2B,MAAM9G,GAAU,EAAGyG,GAAQ,GAAIC,GAAU,OAYlD,IAAIK,EATkB,kBAAXjC,EACTA,EAAOC,QAAUzF,EAEjByF,EAAQzF,GAAKA,EAGfA,EAAGA,GAAKA,EACRA,EAAG0H,SAAW,GAGd,IACED,EAAS,EAAQ,QAAeA,OAChC,MAAO5G,IAoIT,SAAS8G,EAAUnF,EAAKoF,EAAOC,GAG7B,IAFA,IAAIC,EAAI,EACJC,EAAMC,KAAKC,IAAIzF,EAAIL,OAAQ0F,GACtBnG,EAAIkG,EAAOlG,EAAIqG,EAAKrG,IAAK,CAChC,IAAI2C,EAAI7B,EAAIM,WAAWpB,GAAK,GAE5BoG,IAAM,EAIJA,GADEzD,GAAK,IAAMA,GAAK,GACbA,EAAI,GAAK,GAGLA,GAAK,IAAMA,GAAK,GACpBA,EAAI,GAAK,GAIL,GAAJA,EAGT,OAAOyD,EAiCT,SAASI,EAAW1F,EAAKoF,EAAOC,EAAKM,GAGnC,IAFA,IAAIL,EAAI,EACJC,EAAMC,KAAKC,IAAIzF,EAAIL,OAAQ0F,GACtBnG,EAAIkG,EAAOlG,EAAIqG,EAAKrG,IAAK,CAChC,IAAI2C,EAAI7B,EAAIM,WAAWpB,GAAK,GAE5BoG,GAAKK,EAIHL,GADEzD,GAAK,GACFA,EAAI,GAAK,GAGLA,GAAK,GACTA,EAAI,GAAK,GAITA,EAGT,OAAOyD,EA5MT9H,EAAGI,KAAO,SAAegI,GACvB,OAAIA,aAAepI,GAIJ,OAARoI,GAA+B,kBAARA,GAC5BA,EAAI9H,YAAYoH,WAAa1H,EAAG0H,UAAYtF,MAAMiG,QAAQD,EAAId,QAGlEtH,EAAGsI,IAAM,SAAcC,EAAMC,GAC3B,OAAID,EAAKE,IAAID,GAAS,EAAUD,EACzBC,GAGTxI,EAAGiI,IAAM,SAAcM,EAAMC,GAC3B,OAAID,EAAKE,IAAID,GAAS,EAAUD,EACzBC,GAGTxI,EAAGkG,UAAUsB,MAAQ,SAAe9G,EAAQyG,EAAMC,GAChD,GAAsB,kBAAX1G,EACT,OAAOmF,KAAK6C,YAAYhI,EAAQyG,EAAMC,GAGxC,GAAsB,kBAAX1G,EACT,OAAOmF,KAAK8C,WAAWjI,EAAQyG,EAAMC,GAG1B,QAATD,IACFA,EAAO,IAETR,EAAOQ,KAAiB,EAAPA,IAAaA,GAAQ,GAAKA,GAAQ,IAEnDzG,EAASA,EAAOO,WAAWK,QAAQ,OAAQ,IAC3C,IAAIsG,EAAQ,EACM,MAAdlH,EAAO,IACTkH,IAGW,KAATT,EACFtB,KAAK+C,UAAUlI,EAAQkH,GAEvB/B,KAAKgD,WAAWnI,EAAQyG,EAAMS,GAGd,MAAdlH,EAAO,KACTmF,KAAKwB,SAAW,GAGlBxB,KAAKiD,QAEU,OAAX1B,GAEJvB,KAAK8C,WAAW9C,KAAKkD,UAAW5B,EAAMC,IAGxCpH,EAAGkG,UAAUwC,YAAc,SAAsBhI,EAAQyG,EAAMC,GACzD1G,EAAS,IACXmF,KAAKwB,SAAW,EAChB3G,GAAUA,GAERA,EAAS,UACXmF,KAAKyB,MAAQ,CAAW,SAAT5G,GACfmF,KAAK1D,OAAS,GACLzB,EAAS,kBAClBmF,KAAKyB,MAAQ,CACF,SAAT5G,EACCA,EAAS,SAAa,UAEzBmF,KAAK1D,OAAS,IAEdwE,EAAOjG,EAAS,kBAChBmF,KAAKyB,MAAQ,CACF,SAAT5G,EACCA,EAAS,SAAa,SACvB,GAEFmF,KAAK1D,OAAS,GAGD,OAAXiF,GAGJvB,KAAK8C,WAAW9C,KAAKkD,UAAW5B,EAAMC,IAGxCpH,EAAGkG,UAAUyC,WAAa,SAAqBjI,EAAQyG,EAAMC,GAG3D,GADAT,EAAgC,kBAAlBjG,EAAOyB,QACjBzB,EAAOyB,QAAU,EAGnB,OAFA0D,KAAKyB,MAAQ,CAAE,GACfzB,KAAK1D,OAAS,EACP0D,KAGTA,KAAK1D,OAAS6F,KAAKgB,KAAKtI,EAAOyB,OAAS,GACxC0D,KAAKyB,MAAQ,IAAIlF,MAAMyD,KAAK1D,QAC5B,IAAK,IAAIT,EAAI,EAAGA,EAAImE,KAAK1D,OAAQT,IAC/BmE,KAAKyB,MAAM5F,GAAK,EAGlB,IAAIuH,EAAGC,EACHC,EAAM,EACV,GAAe,OAAX/B,EACF,IAAK1F,EAAIhB,EAAOyB,OAAS,EAAG8G,EAAI,EAAGvH,GAAK,EAAGA,GAAK,EAC9CwH,EAAIxI,EAAOgB,GAAMhB,EAAOgB,EAAI,IAAM,EAAMhB,EAAOgB,EAAI,IAAM,GACzDmE,KAAKyB,MAAM2B,IAAOC,GAAKC,EAAO,SAC9BtD,KAAKyB,MAAM2B,EAAI,GAAMC,IAAO,GAAKC,EAAQ,SACzCA,GAAO,GACHA,GAAO,KACTA,GAAO,GACPF,UAGC,GAAe,OAAX7B,EACT,IAAK1F,EAAI,EAAGuH,EAAI,EAAGvH,EAAIhB,EAAOyB,OAAQT,GAAK,EACzCwH,EAAIxI,EAAOgB,GAAMhB,EAAOgB,EAAI,IAAM,EAAMhB,EAAOgB,EAAI,IAAM,GACzDmE,KAAKyB,MAAM2B,IAAOC,GAAKC,EAAO,SAC9BtD,KAAKyB,MAAM2B,EAAI,GAAMC,IAAO,GAAKC,EAAQ,SACzCA,GAAO,GACHA,GAAO,KACTA,GAAO,GACPF,KAIN,OAAOpD,KAAKiD,SA2Bd9I,EAAGkG,UAAU0C,UAAY,SAAoBlI,EAAQkH,GAEnD/B,KAAK1D,OAAS6F,KAAKgB,MAAMtI,EAAOyB,OAASyF,GAAS,GAClD/B,KAAKyB,MAAQ,IAAIlF,MAAMyD,KAAK1D,QAC5B,IAAK,IAAIT,EAAI,EAAGA,EAAImE,KAAK1D,OAAQT,IAC/BmE,KAAKyB,MAAM5F,GAAK,EAGlB,IAAIuH,EAAGC,EAEHC,EAAM,EACV,IAAKzH,EAAIhB,EAAOyB,OAAS,EAAG8G,EAAI,EAAGvH,GAAKkG,EAAOlG,GAAK,EAClDwH,EAAIvB,EAASjH,EAAQgB,EAAGA,EAAI,GAC5BmE,KAAKyB,MAAM2B,IAAOC,GAAKC,EAAO,SAE9BtD,KAAKyB,MAAM2B,EAAI,IAAMC,IAAO,GAAKC,EAAO,QACxCA,GAAO,GACHA,GAAO,KACTA,GAAO,GACPF,KAGAvH,EAAI,IAAMkG,IACZsB,EAAIvB,EAASjH,EAAQkH,EAAOlG,EAAI,GAChCmE,KAAKyB,MAAM2B,IAAOC,GAAKC,EAAO,SAC9BtD,KAAKyB,MAAM2B,EAAI,IAAMC,IAAO,GAAKC,EAAO,SAE1CtD,KAAKiD,SA2BP9I,EAAGkG,UAAU2C,WAAa,SAAqBnI,EAAQyG,EAAMS,GAE3D/B,KAAKyB,MAAQ,CAAE,GACfzB,KAAK1D,OAAS,EAGd,IAAK,IAAIiH,EAAU,EAAGC,EAAU,EAAGA,GAAW,SAAWA,GAAWlC,EAClEiC,IAEFA,IACAC,EAAWA,EAAUlC,EAAQ,EAO7B,IALA,IAAImC,EAAQ5I,EAAOyB,OAASyF,EACxB2B,EAAMD,EAAQF,EACdvB,EAAMG,KAAKC,IAAIqB,EAAOA,EAAQC,GAAO3B,EAErC4B,EAAO,EACF9H,EAAIkG,EAAOlG,EAAImG,EAAKnG,GAAK0H,EAChCI,EAAOtB,EAAUxH,EAAQgB,EAAGA,EAAI0H,EAASjC,GAEzCtB,KAAK4D,MAAMJ,GACPxD,KAAKyB,MAAM,GAAKkC,EAAO,SACzB3D,KAAKyB,MAAM,IAAMkC,EAEjB3D,KAAK6D,OAAOF,GAIhB,GAAY,IAARD,EAAW,CACb,IAAII,EAAM,EAGV,IAFAH,EAAOtB,EAAUxH,EAAQgB,EAAGhB,EAAOyB,OAAQgF,GAEtCzF,EAAI,EAAGA,EAAI6H,EAAK7H,IACnBiI,GAAOxC,EAGTtB,KAAK4D,MAAME,GACP9D,KAAKyB,MAAM,GAAKkC,EAAO,SACzB3D,KAAKyB,MAAM,IAAMkC,EAEjB3D,KAAK6D,OAAOF,KAKlBxJ,EAAGkG,UAAU0D,KAAO,SAAeC,GACjCA,EAAKvC,MAAQ,IAAIlF,MAAMyD,KAAK1D,QAC5B,IAAK,IAAIT,EAAI,EAAGA,EAAImE,KAAK1D,OAAQT,IAC/BmI,EAAKvC,MAAM5F,GAAKmE,KAAKyB,MAAM5F,GAE7BmI,EAAK1H,OAAS0D,KAAK1D,OACnB0H,EAAKxC,SAAWxB,KAAKwB,SACrBwC,EAAKtC,IAAM1B,KAAK0B,KAGlBvH,EAAGkG,UAAU4D,MAAQ,WACnB,IAAIhC,EAAI,IAAI9H,EAAG,MAEf,OADA6F,KAAK+D,KAAK9B,GACHA,GAGT9H,EAAGkG,UAAU6D,QAAU,SAAkBC,GACvC,MAAOnE,KAAK1D,OAAS6H,EACnBnE,KAAKyB,MAAMzB,KAAK1D,UAAY,EAE9B,OAAO0D,MAIT7F,EAAGkG,UAAU4C,MAAQ,WACnB,MAAOjD,KAAK1D,OAAS,GAAqC,IAAhC0D,KAAKyB,MAAMzB,KAAK1D,OAAS,GACjD0D,KAAK1D,SAEP,OAAO0D,KAAKoE,aAGdjK,EAAGkG,UAAU+D,UAAY,WAKvB,OAHoB,IAAhBpE,KAAK1D,QAAkC,IAAlB0D,KAAKyB,MAAM,KAClCzB,KAAKwB,SAAW,GAEXxB,MAGT7F,EAAGkG,UAAUgE,QAAU,WACrB,OAAQrE,KAAK0B,IAAM,UAAY,SAAW1B,KAAK5E,SAAS,IAAM,KAiChE,IAAIkJ,EAAQ,CACV,GACA,IACA,KACA,MACA,OACA,QACA,SACA,UACA,WACA,YACA,aACA,cACA,eACA,gBACA,iBACA,kBACA,mBACA,oBACA,qBACA,sBACA,uBACA,wBACA,yBACA,0BACA,2BACA,6BAGEC,EAAa,CACf,EAAG,EACH,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EACvB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAGhBC,EAAa,CACf,EAAG,EACH,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAC5D,SAAU,IAAU,SAAU,SAAU,SAAU,QAAS,SAC3D,SAAU,SAAU,SAAU,SAAU,KAAU,QAAS,QAC3D,QAAS,QAAS,QAAS,SAAU,SAAU,SAAU,SACzD,MAAU,SAAU,SAAU,SAAU,SAAU,SAAU,UAyM9D,SAASC,EAAYlC,GAGnB,IAFA,IAAIc,EAAI,IAAI9G,MAAMgG,EAAImC,aAEbC,EAAM,EAAGA,EAAMtB,EAAE/G,OAAQqI,IAAO,CACvC,IAAIrB,EAAOqB,EAAM,GAAM,EACnBC,EAAOD,EAAM,GAEjBtB,EAAEsB,IAAQpC,EAAId,MAAM6B,GAAQ,GAAKsB,KAAWA,EAG9C,OAAOvB,EAmWT,SAASwB,EAAYC,EAAMvC,EAAKwC,GAC9BA,EAAIvD,SAAWe,EAAIf,SAAWsD,EAAKtD,SACnC,IAAIU,EAAO4C,EAAKxI,OAASiG,EAAIjG,OAAU,EACvCyI,EAAIzI,OAAS4F,EACbA,EAAOA,EAAM,EAAK,EAGlB,IAAI8C,EAAoB,EAAhBF,EAAKrD,MAAM,GACfwD,EAAmB,EAAf1C,EAAId,MAAM,GACdQ,EAAI+C,EAAIC,EAERC,EAAS,SAAJjD,EACLkD,EAASlD,EAAI,SAAa,EAC9B8C,EAAItD,MAAM,GAAKyD,EAEf,IAAK,IAAIE,EAAI,EAAGA,EAAIlD,EAAKkD,IAAK,CAM5B,IAHA,IAAIC,EAASF,IAAU,GACnBG,EAAgB,SAARH,EACRI,EAAOpD,KAAKC,IAAIgD,EAAG7C,EAAIjG,OAAS,GAC3B8G,EAAIjB,KAAKM,IAAI,EAAG2C,EAAIN,EAAKxI,OAAS,GAAI8G,GAAKmC,EAAMnC,IAAK,CAC7D,IAAIvH,EAAKuJ,EAAIhC,EAAK,EAClB4B,EAAoB,EAAhBF,EAAKrD,MAAM5F,GACfoJ,EAAmB,EAAf1C,EAAId,MAAM2B,GACdnB,EAAI+C,EAAIC,EAAIK,EACZD,GAAWpD,EAAI,SAAa,EAC5BqD,EAAY,SAAJrD,EAEV8C,EAAItD,MAAM2D,GAAa,EAARE,EACfH,EAAiB,EAATE,EAQV,OANc,IAAVF,EACFJ,EAAItD,MAAM2D,GAAa,EAARD,EAEfJ,EAAIzI,SAGCyI,EAAI9B,QAzlBb9I,EAAGkG,UAAUjF,SAAW,SAAmBkG,EAAMjF,GAI/C,IAAI0I,EACJ,GAJAzD,EAAOA,GAAQ,GACfjF,EAAoB,EAAVA,GAAe,EAGZ,KAATiF,GAAwB,QAATA,EAAgB,CACjCyD,EAAM,GAGN,IAFA,IAAIzB,EAAM,EACN6B,EAAQ,EACHtJ,EAAI,EAAGA,EAAImE,KAAK1D,OAAQT,IAAK,CACpC,IAAIwH,EAAIrD,KAAKyB,MAAM5F,GACf8H,GAA+B,UAArBN,GAAKC,EAAO6B,IAAmB/J,SAAS,IACtD+J,EAAS9B,IAAO,GAAKC,EAAQ,SAE3ByB,EADY,IAAVI,GAAetJ,IAAMmE,KAAK1D,OAAS,EAC/BgI,EAAM,EAAIX,EAAKrH,QAAUqH,EAAOoB,EAEhCpB,EAAOoB,EAEfzB,GAAO,EACHA,GAAO,KACTA,GAAO,GACPzH,KAGU,IAAVsJ,IACFJ,EAAMI,EAAM/J,SAAS,IAAM2J,GAE7B,MAAOA,EAAIzI,OAASD,IAAY,EAC9B0I,EAAM,IAAMA,EAKd,OAHsB,IAAlB/E,KAAKwB,WACPuD,EAAM,IAAMA,GAEPA,EAGT,GAAIzD,KAAiB,EAAPA,IAAaA,GAAQ,GAAKA,GAAQ,GAAI,CAElD,IAAIkE,EAAYjB,EAAWjD,GAEvBmE,EAAYjB,EAAWlD,GAC3ByD,EAAM,GACN,IAAIvG,EAAIwB,KAAKiE,QACbzF,EAAEgD,SAAW,EACb,OAAQhD,EAAEkH,SAAU,CAClB,IAAIzD,EAAIzD,EAAEmH,KAAKF,GAAWrK,SAASkG,GACnC9C,EAAIA,EAAEoH,MAAMH,GAKVV,EAHGvG,EAAEkH,SAGCzD,EAAI8C,EAFJT,EAAMkB,EAAYvD,EAAE3F,QAAU2F,EAAI8C,EAKxC/E,KAAK0F,WACPX,EAAM,IAAMA,GAEd,MAAOA,EAAIzI,OAASD,IAAY,EAC9B0I,EAAM,IAAMA,EAKd,OAHsB,IAAlB/E,KAAKwB,WACPuD,EAAM,IAAMA,GAEPA,EAGTjE,GAAO,EAAO,oCAGhB3G,EAAGkG,UAAUzC,SAAW,WACtB,IAAIiI,EAAM7F,KAAKyB,MAAM,GASrB,OARoB,IAAhBzB,KAAK1D,OACPuJ,GAAuB,SAAhB7F,KAAKyB,MAAM,GACO,IAAhBzB,KAAK1D,QAAkC,IAAlB0D,KAAKyB,MAAM,GAEzCoE,GAAO,iBAAoC,SAAhB7F,KAAKyB,MAAM,GAC7BzB,KAAK1D,OAAS,GACvBwE,GAAO,EAAO,8CAEU,IAAlBd,KAAKwB,UAAmBqE,EAAMA,GAGxC1L,EAAGkG,UAAUyF,OAAS,WACpB,OAAO9F,KAAK5E,SAAS,KAGvBjB,EAAGkG,UAAU0F,SAAW,SAAmBxE,EAAQjF,GAEjD,OADAwE,EAAyB,qBAAXc,GACP5B,KAAKgG,YAAYpE,EAAQL,EAAQjF,IAG1CnC,EAAGkG,UAAU6C,QAAU,SAAkB3B,EAAQjF,GAC/C,OAAO0D,KAAKgG,YAAYzJ,MAAOgF,EAAQjF,IAGzCnC,EAAGkG,UAAU2F,YAAc,SAAsBC,EAAW1E,EAAQjF,GAClE,IAAI4J,EAAalG,KAAKkG,aAClBC,EAAY7J,GAAU6F,KAAKM,IAAI,EAAGyD,GACtCpF,EAAOoF,GAAcC,EAAW,yCAChCrF,EAAOqF,EAAY,EAAG,+BAEtBnG,KAAKiD,QACL,IAGIgC,EAAGpJ,EAHHuK,EAA0B,OAAX7E,EACf8E,EAAM,IAAIJ,EAAUE,GAGpBG,EAAItG,KAAKiE,QACb,GAAKmC,EAYE,CACL,IAAKvK,EAAI,GAAIyK,EAAEZ,SAAU7J,IACvBoJ,EAAIqB,EAAEC,MAAM,KACZD,EAAEE,OAAO,GAETH,EAAIxK,GAAKoJ,EAGX,KAAOpJ,EAAIsK,EAAWtK,IACpBwK,EAAIxK,GAAK,MArBM,CAEjB,IAAKA,EAAI,EAAGA,EAAIsK,EAAYD,EAAYrK,IACtCwK,EAAIxK,GAAK,EAGX,IAAKA,EAAI,GAAIyK,EAAEZ,SAAU7J,IACvBoJ,EAAIqB,EAAEC,MAAM,KACZD,EAAEE,OAAO,GAETH,EAAIF,EAAYtK,EAAI,GAAKoJ,EAe7B,OAAOoB,GAGLlE,KAAKsE,MACPtM,EAAGkG,UAAUqG,WAAa,SAAqBrD,GAC7C,OAAO,GAAKlB,KAAKsE,MAAMpD,IAGzBlJ,EAAGkG,UAAUqG,WAAa,SAAqBrD,GAC7C,IAAIsD,EAAItD,EACJpB,EAAI,EAiBR,OAhBI0E,GAAK,OACP1E,GAAK,GACL0E,KAAO,IAELA,GAAK,KACP1E,GAAK,EACL0E,KAAO,GAELA,GAAK,IACP1E,GAAK,EACL0E,KAAO,GAELA,GAAK,IACP1E,GAAK,EACL0E,KAAO,GAEF1E,EAAI0E,GAIfxM,EAAGkG,UAAUuG,UAAY,SAAoBvD,GAE3C,GAAU,IAANA,EAAS,OAAO,GAEpB,IAAIsD,EAAItD,EACJpB,EAAI,EAoBR,OAnBqB,KAAZ,KAAJ0E,KACH1E,GAAK,GACL0E,KAAO,IAEU,KAAV,IAAJA,KACH1E,GAAK,EACL0E,KAAO,GAES,KAAT,GAAJA,KACH1E,GAAK,EACL0E,KAAO,GAES,KAAT,EAAJA,KACH1E,GAAK,EACL0E,KAAO,GAES,KAAT,EAAJA,IACH1E,IAEKA,GAIT9H,EAAGkG,UAAUqE,UAAY,WACvB,IAAIrB,EAAIrD,KAAKyB,MAAMzB,KAAK1D,OAAS,GAC7BuK,EAAK7G,KAAK0G,WAAWrD,GACzB,OAA2B,IAAnBrD,KAAK1D,OAAS,GAAUuK,GAiBlC1M,EAAGkG,UAAUyG,SAAW,WACtB,GAAI9G,KAAK0F,SAAU,OAAO,EAG1B,IADA,IAAIzD,EAAI,EACCpG,EAAI,EAAGA,EAAImE,KAAK1D,OAAQT,IAAK,CACpC,IAAIoJ,EAAIjF,KAAK4G,UAAU5G,KAAKyB,MAAM5F,IAElC,GADAoG,GAAKgD,EACK,KAANA,EAAU,MAEhB,OAAOhD,GAGT9H,EAAGkG,UAAU6F,WAAa,WACxB,OAAO/D,KAAKgB,KAAKnD,KAAK0E,YAAc,IAGtCvK,EAAGkG,UAAUlF,OAAS,SAAiB4L,GACrC,OAAsB,IAAlB/G,KAAKwB,SACAxB,KAAKgH,MAAMC,MAAMF,GAAOG,MAAM,GAEhClH,KAAKiE,SAGd9J,EAAGkG,UAAU8G,SAAW,SAAmBJ,GACzC,OAAI/G,KAAKoH,MAAML,EAAQ,GACd/G,KAAKqH,KAAKN,GAAOG,MAAM,GAAGI,OAE5BtH,KAAKiE,SAGd9J,EAAGkG,UAAUkH,MAAQ,WACnB,OAAyB,IAAlBvH,KAAKwB,UAIdrH,EAAGkG,UAAUmH,IAAM,WACjB,OAAOxH,KAAKiE,QAAQqD,QAGtBnN,EAAGkG,UAAUiH,KAAO,WAKlB,OAJKtH,KAAK0F,WACR1F,KAAKwB,UAAY,GAGZxB,MAIT7F,EAAGkG,UAAUoH,KAAO,SAAelF,GACjC,MAAOvC,KAAK1D,OAASiG,EAAIjG,OACvB0D,KAAKyB,MAAMzB,KAAK1D,UAAY,EAG9B,IAAK,IAAIT,EAAI,EAAGA,EAAI0G,EAAIjG,OAAQT,IAC9BmE,KAAKyB,MAAM5F,GAAKmE,KAAKyB,MAAM5F,GAAK0G,EAAId,MAAM5F,GAG5C,OAAOmE,KAAKiD,SAGd9I,EAAGkG,UAAUqH,IAAM,SAAcnF,GAE/B,OADAzB,EAA0C,KAAlCd,KAAKwB,SAAWe,EAAIf,WACrBxB,KAAKyH,KAAKlF,IAInBpI,EAAGkG,UAAUsH,GAAK,SAAapF,GAC7B,OAAIvC,KAAK1D,OAASiG,EAAIjG,OAAe0D,KAAKiE,QAAQyD,IAAInF,GAC/CA,EAAI0B,QAAQyD,IAAI1H,OAGzB7F,EAAGkG,UAAUuH,IAAM,SAAcrF,GAC/B,OAAIvC,KAAK1D,OAASiG,EAAIjG,OAAe0D,KAAKiE,QAAQwD,KAAKlF,GAChDA,EAAI0B,QAAQwD,KAAKzH,OAI1B7F,EAAGkG,UAAUwH,MAAQ,SAAgBtF,GAEnC,IAAI0C,EAEFA,EADEjF,KAAK1D,OAASiG,EAAIjG,OAChBiG,EAEAvC,KAGN,IAAK,IAAInE,EAAI,EAAGA,EAAIoJ,EAAE3I,OAAQT,IAC5BmE,KAAKyB,MAAM5F,GAAKmE,KAAKyB,MAAM5F,GAAK0G,EAAId,MAAM5F,GAK5C,OAFAmE,KAAK1D,OAAS2I,EAAE3I,OAET0D,KAAKiD,SAGd9I,EAAGkG,UAAUyH,KAAO,SAAevF,GAEjC,OADAzB,EAA0C,KAAlCd,KAAKwB,SAAWe,EAAIf,WACrBxB,KAAK6H,MAAMtF,IAIpBpI,EAAGkG,UAAU0H,IAAM,SAAcxF,GAC/B,OAAIvC,KAAK1D,OAASiG,EAAIjG,OAAe0D,KAAKiE,QAAQ6D,KAAKvF,GAChDA,EAAI0B,QAAQ6D,KAAK9H,OAG1B7F,EAAGkG,UAAU2H,KAAO,SAAezF,GACjC,OAAIvC,KAAK1D,OAASiG,EAAIjG,OAAe0D,KAAKiE,QAAQ4D,MAAMtF,GACjDA,EAAI0B,QAAQ4D,MAAM7H,OAI3B7F,EAAGkG,UAAU4H,MAAQ,SAAgB1F,GAEnC,IAAIyC,EACAC,EACAjF,KAAK1D,OAASiG,EAAIjG,QACpB0I,EAAIhF,KACJiF,EAAI1C,IAEJyC,EAAIzC,EACJ0C,EAAIjF,MAGN,IAAK,IAAInE,EAAI,EAAGA,EAAIoJ,EAAE3I,OAAQT,IAC5BmE,KAAKyB,MAAM5F,GAAKmJ,EAAEvD,MAAM5F,GAAKoJ,EAAExD,MAAM5F,GAGvC,GAAImE,OAASgF,EACX,KAAOnJ,EAAImJ,EAAE1I,OAAQT,IACnBmE,KAAKyB,MAAM5F,GAAKmJ,EAAEvD,MAAM5F,GAM5B,OAFAmE,KAAK1D,OAAS0I,EAAE1I,OAET0D,KAAKiD,SAGd9I,EAAGkG,UAAU6H,KAAO,SAAe3F,GAEjC,OADAzB,EAA0C,KAAlCd,KAAKwB,SAAWe,EAAIf,WACrBxB,KAAKiI,MAAM1F,IAIpBpI,EAAGkG,UAAU8H,IAAM,SAAc5F,GAC/B,OAAIvC,KAAK1D,OAASiG,EAAIjG,OAAe0D,KAAKiE,QAAQiE,KAAK3F,GAChDA,EAAI0B,QAAQiE,KAAKlI,OAG1B7F,EAAGkG,UAAU+H,KAAO,SAAe7F,GACjC,OAAIvC,KAAK1D,OAASiG,EAAIjG,OAAe0D,KAAKiE,QAAQgE,MAAM1F,GACjDA,EAAI0B,QAAQgE,MAAMjI,OAI3B7F,EAAGkG,UAAU4G,MAAQ,SAAgBF,GACnCjG,EAAwB,kBAAViG,GAAsBA,GAAS,GAE7C,IAAIsB,EAAsC,EAAxBlG,KAAKgB,KAAK4D,EAAQ,IAChCuB,EAAWvB,EAAQ,GAGvB/G,KAAKkE,QAAQmE,GAETC,EAAW,GACbD,IAIF,IAAK,IAAIxM,EAAI,EAAGA,EAAIwM,EAAaxM,IAC/BmE,KAAKyB,MAAM5F,GAAsB,UAAhBmE,KAAKyB,MAAM5F,GAS9B,OALIyM,EAAW,IACbtI,KAAKyB,MAAM5F,IAAMmE,KAAKyB,MAAM5F,GAAM,UAAc,GAAKyM,GAIhDtI,KAAKiD,SAGd9I,EAAGkG,UAAUgH,KAAO,SAAeN,GACjC,OAAO/G,KAAKiE,QAAQgD,MAAMF,IAI5B5M,EAAGkG,UAAUkI,KAAO,SAAe5D,EAAK5D,GACtCD,EAAsB,kBAAR6D,GAAoBA,GAAO,GAEzC,IAAIrB,EAAOqB,EAAM,GAAM,EACnBC,EAAOD,EAAM,GAUjB,OARA3E,KAAKkE,QAAQZ,EAAM,GAGjBtD,KAAKyB,MAAM6B,GADTvC,EACgBf,KAAKyB,MAAM6B,GAAQ,GAAKsB,EAExB5E,KAAKyB,MAAM6B,KAAS,GAAKsB,GAGtC5E,KAAKiD,SAId9I,EAAGkG,UAAUmI,KAAO,SAAejG,GACjC,IAAIN,EAkBA+C,EAAGC,EAfP,GAAsB,IAAlBjF,KAAKwB,UAAmC,IAAjBe,EAAIf,SAI7B,OAHAxB,KAAKwB,SAAW,EAChBS,EAAIjC,KAAKyI,KAAKlG,GACdvC,KAAKwB,UAAY,EACVxB,KAAKoE,YAGP,GAAsB,IAAlBpE,KAAKwB,UAAmC,IAAjBe,EAAIf,SAIpC,OAHAe,EAAIf,SAAW,EACfS,EAAIjC,KAAKyI,KAAKlG,GACdA,EAAIf,SAAW,EACRS,EAAEmC,YAKPpE,KAAK1D,OAASiG,EAAIjG,QACpB0I,EAAIhF,KACJiF,EAAI1C,IAEJyC,EAAIzC,EACJ0C,EAAIjF,MAIN,IADA,IAAImF,EAAQ,EACHtJ,EAAI,EAAGA,EAAIoJ,EAAE3I,OAAQT,IAC5BoG,GAAkB,EAAb+C,EAAEvD,MAAM5F,KAAwB,EAAboJ,EAAExD,MAAM5F,IAAUsJ,EAC1CnF,KAAKyB,MAAM5F,GAAS,SAAJoG,EAChBkD,EAAQlD,IAAM,GAEhB,KAAiB,IAAVkD,GAAetJ,EAAImJ,EAAE1I,OAAQT,IAClCoG,GAAkB,EAAb+C,EAAEvD,MAAM5F,IAAUsJ,EACvBnF,KAAKyB,MAAM5F,GAAS,SAAJoG,EAChBkD,EAAQlD,IAAM,GAIhB,GADAjC,KAAK1D,OAAS0I,EAAE1I,OACF,IAAV6I,EACFnF,KAAKyB,MAAMzB,KAAK1D,QAAU6I,EAC1BnF,KAAK1D,cAEA,GAAI0I,IAAMhF,KACf,KAAOnE,EAAImJ,EAAE1I,OAAQT,IACnBmE,KAAKyB,MAAM5F,GAAKmJ,EAAEvD,MAAM5F,GAI5B,OAAOmE,MAIT7F,EAAGkG,UAAUqI,IAAM,SAAcnG,GAC/B,IAAI8D,EACJ,OAAqB,IAAjB9D,EAAIf,UAAoC,IAAlBxB,KAAKwB,UAC7Be,EAAIf,SAAW,EACf6E,EAAMrG,KAAK2I,IAAIpG,GACfA,EAAIf,UAAY,EACT6E,GACmB,IAAjB9D,EAAIf,UAAoC,IAAlBxB,KAAKwB,UACpCxB,KAAKwB,SAAW,EAChB6E,EAAM9D,EAAIoG,IAAI3I,MACdA,KAAKwB,SAAW,EACT6E,GAGLrG,KAAK1D,OAASiG,EAAIjG,OAAe0D,KAAKiE,QAAQuE,KAAKjG,GAEhDA,EAAI0B,QAAQuE,KAAKxI,OAI1B7F,EAAGkG,UAAUoI,KAAO,SAAelG,GAEjC,GAAqB,IAAjBA,EAAIf,SAAgB,CACtBe,EAAIf,SAAW,EACf,IAAIS,EAAIjC,KAAKwI,KAAKjG,GAElB,OADAA,EAAIf,SAAW,EACRS,EAAEmC,YAGJ,GAAsB,IAAlBpE,KAAKwB,SAId,OAHAxB,KAAKwB,SAAW,EAChBxB,KAAKwI,KAAKjG,GACVvC,KAAKwB,SAAW,EACTxB,KAAKoE,YAId,IAWIY,EAAGC,EAXHrC,EAAM5C,KAAK4C,IAAIL,GAGnB,GAAY,IAARK,EAIF,OAHA5C,KAAKwB,SAAW,EAChBxB,KAAK1D,OAAS,EACd0D,KAAKyB,MAAM,GAAK,EACTzB,KAKL4C,EAAM,GACRoC,EAAIhF,KACJiF,EAAI1C,IAEJyC,EAAIzC,EACJ0C,EAAIjF,MAIN,IADA,IAAImF,EAAQ,EACHtJ,EAAI,EAAGA,EAAIoJ,EAAE3I,OAAQT,IAC5BoG,GAAkB,EAAb+C,EAAEvD,MAAM5F,KAAwB,EAAboJ,EAAExD,MAAM5F,IAAUsJ,EAC1CA,EAAQlD,GAAK,GACbjC,KAAKyB,MAAM5F,GAAS,SAAJoG,EAElB,KAAiB,IAAVkD,GAAetJ,EAAImJ,EAAE1I,OAAQT,IAClCoG,GAAkB,EAAb+C,EAAEvD,MAAM5F,IAAUsJ,EACvBA,EAAQlD,GAAK,GACbjC,KAAKyB,MAAM5F,GAAS,SAAJoG,EAIlB,GAAc,IAAVkD,GAAetJ,EAAImJ,EAAE1I,QAAU0I,IAAMhF,KACvC,KAAOnE,EAAImJ,EAAE1I,OAAQT,IACnBmE,KAAKyB,MAAM5F,GAAKmJ,EAAEvD,MAAM5F,GAU5B,OANAmE,KAAK1D,OAAS6F,KAAKM,IAAIzC,KAAK1D,OAAQT,GAEhCmJ,IAAMhF,OACRA,KAAKwB,SAAW,GAGXxB,KAAKiD,SAId9I,EAAGkG,UAAUsI,IAAM,SAAcpG,GAC/B,OAAOvC,KAAKiE,QAAQwE,KAAKlG,IA+C3B,IAAIqG,EAAc,SAAsB9D,EAAMvC,EAAKwC,GACjD,IAIIG,EACA2D,EACAhC,EANA7B,EAAIF,EAAKrD,MACTwD,EAAI1C,EAAId,MACRqH,EAAI/D,EAAItD,MACRjD,EAAI,EAIJuK,EAAY,EAAP/D,EAAE,GACPgE,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPlE,EAAE,GACPmE,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPrE,EAAE,GACPsE,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPxE,EAAE,GACPyE,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP3E,EAAE,GACP4E,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP9E,EAAE,GACP+E,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPjF,EAAE,GACPkF,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPpF,EAAE,GACPqF,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPvF,EAAE,GACPwF,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP1F,EAAE,GACP2F,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP5F,EAAE,GACP6F,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP/F,EAAE,GACPgG,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPlG,EAAE,GACPmG,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPrG,EAAE,GACPsG,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPxG,EAAE,GACPyG,EAAW,KAALD,EACNE,GAAMF,IAAO,GACbG,GAAY,EAAP3G,EAAE,GACP4G,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAP9G,EAAE,GACP+G,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAPjH,EAAE,GACPkH,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAPpH,EAAE,GACPqH,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAPvH,EAAE,GACPwH,GAAW,KAALD,GACNE,GAAMF,KAAO,GAEjBzH,EAAIvD,SAAWsD,EAAKtD,SAAWe,EAAIf,SACnCuD,EAAIzI,OAAS,GAEb4I,EAAK/C,KAAKwK,KAAK3D,EAAK8B,GACpBjC,EAAM1G,KAAKwK,KAAK3D,EAAK+B,GACrBlC,EAAOA,EAAM1G,KAAKwK,KAAK1D,EAAK6B,GAAQ,EACpCjE,EAAK1E,KAAKwK,KAAK1D,EAAK8B,GACpB,IAAI6B,IAAQpO,EAAI0G,EAAM,KAAa,KAAN2D,IAAiB,IAAO,EACrDrK,GAAOqI,GAAMgC,IAAQ,IAAO,IAAM+D,KAAO,IAAO,EAChDA,IAAM,SAEN1H,EAAK/C,KAAKwK,KAAKxD,EAAK2B,GACpBjC,EAAM1G,KAAKwK,KAAKxD,EAAK4B,GACrBlC,EAAOA,EAAM1G,KAAKwK,KAAKvD,EAAK0B,GAAQ,EACpCjE,EAAK1E,KAAKwK,KAAKvD,EAAK2B,GACpB7F,EAAMA,EAAK/C,KAAKwK,KAAK3D,EAAKiC,GAAQ,EAClCpC,EAAOA,EAAM1G,KAAKwK,KAAK3D,EAAKkC,GAAQ,EACpCrC,EAAOA,EAAM1G,KAAKwK,KAAK1D,EAAKgC,GAAQ,EACpCpE,EAAMA,EAAK1E,KAAKwK,KAAK1D,EAAKiC,GAAQ,EAClC,IAAI2B,IAAQrO,EAAI0G,EAAM,KAAa,KAAN2D,IAAiB,IAAO,EACrDrK,GAAOqI,GAAMgC,IAAQ,IAAO,IAAMgE,KAAO,IAAO,EAChDA,IAAM,SAEN3H,EAAK/C,KAAKwK,KAAKrD,EAAKwB,GACpBjC,EAAM1G,KAAKwK,KAAKrD,EAAKyB,GACrBlC,EAAOA,EAAM1G,KAAKwK,KAAKpD,EAAKuB,GAAQ,EACpCjE,EAAK1E,KAAKwK,KAAKpD,EAAKwB,GACpB7F,EAAMA,EAAK/C,KAAKwK,KAAKxD,EAAK8B,GAAQ,EAClCpC,EAAOA,EAAM1G,KAAKwK,KAAKxD,EAAK+B,GAAQ,EACpCrC,EAAOA,EAAM1G,KAAKwK,KAAKvD,EAAK6B,GAAQ,EACpCpE,EAAMA,EAAK1E,KAAKwK,KAAKvD,EAAK8B,GAAQ,EAClChG,EAAMA,EAAK/C,KAAKwK,KAAK3D,EAAKoC,GAAQ,EAClCvC,EAAOA,EAAM1G,KAAKwK,KAAK3D,EAAKqC,GAAQ,EACpCxC,EAAOA,EAAM1G,KAAKwK,KAAK1D,EAAKmC,GAAQ,EACpCvE,EAAMA,EAAK1E,KAAKwK,KAAK1D,EAAKoC,GAAQ,EAClC,IAAIyB,IAAQtO,EAAI0G,EAAM,KAAa,KAAN2D,IAAiB,IAAO,EACrDrK,GAAOqI,GAAMgC,IAAQ,IAAO,IAAMiE,KAAO,IAAO,EAChDA,IAAM,SAEN5H,EAAK/C,KAAKwK,KAAKlD,EAAKqB,GACpBjC,EAAM1G,KAAKwK,KAAKlD,EAAKsB,GACrBlC,EAAOA,EAAM1G,KAAKwK,KAAKjD,EAAKoB,GAAQ,EACpCjE,EAAK1E,KAAKwK,KAAKjD,EAAKqB,GACpB7F,EAAMA,EAAK/C,KAAKwK,KAAKrD,EAAK2B,GAAQ,EAClCpC,EAAOA,EAAM1G,KAAKwK,KAAKrD,EAAK4B,GAAQ,EACpCrC,EAAOA,EAAM1G,KAAKwK,KAAKpD,EAAK0B,GAAQ,EACpCpE,EAAMA,EAAK1E,KAAKwK,KAAKpD,EAAK2B,GAAQ,EAClChG,EAAMA,EAAK/C,KAAKwK,KAAKxD,EAAKiC,GAAQ,EAClCvC,EAAOA,EAAM1G,KAAKwK,KAAKxD,EAAKkC,GAAQ,EACpCxC,EAAOA,EAAM1G,KAAKwK,KAAKvD,EAAKgC,GAAQ,EACpCvE,EAAMA,EAAK1E,KAAKwK,KAAKvD,EAAKiC,GAAQ,EAClCnG,EAAMA,EAAK/C,KAAKwK,KAAK3D,EAAKuC,GAAQ,EAClC1C,EAAOA,EAAM1G,KAAKwK,KAAK3D,EAAKwC,GAAQ,EACpC3C,EAAOA,EAAM1G,KAAKwK,KAAK1D,EAAKsC,GAAQ,EACpC1E,EAAMA,EAAK1E,KAAKwK,KAAK1D,EAAKuC,GAAQ,EAClC,IAAIuB,IAAQvO,EAAI0G,EAAM,KAAa,KAAN2D,IAAiB,IAAO,EACrDrK,GAAOqI,GAAMgC,IAAQ,IAAO,IAAMkE,KAAO,IAAO,EAChDA,IAAM,SAEN7H,EAAK/C,KAAKwK,KAAK/C,EAAKkB,GACpBjC,EAAM1G,KAAKwK,KAAK/C,EAAKmB,GACrBlC,EAAOA,EAAM1G,KAAKwK,KAAK9C,EAAKiB,GAAQ,EACpCjE,EAAK1E,KAAKwK,KAAK9C,EAAKkB,GACpB7F,EAAMA,EAAK/C,KAAKwK,KAAKlD,EAAKwB,GAAQ,EAClCpC,EAAOA,EAAM1G,KAAKwK,KAAKlD,EAAKyB,GAAQ,EACpCrC,EAAOA,EAAM1G,KAAKwK,KAAKjD,EAAKuB,GAAQ,EACpCpE,EAAMA,EAAK1E,KAAKwK,KAAKjD,EAAKwB,GAAQ,EAClChG,EAAMA,EAAK/C,KAAKwK,KAAKrD,EAAK8B,GAAQ,EAClCvC,EAAOA,EAAM1G,KAAKwK,KAAKrD,EAAK+B,GAAQ,EACpCxC,EAAOA,EAAM1G,KAAKwK,KAAKpD,EAAK6B,GAAQ,EACpCvE,EAAMA,EAAK1E,KAAKwK,KAAKpD,EAAK8B,GAAQ,EAClCnG,EAAMA,EAAK/C,KAAKwK,KAAKxD,EAAKoC,GAAQ,EAClC1C,EAAOA,EAAM1G,KAAKwK,KAAKxD,EAAKqC,GAAQ,EACpC3C,EAAOA,EAAM1G,KAAKwK,KAAKvD,EAAKmC,GAAQ,EACpC1E,EAAMA,EAAK1E,KAAKwK,KAAKvD,EAAKoC,GAAQ,EAClCtG,EAAMA,EAAK/C,KAAKwK,KAAK3D,EAAK0C,GAAQ,EAClC7C,EAAOA,EAAM1G,KAAKwK,KAAK3D,EAAK2C,IAAQ,EACpC9C,EAAOA,EAAM1G,KAAKwK,KAAK1D,EAAKyC,GAAQ,EACpC7E,EAAMA,EAAK1E,KAAKwK,KAAK1D,EAAK0C,IAAQ,EAClC,IAAIqB,IAAQxO,EAAI0G,EAAM,KAAa,KAAN2D,IAAiB,IAAO,EACrDrK,GAAOqI,GAAMgC,IAAQ,IAAO,IAAMmE,KAAO,IAAO,EAChDA,IAAM,SAEN9H,EAAK/C,KAAKwK,KAAK5C,EAAKe,GACpBjC,EAAM1G,KAAKwK,KAAK5C,EAAKgB,GACrBlC,EAAOA,EAAM1G,KAAKwK,KAAK3C,EAAKc,GAAQ,EACpCjE,EAAK1E,KAAKwK,KAAK3C,EAAKe,GACpB7F,EAAMA,EAAK/C,KAAKwK,KAAK/C,EAAKqB,GAAQ,EAClCpC,EAAOA,EAAM1G,KAAKwK,KAAK/C,EAAKsB,GAAQ,EACpCrC,EAAOA,EAAM1G,KAAKwK,KAAK9C,EAAKoB,GAAQ,EACpCpE,EAAMA,EAAK1E,KAAKwK,KAAK9C,EAAKqB,GAAQ,EAClChG,EAAMA,EAAK/C,KAAKwK,KAAKlD,EAAK2B,GAAQ,EAClCvC,EAAOA,EAAM1G,KAAKwK,KAAKlD,EAAK4B,GAAQ,EACpCxC,EAAOA,EAAM1G,KAAKwK,KAAKjD,EAAK0B,GAAQ,EACpCvE,EAAMA,EAAK1E,KAAKwK,KAAKjD,EAAK2B,GAAQ,EAClCnG,EAAMA,EAAK/C,KAAKwK,KAAKrD,EAAKiC,GAAQ,EAClC1C,EAAOA,EAAM1G,KAAKwK,KAAKrD,EAAKkC,GAAQ,EACpC3C,EAAOA,EAAM1G,KAAKwK,KAAKpD,EAAKgC,GAAQ,EACpC1E,EAAMA,EAAK1E,KAAKwK,KAAKpD,EAAKiC,GAAQ,EAClCtG,EAAMA,EAAK/C,KAAKwK,KAAKxD,EAAKuC,GAAQ,EAClC7C,EAAOA,EAAM1G,KAAKwK,KAAKxD,EAAKwC,IAAQ,EACpC9C,EAAOA,EAAM1G,KAAKwK,KAAKvD,EAAKsC,GAAQ,EACpC7E,EAAMA,EAAK1E,KAAKwK,KAAKvD,EAAKuC,IAAQ,EAClCzG,EAAMA,EAAK/C,KAAKwK,KAAK3D,EAAK6C,IAAQ,EAClChD,EAAOA,EAAM1G,KAAKwK,KAAK3D,EAAK8C,IAAQ,EACpCjD,EAAOA,EAAM1G,KAAKwK,KAAK1D,EAAK4C,IAAQ,EACpChF,EAAMA,EAAK1E,KAAKwK,KAAK1D,EAAK6C,IAAQ,EAClC,IAAImB,IAAQzO,EAAI0G,EAAM,KAAa,KAAN2D,IAAiB,IAAO,EACrDrK,GAAOqI,GAAMgC,IAAQ,IAAO,IAAMoE,KAAO,IAAO,EAChDA,IAAM,SAEN/H,EAAK/C,KAAKwK,KAAKzC,EAAKY,GACpBjC,EAAM1G,KAAKwK,KAAKzC,EAAKa,GACrBlC,EAAOA,EAAM1G,KAAKwK,KAAKxC,EAAKW,GAAQ,EACpCjE,EAAK1E,KAAKwK,KAAKxC,EAAKY,GACpB7F,EAAMA,EAAK/C,KAAKwK,KAAK5C,EAAKkB,GAAQ,EAClCpC,EAAOA,EAAM1G,KAAKwK,KAAK5C,EAAKmB,GAAQ,EACpCrC,EAAOA,EAAM1G,KAAKwK,KAAK3C,EAAKiB,GAAQ,EACpCpE,EAAMA,EAAK1E,KAAKwK,KAAK3C,EAAKkB,GAAQ,EAClChG,EAAMA,EAAK/C,KAAKwK,KAAK/C,EAAKwB,GAAQ,EAClCvC,EAAOA,EAAM1G,KAAKwK,KAAK/C,EAAKyB,GAAQ,EACpCxC,EAAOA,EAAM1G,KAAKwK,KAAK9C,EAAKuB,GAAQ,EACpCvE,EAAMA,EAAK1E,KAAKwK,KAAK9C,EAAKwB,GAAQ,EAClCnG,EAAMA,EAAK/C,KAAKwK,KAAKlD,EAAK8B,GAAQ,EAClC1C,EAAOA,EAAM1G,KAAKwK,KAAKlD,EAAK+B,GAAQ,EACpC3C,EAAOA,EAAM1G,KAAKwK,KAAKjD,EAAK6B,GAAQ,EACpC1E,EAAMA,EAAK1E,KAAKwK,KAAKjD,EAAK8B,GAAQ,EAClCtG,EAAMA,EAAK/C,KAAKwK,KAAKrD,EAAKoC,GAAQ,EAClC7C,EAAOA,EAAM1G,KAAKwK,KAAKrD,EAAKqC,IAAQ,EACpC9C,EAAOA,EAAM1G,KAAKwK,KAAKpD,EAAKmC,GAAQ,EACpC7E,EAAMA,EAAK1E,KAAKwK,KAAKpD,EAAKoC,IAAQ,EAClCzG,EAAMA,EAAK/C,KAAKwK,KAAKxD,EAAK0C,IAAQ,EAClChD,EAAOA,EAAM1G,KAAKwK,KAAKxD,EAAK2C,IAAQ,EACpCjD,EAAOA,EAAM1G,KAAKwK,KAAKvD,EAAKyC,IAAQ,EACpChF,EAAMA,EAAK1E,KAAKwK,KAAKvD,EAAK0C,IAAQ,EAClC5G,EAAMA,EAAK/C,KAAKwK,KAAK3D,EAAKgD,IAAQ,EAClCnD,EAAOA,EAAM1G,KAAKwK,KAAK3D,EAAKiD,IAAQ,EACpCpD,EAAOA,EAAM1G,KAAKwK,KAAK1D,EAAK+C,IAAQ,EACpCnF,EAAMA,EAAK1E,KAAKwK,KAAK1D,EAAKgD,IAAQ,EAClC,IAAIiB,IAAQ1O,EAAI0G,EAAM,KAAa,KAAN2D,IAAiB,IAAO,EACrDrK,GAAOqI,GAAMgC,IAAQ,IAAO,IAAMqE,KAAO,IAAO,EAChDA,IAAM,SAENhI,EAAK/C,KAAKwK,KAAKtC,EAAKS,GACpBjC,EAAM1G,KAAKwK,KAAKtC,EAAKU,GACrBlC,EAAOA,EAAM1G,KAAKwK,KAAKrC,EAAKQ,GAAQ,EACpCjE,EAAK1E,KAAKwK,KAAKrC,EAAKS,GACpB7F,EAAMA,EAAK/C,KAAKwK,KAAKzC,EAAKe,GAAQ,EAClCpC,EAAOA,EAAM1G,KAAKwK,KAAKzC,EAAKgB,GAAQ,EACpCrC,EAAOA,EAAM1G,KAAKwK,KAAKxC,EAAKc,GAAQ,EACpCpE,EAAMA,EAAK1E,KAAKwK,KAAKxC,EAAKe,GAAQ,EAClChG,EAAMA,EAAK/C,KAAKwK,KAAK5C,EAAKqB,GAAQ,EAClCvC,EAAOA,EAAM1G,KAAKwK,KAAK5C,EAAKsB,GAAQ,EACpCxC,EAAOA,EAAM1G,KAAKwK,KAAK3C,EAAKoB,GAAQ,EACpCvE,EAAMA,EAAK1E,KAAKwK,KAAK3C,EAAKqB,GAAQ,EAClCnG,EAAMA,EAAK/C,KAAKwK,KAAK/C,EAAK2B,GAAQ,EAClC1C,EAAOA,EAAM1G,KAAKwK,KAAK/C,EAAK4B,GAAQ,EACpC3C,EAAOA,EAAM1G,KAAKwK,KAAK9C,EAAK0B,GAAQ,EACpC1E,EAAMA,EAAK1E,KAAKwK,KAAK9C,EAAK2B,GAAQ,EAClCtG,EAAMA,EAAK/C,KAAKwK,KAAKlD,EAAKiC,GAAQ,EAClC7C,EAAOA,EAAM1G,KAAKwK,KAAKlD,EAAKkC,IAAQ,EACpC9C,EAAOA,EAAM1G,KAAKwK,KAAKjD,EAAKgC,GAAQ,EACpC7E,EAAMA,EAAK1E,KAAKwK,KAAKjD,EAAKiC,IAAQ,EAClCzG,EAAMA,EAAK/C,KAAKwK,KAAKrD,EAAKuC,IAAQ,EAClChD,EAAOA,EAAM1G,KAAKwK,KAAKrD,EAAKwC,IAAQ,EACpCjD,EAAOA,EAAM1G,KAAKwK,KAAKpD,EAAKsC,IAAQ,EACpChF,EAAMA,EAAK1E,KAAKwK,KAAKpD,EAAKuC,IAAQ,EAClC5G,EAAMA,EAAK/C,KAAKwK,KAAKxD,EAAK6C,IAAQ,EAClCnD,EAAOA,EAAM1G,KAAKwK,KAAKxD,EAAK8C,IAAQ,EACpCpD,EAAOA,EAAM1G,KAAKwK,KAAKvD,EAAK4C,IAAQ,EACpCnF,EAAMA,EAAK1E,KAAKwK,KAAKvD,EAAK6C,IAAQ,EAClC/G,EAAMA,EAAK/C,KAAKwK,KAAK3D,EAAKmD,IAAQ,EAClCtD,EAAOA,EAAM1G,KAAKwK,KAAK3D,EAAKoD,IAAQ,EACpCvD,EAAOA,EAAM1G,KAAKwK,KAAK1D,EAAKkD,IAAQ,EACpCtF,EAAMA,EAAK1E,KAAKwK,KAAK1D,EAAKmD,IAAQ,EAClC,IAAIe,IAAQ3O,EAAI0G,EAAM,KAAa,KAAN2D,IAAiB,IAAO,EACrDrK,GAAOqI,GAAMgC,IAAQ,IAAO,IAAMsE,KAAO,IAAO,EAChDA,IAAM,SAENjI,EAAK/C,KAAKwK,KAAKnC,EAAKM,GACpBjC,EAAM1G,KAAKwK,KAAKnC,EAAKO,GACrBlC,EAAOA,EAAM1G,KAAKwK,KAAKlC,EAAKK,GAAQ,EACpCjE,EAAK1E,KAAKwK,KAAKlC,EAAKM,GACpB7F,EAAMA,EAAK/C,KAAKwK,KAAKtC,EAAKY,GAAQ,EAClCpC,EAAOA,EAAM1G,KAAKwK,KAAKtC,EAAKa,GAAQ,EACpCrC,EAAOA,EAAM1G,KAAKwK,KAAKrC,EAAKW,GAAQ,EACpCpE,EAAMA,EAAK1E,KAAKwK,KAAKrC,EAAKY,GAAQ,EAClChG,EAAMA,EAAK/C,KAAKwK,KAAKzC,EAAKkB,GAAQ,EAClCvC,EAAOA,EAAM1G,KAAKwK,KAAKzC,EAAKmB,GAAQ,EACpCxC,EAAOA,EAAM1G,KAAKwK,KAAKxC,EAAKiB,GAAQ,EACpCvE,EAAMA,EAAK1E,KAAKwK,KAAKxC,EAAKkB,GAAQ,EAClCnG,EAAMA,EAAK/C,KAAKwK,KAAK5C,EAAKwB,GAAQ,EAClC1C,EAAOA,EAAM1G,KAAKwK,KAAK5C,EAAKyB,GAAQ,EACpC3C,EAAOA,EAAM1G,KAAKwK,KAAK3C,EAAKuB,GAAQ,EACpC1E,EAAMA,EAAK1E,KAAKwK,KAAK3C,EAAKwB,GAAQ,EAClCtG,EAAMA,EAAK/C,KAAKwK,KAAK/C,EAAK8B,GAAQ,EAClC7C,EAAOA,EAAM1G,KAAKwK,KAAK/C,EAAK+B,IAAQ,EACpC9C,EAAOA,EAAM1G,KAAKwK,KAAK9C,EAAK6B,GAAQ,EACpC7E,EAAMA,EAAK1E,KAAKwK,KAAK9C,EAAK8B,IAAQ,EAClCzG,EAAMA,EAAK/C,KAAKwK,KAAKlD,EAAKoC,IAAQ,EAClChD,EAAOA,EAAM1G,KAAKwK,KAAKlD,EAAKqC,IAAQ,EACpCjD,EAAOA,EAAM1G,KAAKwK,KAAKjD,EAAKmC,IAAQ,EACpChF,EAAMA,EAAK1E,KAAKwK,KAAKjD,EAAKoC,IAAQ,EAClC5G,EAAMA,EAAK/C,KAAKwK,KAAKrD,EAAK0C,IAAQ,EAClCnD,EAAOA,EAAM1G,KAAKwK,KAAKrD,EAAK2C,IAAQ,EACpCpD,EAAOA,EAAM1G,KAAKwK,KAAKpD,EAAKyC,IAAQ,EACpCnF,EAAMA,EAAK1E,KAAKwK,KAAKpD,EAAK0C,IAAQ,EAClC/G,EAAMA,EAAK/C,KAAKwK,KAAKxD,EAAKgD,IAAQ,EAClCtD,EAAOA,EAAM1G,KAAKwK,KAAKxD,EAAKiD,IAAQ,EACpCvD,EAAOA,EAAM1G,KAAKwK,KAAKvD,EAAK+C,IAAQ,EACpCtF,EAAMA,EAAK1E,KAAKwK,KAAKvD,EAAKgD,IAAQ,EAClClH,EAAMA,EAAK/C,KAAKwK,KAAK3D,EAAKsD,IAAQ,EAClCzD,EAAOA,EAAM1G,KAAKwK,KAAK3D,EAAKuD,IAAQ,EACpC1D,EAAOA,EAAM1G,KAAKwK,KAAK1D,EAAKqD,IAAQ,EACpCzF,EAAMA,EAAK1E,KAAKwK,KAAK1D,EAAKsD,IAAQ,EAClC,IAAIa,IAAQ5O,EAAI0G,EAAM,KAAa,KAAN2D,IAAiB,IAAO,EACrDrK,GAAOqI,GAAMgC,IAAQ,IAAO,IAAMuE,KAAO,IAAO,EAChDA,IAAM,SAENlI,EAAK/C,KAAKwK,KAAKhC,EAAKG,GACpBjC,EAAM1G,KAAKwK,KAAKhC,EAAKI,GACrBlC,EAAOA,EAAM1G,KAAKwK,KAAK/B,EAAKE,GAAQ,EACpCjE,EAAK1E,KAAKwK,KAAK/B,EAAKG,GACpB7F,EAAMA,EAAK/C,KAAKwK,KAAKnC,EAAKS,GAAQ,EAClCpC,EAAOA,EAAM1G,KAAKwK,KAAKnC,EAAKU,GAAQ,EACpCrC,EAAOA,EAAM1G,KAAKwK,KAAKlC,EAAKQ,GAAQ,EACpCpE,EAAMA,EAAK1E,KAAKwK,KAAKlC,EAAKS,GAAQ,EAClChG,EAAMA,EAAK/C,KAAKwK,KAAKtC,EAAKe,GAAQ,EAClCvC,EAAOA,EAAM1G,KAAKwK,KAAKtC,EAAKgB,GAAQ,EACpCxC,EAAOA,EAAM1G,KAAKwK,KAAKrC,EAAKc,GAAQ,EACpCvE,EAAMA,EAAK1E,KAAKwK,KAAKrC,EAAKe,GAAQ,EAClCnG,EAAMA,EAAK/C,KAAKwK,KAAKzC,EAAKqB,GAAQ,EAClC1C,EAAOA,EAAM1G,KAAKwK,KAAKzC,EAAKsB,GAAQ,EACpC3C,EAAOA,EAAM1G,KAAKwK,KAAKxC,EAAKoB,GAAQ,EACpC1E,EAAMA,EAAK1E,KAAKwK,KAAKxC,EAAKqB,GAAQ,EAClCtG,EAAMA,EAAK/C,KAAKwK,KAAK5C,EAAK2B,GAAQ,EAClC7C,EAAOA,EAAM1G,KAAKwK,KAAK5C,EAAK4B,IAAQ,EACpC9C,EAAOA,EAAM1G,KAAKwK,KAAK3C,EAAK0B,GAAQ,EACpC7E,EAAMA,EAAK1E,KAAKwK,KAAK3C,EAAK2B,IAAQ,EAClCzG,EAAMA,EAAK/C,KAAKwK,KAAK/C,EAAKiC,IAAQ,EAClChD,EAAOA,EAAM1G,KAAKwK,KAAK/C,EAAKkC,IAAQ,EACpCjD,EAAOA,EAAM1G,KAAKwK,KAAK9C,EAAKgC,IAAQ,EACpChF,EAAMA,EAAK1E,KAAKwK,KAAK9C,EAAKiC,IAAQ,EAClC5G,EAAMA,EAAK/C,KAAKwK,KAAKlD,EAAKuC,IAAQ,EAClCnD,EAAOA,EAAM1G,KAAKwK,KAAKlD,EAAKwC,IAAQ,EACpCpD,EAAOA,EAAM1G,KAAKwK,KAAKjD,EAAKsC,IAAQ,EACpCnF,EAAMA,EAAK1E,KAAKwK,KAAKjD,EAAKuC,IAAQ,EAClC/G,EAAMA,EAAK/C,KAAKwK,KAAKrD,EAAK6C,IAAQ,EAClCtD,EAAOA,EAAM1G,KAAKwK,KAAKrD,EAAK8C,IAAQ,EACpCvD,EAAOA,EAAM1G,KAAKwK,KAAKpD,EAAK4C,IAAQ,EACpCtF,EAAMA,EAAK1E,KAAKwK,KAAKpD,EAAK6C,IAAQ,EAClClH,EAAMA,EAAK/C,KAAKwK,KAAKxD,EAAKmD,IAAQ,EAClCzD,EAAOA,EAAM1G,KAAKwK,KAAKxD,EAAKoD,IAAQ,EACpC1D,EAAOA,EAAM1G,KAAKwK,KAAKvD,EAAKkD,IAAQ,EACpCzF,EAAMA,EAAK1E,KAAKwK,KAAKvD,EAAKmD,IAAQ,EAClCrH,EAAMA,EAAK/C,KAAKwK,KAAK3D,EAAKyD,IAAQ,EAClC5D,EAAOA,EAAM1G,KAAKwK,KAAK3D,EAAK0D,IAAQ,EACpC7D,EAAOA,EAAM1G,KAAKwK,KAAK1D,EAAKwD,IAAQ,EACpC5F,EAAMA,EAAK1E,KAAKwK,KAAK1D,EAAKyD,IAAQ,EAClC,IAAIW,IAAQ7O,EAAI0G,EAAM,KAAa,KAAN2D,IAAiB,IAAO,EACrDrK,GAAOqI,GAAMgC,IAAQ,IAAO,IAAMwE,KAAO,IAAO,EAChDA,IAAM,SAENnI,EAAK/C,KAAKwK,KAAKhC,EAAKM,GACpBpC,EAAM1G,KAAKwK,KAAKhC,EAAKO,GACrBrC,EAAOA,EAAM1G,KAAKwK,KAAK/B,EAAKK,GAAQ,EACpCpE,EAAK1E,KAAKwK,KAAK/B,EAAKM,GACpBhG,EAAMA,EAAK/C,KAAKwK,KAAKnC,EAAKY,GAAQ,EAClCvC,EAAOA,EAAM1G,KAAKwK,KAAKnC,EAAKa,GAAQ,EACpCxC,EAAOA,EAAM1G,KAAKwK,KAAKlC,EAAKW,GAAQ,EACpCvE,EAAMA,EAAK1E,KAAKwK,KAAKlC,EAAKY,GAAQ,EAClCnG,EAAMA,EAAK/C,KAAKwK,KAAKtC,EAAKkB,GAAQ,EAClC1C,EAAOA,EAAM1G,KAAKwK,KAAKtC,EAAKmB,GAAQ,EACpC3C,EAAOA,EAAM1G,KAAKwK,KAAKrC,EAAKiB,GAAQ,EACpC1E,EAAMA,EAAK1E,KAAKwK,KAAKrC,EAAKkB,GAAQ,EAClCtG,EAAMA,EAAK/C,KAAKwK,KAAKzC,EAAKwB,GAAQ,EAClC7C,EAAOA,EAAM1G,KAAKwK,KAAKzC,EAAKyB,IAAQ,EACpC9C,EAAOA,EAAM1G,KAAKwK,KAAKxC,EAAKuB,GAAQ,EACpC7E,EAAMA,EAAK1E,KAAKwK,KAAKxC,EAAKwB,IAAQ,EAClCzG,EAAMA,EAAK/C,KAAKwK,KAAK5C,EAAK8B,IAAQ,EAClChD,EAAOA,EAAM1G,KAAKwK,KAAK5C,EAAK+B,IAAQ,EACpCjD,EAAOA,EAAM1G,KAAKwK,KAAK3C,EAAK6B,IAAQ,EACpChF,EAAMA,EAAK1E,KAAKwK,KAAK3C,EAAK8B,IAAQ,EAClC5G,EAAMA,EAAK/C,KAAKwK,KAAK/C,EAAKoC,IAAQ,EAClCnD,EAAOA,EAAM1G,KAAKwK,KAAK/C,EAAKqC,IAAQ,EACpCpD,EAAOA,EAAM1G,KAAKwK,KAAK9C,EAAKmC,IAAQ,EACpCnF,EAAMA,EAAK1E,KAAKwK,KAAK9C,EAAKoC,IAAQ,EAClC/G,EAAMA,EAAK/C,KAAKwK,KAAKlD,EAAK0C,IAAQ,EAClCtD,EAAOA,EAAM1G,KAAKwK,KAAKlD,EAAK2C,IAAQ,EACpCvD,EAAOA,EAAM1G,KAAKwK,KAAKjD,EAAKyC,IAAQ,EACpCtF,EAAMA,EAAK1E,KAAKwK,KAAKjD,EAAK0C,IAAQ,EAClClH,EAAMA,EAAK/C,KAAKwK,KAAKrD,EAAKgD,IAAQ,EAClCzD,EAAOA,EAAM1G,KAAKwK,KAAKrD,EAAKiD,IAAQ,EACpC1D,EAAOA,EAAM1G,KAAKwK,KAAKpD,EAAK+C,IAAQ,EACpCzF,EAAMA,EAAK1E,KAAKwK,KAAKpD,EAAKgD,IAAQ,EAClCrH,EAAMA,EAAK/C,KAAKwK,KAAKxD,EAAKsD,IAAQ,EAClC5D,EAAOA,EAAM1G,KAAKwK,KAAKxD,EAAKuD,IAAQ,EACpC7D,EAAOA,EAAM1G,KAAKwK,KAAKvD,EAAKqD,IAAQ,EACpC5F,EAAMA,EAAK1E,KAAKwK,KAAKvD,EAAKsD,IAAQ,EAClC,IAAIY,IAAS9O,EAAI0G,EAAM,KAAa,KAAN2D,IAAiB,IAAO,EACtDrK,GAAOqI,GAAMgC,IAAQ,IAAO,IAAMyE,KAAQ,IAAO,EACjDA,IAAO,SAEPpI,EAAK/C,KAAKwK,KAAKhC,EAAKS,GACpBvC,EAAM1G,KAAKwK,KAAKhC,EAAKU,GACrBxC,EAAOA,EAAM1G,KAAKwK,KAAK/B,EAAKQ,GAAQ,EACpCvE,EAAK1E,KAAKwK,KAAK/B,EAAKS,GACpBnG,EAAMA,EAAK/C,KAAKwK,KAAKnC,EAAKe,GAAQ,EAClC1C,EAAOA,EAAM1G,KAAKwK,KAAKnC,EAAKgB,GAAQ,EACpC3C,EAAOA,EAAM1G,KAAKwK,KAAKlC,EAAKc,GAAQ,EACpC1E,EAAMA,EAAK1E,KAAKwK,KAAKlC,EAAKe,GAAQ,EAClCtG,EAAMA,EAAK/C,KAAKwK,KAAKtC,EAAKqB,GAAQ,EAClC7C,EAAOA,EAAM1G,KAAKwK,KAAKtC,EAAKsB,IAAQ,EACpC9C,EAAOA,EAAM1G,KAAKwK,KAAKrC,EAAKoB,GAAQ,EACpC7E,EAAMA,EAAK1E,KAAKwK,KAAKrC,EAAKqB,IAAQ,EAClCzG,EAAMA,EAAK/C,KAAKwK,KAAKzC,EAAK2B,IAAQ,EAClChD,EAAOA,EAAM1G,KAAKwK,KAAKzC,EAAK4B,IAAQ,EACpCjD,EAAOA,EAAM1G,KAAKwK,KAAKxC,EAAK0B,IAAQ,EACpChF,EAAMA,EAAK1E,KAAKwK,KAAKxC,EAAK2B,IAAQ,EAClC5G,EAAMA,EAAK/C,KAAKwK,KAAK5C,EAAKiC,IAAQ,EAClCnD,EAAOA,EAAM1G,KAAKwK,KAAK5C,EAAKkC,IAAQ,EACpCpD,EAAOA,EAAM1G,KAAKwK,KAAK3C,EAAKgC,IAAQ,EACpCnF,EAAMA,EAAK1E,KAAKwK,KAAK3C,EAAKiC,IAAQ,EAClC/G,EAAMA,EAAK/C,KAAKwK,KAAK/C,EAAKuC,IAAQ,EAClCtD,EAAOA,EAAM1G,KAAKwK,KAAK/C,EAAKwC,IAAQ,EACpCvD,EAAOA,EAAM1G,KAAKwK,KAAK9C,EAAKsC,IAAQ,EACpCtF,EAAMA,EAAK1E,KAAKwK,KAAK9C,EAAKuC,IAAQ,EAClClH,EAAMA,EAAK/C,KAAKwK,KAAKlD,EAAK6C,IAAQ,EAClCzD,EAAOA,EAAM1G,KAAKwK,KAAKlD,EAAK8C,IAAQ,EACpC1D,EAAOA,EAAM1G,KAAKwK,KAAKjD,EAAK4C,IAAQ,EACpCzF,EAAMA,EAAK1E,KAAKwK,KAAKjD,EAAK6C,IAAQ,EAClCrH,EAAMA,EAAK/C,KAAKwK,KAAKrD,EAAKmD,IAAQ,EAClC5D,EAAOA,EAAM1G,KAAKwK,KAAKrD,EAAKoD,IAAQ,EACpC7D,EAAOA,EAAM1G,KAAKwK,KAAKpD,EAAKkD,IAAQ,EACpC5F,EAAMA,EAAK1E,KAAKwK,KAAKpD,EAAKmD,IAAQ,EAClC,IAAIa,IAAS/O,EAAI0G,EAAM,KAAa,KAAN2D,IAAiB,IAAO,EACtDrK,GAAOqI,GAAMgC,IAAQ,IAAO,IAAM0E,KAAQ,IAAO,EACjDA,IAAO,SAEPrI,EAAK/C,KAAKwK,KAAKhC,EAAKY,GACpB1C,EAAM1G,KAAKwK,KAAKhC,EAAKa,GACrB3C,EAAOA,EAAM1G,KAAKwK,KAAK/B,EAAKW,GAAQ,EACpC1E,EAAK1E,KAAKwK,KAAK/B,EAAKY,GACpBtG,EAAMA,EAAK/C,KAAKwK,KAAKnC,EAAKkB,GAAQ,EAClC7C,EAAOA,EAAM1G,KAAKwK,KAAKnC,EAAKmB,IAAQ,EACpC9C,EAAOA,EAAM1G,KAAKwK,KAAKlC,EAAKiB,GAAQ,EACpC7E,EAAMA,EAAK1E,KAAKwK,KAAKlC,EAAKkB,IAAQ,EAClCzG,EAAMA,EAAK/C,KAAKwK,KAAKtC,EAAKwB,IAAQ,EAClChD,EAAOA,EAAM1G,KAAKwK,KAAKtC,EAAKyB,IAAQ,EACpCjD,EAAOA,EAAM1G,KAAKwK,KAAKrC,EAAKuB,IAAQ,EACpChF,EAAMA,EAAK1E,KAAKwK,KAAKrC,EAAKwB,IAAQ,EAClC5G,EAAMA,EAAK/C,KAAKwK,KAAKzC,EAAK8B,IAAQ,EAClCnD,EAAOA,EAAM1G,KAAKwK,KAAKzC,EAAK+B,IAAQ,EACpCpD,EAAOA,EAAM1G,KAAKwK,KAAKxC,EAAK6B,IAAQ,EACpCnF,EAAMA,EAAK1E,KAAKwK,KAAKxC,EAAK8B,IAAQ,EAClC/G,EAAMA,EAAK/C,KAAKwK,KAAK5C,EAAKoC,IAAQ,EAClCtD,EAAOA,EAAM1G,KAAKwK,KAAK5C,EAAKqC,IAAQ,EACpCvD,EAAOA,EAAM1G,KAAKwK,KAAK3C,EAAKmC,IAAQ,EACpCtF,EAAMA,EAAK1E,KAAKwK,KAAK3C,EAAKoC,IAAQ,EAClClH,EAAMA,EAAK/C,KAAKwK,KAAK/C,EAAK0C,IAAQ,EAClCzD,EAAOA,EAAM1G,KAAKwK,KAAK/C,EAAK2C,IAAQ,EACpC1D,EAAOA,EAAM1G,KAAKwK,KAAK9C,EAAKyC,IAAQ,EACpCzF,EAAMA,EAAK1E,KAAKwK,KAAK9C,EAAK0C,IAAQ,EAClCrH,EAAMA,EAAK/C,KAAKwK,KAAKlD,EAAKgD,IAAQ,EAClC5D,EAAOA,EAAM1G,KAAKwK,KAAKlD,EAAKiD,IAAQ,EACpC7D,EAAOA,EAAM1G,KAAKwK,KAAKjD,EAAK+C,IAAQ,EACpC5F,EAAMA,EAAK1E,KAAKwK,KAAKjD,EAAKgD,IAAQ,EAClC,IAAIc,IAAShP,EAAI0G,EAAM,KAAa,KAAN2D,IAAiB,IAAO,EACtDrK,GAAOqI,GAAMgC,IAAQ,IAAO,IAAM2E,KAAQ,IAAO,EACjDA,IAAO,SAEPtI,EAAK/C,KAAKwK,KAAKhC,EAAKe,GACpB7C,EAAM1G,KAAKwK,KAAKhC,EAAKgB,IACrB9C,EAAOA,EAAM1G,KAAKwK,KAAK/B,EAAKc,GAAQ,EACpC7E,EAAK1E,KAAKwK,KAAK/B,EAAKe,IACpBzG,EAAMA,EAAK/C,KAAKwK,KAAKnC,EAAKqB,IAAQ,EAClChD,EAAOA,EAAM1G,KAAKwK,KAAKnC,EAAKsB,IAAQ,EACpCjD,EAAOA,EAAM1G,KAAKwK,KAAKlC,EAAKoB,IAAQ,EACpChF,EAAMA,EAAK1E,KAAKwK,KAAKlC,EAAKqB,IAAQ,EAClC5G,EAAMA,EAAK/C,KAAKwK,KAAKtC,EAAK2B,IAAQ,EAClCnD,EAAOA,EAAM1G,KAAKwK,KAAKtC,EAAK4B,IAAQ,EACpCpD,EAAOA,EAAM1G,KAAKwK,KAAKrC,EAAK0B,IAAQ,EACpCnF,EAAMA,EAAK1E,KAAKwK,KAAKrC,EAAK2B,IAAQ,EAClC/G,EAAMA,EAAK/C,KAAKwK,KAAKzC,EAAKiC,IAAQ,EAClCtD,EAAOA,EAAM1G,KAAKwK,KAAKzC,EAAKkC,IAAQ,EACpCvD,EAAOA,EAAM1G,KAAKwK,KAAKxC,EAAKgC,IAAQ,EACpCtF,EAAMA,EAAK1E,KAAKwK,KAAKxC,EAAKiC,IAAQ,EAClClH,EAAMA,EAAK/C,KAAKwK,KAAK5C,EAAKuC,IAAQ,EAClCzD,EAAOA,EAAM1G,KAAKwK,KAAK5C,EAAKwC,IAAQ,EACpC1D,EAAOA,EAAM1G,KAAKwK,KAAK3C,EAAKsC,IAAQ,EACpCzF,EAAMA,EAAK1E,KAAKwK,KAAK3C,EAAKuC,IAAQ,EAClCrH,EAAMA,EAAK/C,KAAKwK,KAAK/C,EAAK6C,IAAQ,EAClC5D,EAAOA,EAAM1G,KAAKwK,KAAK/C,EAAK8C,IAAQ,EACpC7D,EAAOA,EAAM1G,KAAKwK,KAAK9C,EAAK4C,IAAQ,EACpC5F,EAAMA,EAAK1E,KAAKwK,KAAK9C,EAAK6C,IAAQ,EAClC,IAAIe,IAASjP,EAAI0G,EAAM,KAAa,KAAN2D,IAAiB,IAAO,EACtDrK,GAAOqI,GAAMgC,IAAQ,IAAO,IAAM4E,KAAQ,IAAO,EACjDA,IAAO,SAEPvI,EAAK/C,KAAKwK,KAAKhC,EAAKkB,IACpBhD,EAAM1G,KAAKwK,KAAKhC,EAAKmB,IACrBjD,EAAOA,EAAM1G,KAAKwK,KAAK/B,EAAKiB,IAAQ,EACpChF,EAAK1E,KAAKwK,KAAK/B,EAAKkB,IACpB5G,EAAMA,EAAK/C,KAAKwK,KAAKnC,EAAKwB,IAAQ,EAClCnD,EAAOA,EAAM1G,KAAKwK,KAAKnC,EAAKyB,IAAQ,EACpCpD,EAAOA,EAAM1G,KAAKwK,KAAKlC,EAAKuB,IAAQ,EACpCnF,EAAMA,EAAK1E,KAAKwK,KAAKlC,EAAKwB,IAAQ,EAClC/G,EAAMA,EAAK/C,KAAKwK,KAAKtC,EAAK8B,IAAQ,EAClCtD,EAAOA,EAAM1G,KAAKwK,KAAKtC,EAAK+B,IAAQ,EACpCvD,EAAOA,EAAM1G,KAAKwK,KAAKrC,EAAK6B,IAAQ,EACpCtF,EAAMA,EAAK1E,KAAKwK,KAAKrC,EAAK8B,IAAQ,EAClClH,EAAMA,EAAK/C,KAAKwK,KAAKzC,EAAKoC,IAAQ,EAClCzD,EAAOA,EAAM1G,KAAKwK,KAAKzC,EAAKqC,IAAQ,EACpC1D,EAAOA,EAAM1G,KAAKwK,KAAKxC,EAAKmC,IAAQ,EACpCzF,EAAMA,EAAK1E,KAAKwK,KAAKxC,EAAKoC,IAAQ,EAClCrH,EAAMA,EAAK/C,KAAKwK,KAAK5C,EAAK0C,IAAQ,EAClC5D,EAAOA,EAAM1G,KAAKwK,KAAK5C,EAAK2C,IAAQ,EACpC7D,EAAOA,EAAM1G,KAAKwK,KAAK3C,EAAKyC,IAAQ,EACpC5F,EAAMA,EAAK1E,KAAKwK,KAAK3C,EAAK0C,IAAQ,EAClC,IAAIgB,IAASlP,EAAI0G,EAAM,KAAa,KAAN2D,IAAiB,IAAO,EACtDrK,GAAOqI,GAAMgC,IAAQ,IAAO,IAAM6E,KAAQ,IAAO,EACjDA,IAAO,SAEPxI,EAAK/C,KAAKwK,KAAKhC,EAAKqB,IACpBnD,EAAM1G,KAAKwK,KAAKhC,EAAKsB,IACrBpD,EAAOA,EAAM1G,KAAKwK,KAAK/B,EAAKoB,IAAQ,EACpCnF,EAAK1E,KAAKwK,KAAK/B,EAAKqB,IACpB/G,EAAMA,EAAK/C,KAAKwK,KAAKnC,EAAK2B,IAAQ,EAClCtD,EAAOA,EAAM1G,KAAKwK,KAAKnC,EAAK4B,IAAQ,EACpCvD,EAAOA,EAAM1G,KAAKwK,KAAKlC,EAAK0B,IAAQ,EACpCtF,EAAMA,EAAK1E,KAAKwK,KAAKlC,EAAK2B,IAAQ,EAClClH,EAAMA,EAAK/C,KAAKwK,KAAKtC,EAAKiC,IAAQ,EAClCzD,EAAOA,EAAM1G,KAAKwK,KAAKtC,EAAKkC,IAAQ,EACpC1D,EAAOA,EAAM1G,KAAKwK,KAAKrC,EAAKgC,IAAQ,EACpCzF,EAAMA,EAAK1E,KAAKwK,KAAKrC,EAAKiC,IAAQ,EAClCrH,EAAMA,EAAK/C,KAAKwK,KAAKzC,EAAKuC,IAAQ,EAClC5D,EAAOA,EAAM1G,KAAKwK,KAAKzC,EAAKwC,IAAQ,EACpC7D,EAAOA,EAAM1G,KAAKwK,KAAKxC,EAAKsC,IAAQ,EACpC5F,EAAMA,EAAK1E,KAAKwK,KAAKxC,EAAKuC,IAAQ,EAClC,IAAIiB,IAASnP,EAAI0G,EAAM,KAAa,KAAN2D,IAAiB,IAAO,EACtDrK,GAAOqI,GAAMgC,IAAQ,IAAO,IAAM8E,KAAQ,IAAO,EACjDA,IAAO,SAEPzI,EAAK/C,KAAKwK,KAAKhC,EAAKwB,IACpBtD,EAAM1G,KAAKwK,KAAKhC,EAAKyB,IACrBvD,EAAOA,EAAM1G,KAAKwK,KAAK/B,EAAKuB,IAAQ,EACpCtF,EAAK1E,KAAKwK,KAAK/B,EAAKwB,IACpBlH,EAAMA,EAAK/C,KAAKwK,KAAKnC,EAAK8B,IAAQ,EAClCzD,EAAOA,EAAM1G,KAAKwK,KAAKnC,EAAK+B,IAAQ,EACpC1D,EAAOA,EAAM1G,KAAKwK,KAAKlC,EAAK6B,IAAQ,EACpCzF,EAAMA,EAAK1E,KAAKwK,KAAKlC,EAAK8B,IAAQ,EAClCrH,EAAMA,EAAK/C,KAAKwK,KAAKtC,EAAKoC,IAAQ,EAClC5D,EAAOA,EAAM1G,KAAKwK,KAAKtC,EAAKqC,IAAQ,EACpC7D,EAAOA,EAAM1G,KAAKwK,KAAKrC,EAAKmC,IAAQ,EACpC5F,EAAMA,EAAK1E,KAAKwK,KAAKrC,EAAKoC,IAAQ,EAClC,IAAIkB,IAASpP,EAAI0G,EAAM,KAAa,KAAN2D,IAAiB,IAAO,EACtDrK,GAAOqI,GAAMgC,IAAQ,IAAO,IAAM+E,KAAQ,IAAO,EACjDA,IAAO,SAEP1I,EAAK/C,KAAKwK,KAAKhC,EAAK2B,IACpBzD,EAAM1G,KAAKwK,KAAKhC,EAAK4B,IACrB1D,EAAOA,EAAM1G,KAAKwK,KAAK/B,EAAK0B,IAAQ,EACpCzF,EAAK1E,KAAKwK,KAAK/B,EAAK2B,IACpBrH,EAAMA,EAAK/C,KAAKwK,KAAKnC,EAAKiC,IAAQ,EAClC5D,EAAOA,EAAM1G,KAAKwK,KAAKnC,EAAKkC,IAAQ,EACpC7D,EAAOA,EAAM1G,KAAKwK,KAAKlC,EAAKgC,IAAQ,EACpC5F,EAAMA,EAAK1E,KAAKwK,KAAKlC,EAAKiC,IAAQ,EAClC,IAAImB,IAASrP,EAAI0G,EAAM,KAAa,KAAN2D,IAAiB,IAAO,EACtDrK,GAAOqI,GAAMgC,IAAQ,IAAO,IAAMgF,KAAQ,IAAO,EACjDA,IAAO,SAEP3I,EAAK/C,KAAKwK,KAAKhC,EAAK8B,IACpB5D,EAAM1G,KAAKwK,KAAKhC,EAAK+B,IACrB7D,EAAOA,EAAM1G,KAAKwK,KAAK/B,EAAK6B,IAAQ,EACpC5F,EAAK1E,KAAKwK,KAAK/B,EAAK8B,IACpB,IAAIoB,IAAStP,EAAI0G,EAAM,KAAa,KAAN2D,IAAiB,IAAO,EA0BtD,OAzBArK,GAAOqI,GAAMgC,IAAQ,IAAO,IAAMiF,KAAQ,IAAO,EACjDA,IAAO,SACPhF,EAAE,GAAK8D,GACP9D,EAAE,GAAK+D,GACP/D,EAAE,GAAKgE,GACPhE,EAAE,GAAKiE,GACPjE,EAAE,GAAKkE,GACPlE,EAAE,GAAKmE,GACPnE,EAAE,GAAKoE,GACPpE,EAAE,GAAKqE,GACPrE,EAAE,GAAKsE,GACPtE,EAAE,GAAKuE,GACPvE,EAAE,IAAMwE,GACRxE,EAAE,IAAMyE,GACRzE,EAAE,IAAM0E,GACR1E,EAAE,IAAM2E,GACR3E,EAAE,IAAM4E,GACR5E,EAAE,IAAM6E,GACR7E,EAAE,IAAM8E,GACR9E,EAAE,IAAM+E,GACR/E,EAAE,IAAMgF,GACE,IAANtP,IACFsK,EAAE,IAAMtK,EACRuG,EAAIzI,UAECyI,GAQT,SAASgJ,EAAUjJ,EAAMvC,EAAKwC,GAC5BA,EAAIvD,SAAWe,EAAIf,SAAWsD,EAAKtD,SACnCuD,EAAIzI,OAASwI,EAAKxI,OAASiG,EAAIjG,OAI/B,IAFA,IAAI6I,EAAQ,EACR6I,EAAU,EACL5I,EAAI,EAAGA,EAAIL,EAAIzI,OAAS,EAAG8I,IAAK,CAGvC,IAAIC,EAAS2I,EACbA,EAAU,EAGV,IAFA,IAAI1I,EAAgB,SAARH,EACRI,EAAOpD,KAAKC,IAAIgD,EAAG7C,EAAIjG,OAAS,GAC3B8G,EAAIjB,KAAKM,IAAI,EAAG2C,EAAIN,EAAKxI,OAAS,GAAI8G,GAAKmC,EAAMnC,IAAK,CAC7D,IAAIvH,EAAIuJ,EAAIhC,EACR4B,EAAoB,EAAhBF,EAAKrD,MAAM5F,GACfoJ,EAAmB,EAAf1C,EAAId,MAAM2B,GACdnB,EAAI+C,EAAIC,EAERC,EAAS,SAAJjD,EACToD,EAAUA,GAAWpD,EAAI,SAAa,GAAM,EAC5CiD,EAAMA,EAAKI,EAAS,EACpBA,EAAa,SAALJ,EACRG,EAAUA,GAAUH,IAAO,IAAO,EAElC8I,GAAW3I,IAAW,GACtBA,GAAU,SAEZN,EAAItD,MAAM2D,GAAKE,EACfH,EAAQE,EACRA,EAAS2I,EAQX,OANc,IAAV7I,EACFJ,EAAItD,MAAM2D,GAAKD,EAEfJ,EAAIzI,SAGCyI,EAAI9B,QAGb,SAASgL,EAAYnJ,EAAMvC,EAAKwC,GAC9B,IAAImJ,EAAO,IAAIC,EACf,OAAOD,EAAKE,KAAKtJ,EAAMvC,EAAKwC,GAsB9B,SAASoJ,EAAME,EAAGC,GAChBtO,KAAKqO,EAAIA,EACTrO,KAAKsO,EAAIA,EAvENnM,KAAKwK,OACR/D,EAAc/D,GAiDhB1K,EAAGkG,UAAUkO,MAAQ,SAAgBhM,EAAKwC,GACxC,IAAIsB,EACAnE,EAAMlC,KAAK1D,OAASiG,EAAIjG,OAW5B,OATE+J,EADkB,KAAhBrG,KAAK1D,QAAgC,KAAfiG,EAAIjG,OACtBsM,EAAY5I,KAAMuC,EAAKwC,GACpB7C,EAAM,GACT2C,EAAW7E,KAAMuC,EAAKwC,GACnB7C,EAAM,KACT6L,EAAS/N,KAAMuC,EAAKwC,GAEpBkJ,EAAWjO,KAAMuC,EAAKwC,GAGvBsB,GAWT8H,EAAK9N,UAAUmO,QAAU,SAAkBC,GAGzC,IAFA,IAAI9H,EAAI,IAAIpK,MAAMkS,GACdpR,EAAIlD,EAAGkG,UAAUqG,WAAW+H,GAAK,EAC5B5S,EAAI,EAAGA,EAAI4S,EAAG5S,IACrB8K,EAAE9K,GAAKmE,KAAK0O,OAAO7S,EAAGwB,EAAGoR,GAG3B,OAAO9H,GAITwH,EAAK9N,UAAUqO,OAAS,SAAiBL,EAAGhR,EAAGoR,GAC7C,GAAU,IAANJ,GAAWA,IAAMI,EAAI,EAAG,OAAOJ,EAGnC,IADA,IAAIM,EAAK,EACA9S,EAAI,EAAGA,EAAIwB,EAAGxB,IACrB8S,IAAW,EAAJN,IAAWhR,EAAIxB,EAAI,EAC1BwS,IAAM,EAGR,OAAOM,GAKTR,EAAK9N,UAAUuO,QAAU,SAAkBC,EAAKC,EAAKC,EAAKC,EAAMC,EAAMR,GACpE,IAAK,IAAI5S,EAAI,EAAGA,EAAI4S,EAAG5S,IACrBmT,EAAKnT,GAAKiT,EAAID,EAAIhT,IAClBoT,EAAKpT,GAAKkT,EAAIF,EAAIhT,KAItBsS,EAAK9N,UAAU6O,UAAY,SAAoBJ,EAAKC,EAAKC,EAAMC,EAAMR,EAAGI,GACtE7O,KAAK4O,QAAQC,EAAKC,EAAKC,EAAKC,EAAMC,EAAMR,GAExC,IAAK,IAAIU,EAAI,EAAGA,EAAIV,EAAGU,IAAM,EAM3B,IALA,IAAI9R,EAAI8R,GAAK,EAETC,EAAQjN,KAAKkN,IAAI,EAAIlN,KAAKmN,GAAKjS,GAC/BkS,EAAQpN,KAAKqN,IAAI,EAAIrN,KAAKmN,GAAKjS,GAE1BoS,EAAI,EAAGA,EAAIhB,EAAGgB,GAAKpS,EAI1B,IAHA,IAAIqS,EAASN,EACTO,EAASJ,EAEJnM,EAAI,EAAGA,EAAI+L,EAAG/L,IAAK,CAC1B,IAAIwM,EAAKZ,EAAKS,EAAIrM,GACdyM,EAAKZ,EAAKQ,EAAIrM,GAEd0M,EAAKd,EAAKS,EAAIrM,EAAI+L,GAClBY,EAAKd,EAAKQ,EAAIrM,EAAI+L,GAElBa,EAAKN,EAASI,EAAKH,EAASI,EAEhCA,EAAKL,EAASK,EAAKJ,EAASG,EAC5BA,EAAKE,EAELhB,EAAKS,EAAIrM,GAAKwM,EAAKE,EACnBb,EAAKQ,EAAIrM,GAAKyM,EAAKE,EAEnBf,EAAKS,EAAIrM,EAAI+L,GAAKS,EAAKE,EACvBb,EAAKQ,EAAIrM,EAAI+L,GAAKU,EAAKE,EAGnB3M,IAAM/F,IACR2S,EAAKZ,EAAQM,EAASH,EAAQI,EAE9BA,EAASP,EAAQO,EAASJ,EAAQG,EAClCA,EAASM,KAOnB7B,EAAK9N,UAAU4P,YAAc,SAAsB/S,EAAGgT,GACpD,IAAIzB,EAAqB,EAAjBtM,KAAKM,IAAIyN,EAAGhT,GAChBiT,EAAU,EAAJ1B,EACN5S,EAAI,EACR,IAAK4S,EAAIA,EAAI,EAAI,EAAGA,EAAGA,KAAU,EAC/B5S,IAGF,OAAO,GAAKA,EAAI,EAAIsU,GAGtBhC,EAAK9N,UAAU+P,UAAY,SAAoBtB,EAAKC,EAAKN,GACvD,KAAIA,GAAK,GAET,IAAK,IAAI5S,EAAI,EAAGA,EAAI4S,EAAI,EAAG5S,IAAK,CAC9B,IAAI8K,EAAImI,EAAIjT,GAEZiT,EAAIjT,GAAKiT,EAAIL,EAAI5S,EAAI,GACrBiT,EAAIL,EAAI5S,EAAI,GAAK8K,EAEjBA,EAAIoI,EAAIlT,GAERkT,EAAIlT,IAAMkT,EAAIN,EAAI5S,EAAI,GACtBkT,EAAIN,EAAI5S,EAAI,IAAM8K,IAItBwH,EAAK9N,UAAUgQ,aAAe,SAAuBC,EAAI7B,GAEvD,IADA,IAAItJ,EAAQ,EACHtJ,EAAI,EAAGA,EAAI4S,EAAI,EAAG5S,IAAK,CAC9B,IAAIwH,EAAoC,KAAhClB,KAAKoO,MAAMD,EAAG,EAAIzU,EAAI,GAAK4S,GACjCtM,KAAKoO,MAAMD,EAAG,EAAIzU,GAAK4S,GACvBtJ,EAEFmL,EAAGzU,GAAS,SAAJwH,EAGN8B,EADE9B,EAAI,SACE,EAEAA,EAAI,SAAY,EAI5B,OAAOiN,GAGTnC,EAAK9N,UAAUmQ,WAAa,SAAqBF,EAAIpO,EAAK4M,EAAKL,GAE7D,IADA,IAAItJ,EAAQ,EACHtJ,EAAI,EAAGA,EAAIqG,EAAKrG,IACvBsJ,GAAyB,EAARmL,EAAGzU,GAEpBiT,EAAI,EAAIjT,GAAa,KAARsJ,EAAgBA,KAAkB,GAC/C2J,EAAI,EAAIjT,EAAI,GAAa,KAARsJ,EAAgBA,KAAkB,GAIrD,IAAKtJ,EAAI,EAAIqG,EAAKrG,EAAI4S,IAAK5S,EACzBiT,EAAIjT,GAAK,EAGXiF,EAAiB,IAAVqE,GACPrE,EAA6B,MAAb,KAARqE,KAGVgJ,EAAK9N,UAAUoQ,KAAO,SAAehC,GAEnC,IADA,IAAIiC,EAAK,IAAInU,MAAMkS,GACV5S,EAAI,EAAGA,EAAI4S,EAAG5S,IACrB6U,EAAG7U,GAAK,EAGV,OAAO6U,GAGTvC,EAAK9N,UAAU+N,KAAO,SAAeC,EAAGC,EAAGvJ,GACzC,IAAI0J,EAAI,EAAIzO,KAAKiQ,YAAY5B,EAAE/R,OAAQgS,EAAEhS,QAErCuS,EAAM7O,KAAKwO,QAAQC,GAEnBvU,EAAI8F,KAAKyQ,KAAKhC,GAEdK,EAAM,IAAIvS,MAAMkS,GAChBkC,EAAO,IAAIpU,MAAMkS,GACjBmC,EAAO,IAAIrU,MAAMkS,GAEjBoC,EAAO,IAAItU,MAAMkS,GACjBqC,EAAQ,IAAIvU,MAAMkS,GAClBsC,EAAQ,IAAIxU,MAAMkS,GAElBuC,EAAOjM,EAAItD,MACfuP,EAAK1U,OAASmS,EAEdzO,KAAKwQ,WAAWnC,EAAE5M,MAAO4M,EAAE/R,OAAQwS,EAAKL,GACxCzO,KAAKwQ,WAAWlC,EAAE7M,MAAO6M,EAAEhS,OAAQuU,EAAMpC,GAEzCzO,KAAKkP,UAAUJ,EAAK5U,EAAGyW,EAAMC,EAAMnC,EAAGI,GACtC7O,KAAKkP,UAAU2B,EAAM3W,EAAG4W,EAAOC,EAAOtC,EAAGI,GAEzC,IAAK,IAAIhT,EAAI,EAAGA,EAAI4S,EAAG5S,IAAK,CAC1B,IAAImU,EAAKW,EAAK9U,GAAKiV,EAAMjV,GAAK+U,EAAK/U,GAAKkV,EAAMlV,GAC9C+U,EAAK/U,GAAK8U,EAAK9U,GAAKkV,EAAMlV,GAAK+U,EAAK/U,GAAKiV,EAAMjV,GAC/C8U,EAAK9U,GAAKmU,EAUZ,OAPAhQ,KAAKoQ,UAAUO,EAAMC,EAAMnC,GAC3BzO,KAAKkP,UAAUyB,EAAMC,EAAMI,EAAM9W,EAAGuU,EAAGI,GACvC7O,KAAKoQ,UAAUY,EAAM9W,EAAGuU,GACxBzO,KAAKqQ,aAAaW,EAAMvC,GAExB1J,EAAIvD,SAAW6M,EAAE7M,SAAW8M,EAAE9M,SAC9BuD,EAAIzI,OAAS+R,EAAE/R,OAASgS,EAAEhS,OACnByI,EAAI9B,SAIb9I,EAAGkG,UAAUiC,IAAM,SAAcC,GAC/B,IAAIwC,EAAM,IAAI5K,EAAG,MAEjB,OADA4K,EAAItD,MAAQ,IAAIlF,MAAMyD,KAAK1D,OAASiG,EAAIjG,QACjC0D,KAAKuO,MAAMhM,EAAKwC,IAIzB5K,EAAGkG,UAAU4Q,KAAO,SAAe1O,GACjC,IAAIwC,EAAM,IAAI5K,EAAG,MAEjB,OADA4K,EAAItD,MAAQ,IAAIlF,MAAMyD,KAAK1D,OAASiG,EAAIjG,QACjC2R,EAAWjO,KAAMuC,EAAKwC,IAI/B5K,EAAGkG,UAAUsM,KAAO,SAAepK,GACjC,OAAOvC,KAAKiE,QAAQsK,MAAMhM,EAAKvC,OAGjC7F,EAAGkG,UAAUuD,MAAQ,SAAgBrB,GACnCzB,EAAsB,kBAARyB,GACdzB,EAAOyB,EAAM,UAIb,IADA,IAAI4C,EAAQ,EACHtJ,EAAI,EAAGA,EAAImE,KAAK1D,OAAQT,IAAK,CACpC,IAAIwH,GAAqB,EAAhBrD,KAAKyB,MAAM5F,IAAU0G,EAC1B2C,GAAU,SAAJ7B,IAA0B,SAAR8B,GAC5BA,IAAU,GACVA,GAAU9B,EAAI,SAAa,EAE3B8B,GAASD,IAAO,GAChBlF,KAAKyB,MAAM5F,GAAU,SAALqJ,EAQlB,OALc,IAAVC,IACFnF,KAAKyB,MAAM5F,GAAKsJ,EAChBnF,KAAK1D,UAGA0D,MAGT7F,EAAGkG,UAAU6Q,KAAO,SAAe3O,GACjC,OAAOvC,KAAKiE,QAAQL,MAAMrB,IAI5BpI,EAAGkG,UAAU8Q,IAAM,WACjB,OAAOnR,KAAKsC,IAAItC,OAIlB7F,EAAGkG,UAAU+Q,KAAO,WAClB,OAAOpR,KAAK2M,KAAK3M,KAAKiE,UAIxB9J,EAAGkG,UAAUyD,IAAM,SAAcvB,GAC/B,IAAIc,EAAIoB,EAAWlC,GACnB,GAAiB,IAAbc,EAAE/G,OAAc,OAAO,IAAInC,EAAG,GAIlC,IADA,IAAIkM,EAAMrG,KACDnE,EAAI,EAAGA,EAAIwH,EAAE/G,OAAQT,IAAKwK,EAAMA,EAAI8K,MAC3C,GAAa,IAAT9N,EAAExH,GAAU,MAGlB,KAAMA,EAAIwH,EAAE/G,OACV,IAAK,IAAIgK,EAAID,EAAI8K,MAAOtV,EAAIwH,EAAE/G,OAAQT,IAAKyK,EAAIA,EAAE6K,MAClC,IAAT9N,EAAExH,KAENwK,EAAMA,EAAI/D,IAAIgE,IAIlB,OAAOD,GAITlM,EAAGkG,UAAUgR,OAAS,SAAiBC,GACrCxQ,EAAuB,kBAATwQ,GAAqBA,GAAQ,GAC3C,IAGIzV,EAHAoG,EAAIqP,EAAO,GACXnC,GAAKmC,EAAOrP,GAAK,GACjBsP,EAAa,WAAe,GAAKtP,GAAQ,GAAKA,EAGlD,GAAU,IAANA,EAAS,CACX,IAAIkD,EAAQ,EAEZ,IAAKtJ,EAAI,EAAGA,EAAImE,KAAK1D,OAAQT,IAAK,CAChC,IAAI2V,EAAWxR,KAAKyB,MAAM5F,GAAK0V,EAC3B/S,GAAsB,EAAhBwB,KAAKyB,MAAM5F,IAAU2V,GAAavP,EAC5CjC,KAAKyB,MAAM5F,GAAK2C,EAAI2G,EACpBA,EAAQqM,IAAc,GAAKvP,EAGzBkD,IACFnF,KAAKyB,MAAM5F,GAAKsJ,EAChBnF,KAAK1D,UAIT,GAAU,IAAN6S,EAAS,CACX,IAAKtT,EAAImE,KAAK1D,OAAS,EAAGT,GAAK,EAAGA,IAChCmE,KAAKyB,MAAM5F,EAAIsT,GAAKnP,KAAKyB,MAAM5F,GAGjC,IAAKA,EAAI,EAAGA,EAAIsT,EAAGtT,IACjBmE,KAAKyB,MAAM5F,GAAK,EAGlBmE,KAAK1D,QAAU6S,EAGjB,OAAOnP,KAAKiD,SAGd9I,EAAGkG,UAAUoR,MAAQ,SAAgBH,GAGnC,OADAxQ,EAAyB,IAAlBd,KAAKwB,UACLxB,KAAKqR,OAAOC,IAMrBnX,EAAGkG,UAAUmG,OAAS,SAAiB8K,EAAMI,EAAMC,GAEjD,IAAIC,EADJ9Q,EAAuB,kBAATwQ,GAAqBA,GAAQ,GAGzCM,EADEF,GACGA,EAAQA,EAAO,IAAO,GAEvB,EAGN,IAAIzP,EAAIqP,EAAO,GACXnC,EAAIhN,KAAKC,KAAKkP,EAAOrP,GAAK,GAAIjC,KAAK1D,QACnCuV,EAAO,SAAc,WAAc5P,GAAMA,EACzC6P,EAAcH,EAMlB,GAJAC,GAAKzC,EACLyC,EAAIzP,KAAKM,IAAI,EAAGmP,GAGZE,EAAa,CACf,IAAK,IAAIjW,EAAI,EAAGA,EAAIsT,EAAGtT,IACrBiW,EAAYrQ,MAAM5F,GAAKmE,KAAKyB,MAAM5F,GAEpCiW,EAAYxV,OAAS6S,EAGvB,GAAU,IAANA,QAEG,GAAInP,KAAK1D,OAAS6S,EAEvB,IADAnP,KAAK1D,QAAU6S,EACVtT,EAAI,EAAGA,EAAImE,KAAK1D,OAAQT,IAC3BmE,KAAKyB,MAAM5F,GAAKmE,KAAKyB,MAAM5F,EAAIsT,QAGjCnP,KAAKyB,MAAM,GAAK,EAChBzB,KAAK1D,OAAS,EAGhB,IAAI6I,EAAQ,EACZ,IAAKtJ,EAAImE,KAAK1D,OAAS,EAAGT,GAAK,IAAgB,IAAVsJ,GAAetJ,GAAK+V,GAAI/V,IAAK,CAChE,IAAI8H,EAAuB,EAAhB3D,KAAKyB,MAAM5F,GACtBmE,KAAKyB,MAAM5F,GAAMsJ,GAAU,GAAKlD,EAAO0B,IAAS1B,EAChDkD,EAAQxB,EAAOkO,EAajB,OATIC,GAAyB,IAAV3M,IACjB2M,EAAYrQ,MAAMqQ,EAAYxV,UAAY6I,GAGxB,IAAhBnF,KAAK1D,SACP0D,KAAKyB,MAAM,GAAK,EAChBzB,KAAK1D,OAAS,GAGT0D,KAAKiD,SAGd9I,EAAGkG,UAAU0R,MAAQ,SAAgBT,EAAMI,EAAMC,GAG/C,OADA7Q,EAAyB,IAAlBd,KAAKwB,UACLxB,KAAKwG,OAAO8K,EAAMI,EAAMC,IAIjCxX,EAAGkG,UAAU2R,KAAO,SAAeV,GACjC,OAAOtR,KAAKiE,QAAQwN,MAAMH,IAG5BnX,EAAGkG,UAAU4R,MAAQ,SAAgBX,GACnC,OAAOtR,KAAKiE,QAAQoN,OAAOC,IAI7BnX,EAAGkG,UAAU6R,KAAO,SAAeZ,GACjC,OAAOtR,KAAKiE,QAAQ8N,MAAMT,IAG5BnX,EAAGkG,UAAU8R,MAAQ,SAAgBb,GACnC,OAAOtR,KAAKiE,QAAQuC,OAAO8K,IAI7BnX,EAAGkG,UAAU+G,MAAQ,SAAgBzC,GACnC7D,EAAsB,kBAAR6D,GAAoBA,GAAO,GACzC,IAAI1C,EAAI0C,EAAM,GACVwK,GAAKxK,EAAM1C,GAAK,GAChBqE,EAAI,GAAKrE,EAGb,GAAIjC,KAAK1D,QAAU6S,EAAG,OAAO,EAG7B,IAAI9L,EAAIrD,KAAKyB,MAAM0N,GAEnB,SAAU9L,EAAIiD,IAIhBnM,EAAGkG,UAAU+R,OAAS,SAAiBd,GACrCxQ,EAAuB,kBAATwQ,GAAqBA,GAAQ,GAC3C,IAAIrP,EAAIqP,EAAO,GACXnC,GAAKmC,EAAOrP,GAAK,GAIrB,GAFAnB,EAAyB,IAAlBd,KAAKwB,SAAgB,2CAExBxB,KAAK1D,QAAU6S,EACjB,OAAOnP,KAQT,GALU,IAANiC,GACFkN,IAEFnP,KAAK1D,OAAS6F,KAAKC,IAAI+M,EAAGnP,KAAK1D,QAErB,IAAN2F,EAAS,CACX,IAAI4P,EAAO,SAAc,WAAc5P,GAAMA,EAC7CjC,KAAKyB,MAAMzB,KAAK1D,OAAS,IAAMuV,EAGjC,OAAO7R,KAAKiD,SAId9I,EAAGkG,UAAUgS,MAAQ,SAAgBf,GACnC,OAAOtR,KAAKiE,QAAQmO,OAAOd,IAI7BnX,EAAGkG,UAAU6G,MAAQ,SAAgB3E,GAGnC,OAFAzB,EAAsB,kBAARyB,GACdzB,EAAOyB,EAAM,UACTA,EAAM,EAAUvC,KAAKsS,OAAO/P,GAGV,IAAlBvC,KAAKwB,SACa,IAAhBxB,KAAK1D,SAAiC,EAAhB0D,KAAKyB,MAAM,IAAUc,GAC7CvC,KAAKyB,MAAM,GAAKc,GAAuB,EAAhBvC,KAAKyB,MAAM,IAClCzB,KAAKwB,SAAW,EACTxB,OAGTA,KAAKwB,SAAW,EAChBxB,KAAKsS,MAAM/P,GACXvC,KAAKwB,SAAW,EACTxB,MAIFA,KAAK6D,OAAOtB,IAGrBpI,EAAGkG,UAAUwD,OAAS,SAAiBtB,GACrCvC,KAAKyB,MAAM,IAAMc,EAGjB,IAAK,IAAI1G,EAAI,EAAGA,EAAImE,KAAK1D,QAAU0D,KAAKyB,MAAM5F,IAAM,SAAWA,IAC7DmE,KAAKyB,MAAM5F,IAAM,SACbA,IAAMmE,KAAK1D,OAAS,EACtB0D,KAAKyB,MAAM5F,EAAI,GAAK,EAEpBmE,KAAKyB,MAAM5F,EAAI,KAKnB,OAFAmE,KAAK1D,OAAS6F,KAAKM,IAAIzC,KAAK1D,OAAQT,EAAI,GAEjCmE,MAIT7F,EAAGkG,UAAUiS,MAAQ,SAAgB/P,GAGnC,GAFAzB,EAAsB,kBAARyB,GACdzB,EAAOyB,EAAM,UACTA,EAAM,EAAG,OAAOvC,KAAKkH,OAAO3E,GAEhC,GAAsB,IAAlBvC,KAAKwB,SAIP,OAHAxB,KAAKwB,SAAW,EAChBxB,KAAKkH,MAAM3E,GACXvC,KAAKwB,SAAW,EACTxB,KAKT,GAFAA,KAAKyB,MAAM,IAAMc,EAEG,IAAhBvC,KAAK1D,QAAgB0D,KAAKyB,MAAM,GAAK,EACvCzB,KAAKyB,MAAM,IAAMzB,KAAKyB,MAAM,GAC5BzB,KAAKwB,SAAW,OAGhB,IAAK,IAAI3F,EAAI,EAAGA,EAAImE,KAAK1D,QAAU0D,KAAKyB,MAAM5F,GAAK,EAAGA,IACpDmE,KAAKyB,MAAM5F,IAAM,SACjBmE,KAAKyB,MAAM5F,EAAI,IAAM,EAIzB,OAAOmE,KAAKiD,SAGd9I,EAAGkG,UAAUkS,KAAO,SAAehQ,GACjC,OAAOvC,KAAKiE,QAAQiD,MAAM3E,IAG5BpI,EAAGkG,UAAUmS,KAAO,SAAejQ,GACjC,OAAOvC,KAAKiE,QAAQqO,MAAM/P,IAG5BpI,EAAGkG,UAAUoS,KAAO,WAGlB,OAFAzS,KAAKwB,SAAW,EAETxB,MAGT7F,EAAGkG,UAAU2G,IAAM,WACjB,OAAOhH,KAAKiE,QAAQwO,QAGtBtY,EAAGkG,UAAUqS,aAAe,SAAuBnQ,EAAKD,EAAKqQ,GAC3D,IACI9W,EAIAwH,EALAnB,EAAMK,EAAIjG,OAASqW,EAGvB3S,KAAKkE,QAAQhC,GAGb,IAAIiD,EAAQ,EACZ,IAAKtJ,EAAI,EAAGA,EAAI0G,EAAIjG,OAAQT,IAAK,CAC/BwH,GAA6B,EAAxBrD,KAAKyB,MAAM5F,EAAI8W,IAAcxN,EAClC,IAAIxC,GAAwB,EAAfJ,EAAId,MAAM5F,IAAUyG,EACjCe,GAAa,SAARV,EACLwC,GAAS9B,GAAK,KAAQV,EAAQ,SAAa,GAC3C3C,KAAKyB,MAAM5F,EAAI8W,GAAa,SAAJtP,EAE1B,KAAOxH,EAAImE,KAAK1D,OAASqW,EAAO9W,IAC9BwH,GAA6B,EAAxBrD,KAAKyB,MAAM5F,EAAI8W,IAAcxN,EAClCA,EAAQ9B,GAAK,GACbrD,KAAKyB,MAAM5F,EAAI8W,GAAa,SAAJtP,EAG1B,GAAc,IAAV8B,EAAa,OAAOnF,KAAKiD,QAK7B,IAFAnC,GAAkB,IAAXqE,GACPA,EAAQ,EACHtJ,EAAI,EAAGA,EAAImE,KAAK1D,OAAQT,IAC3BwH,IAAsB,EAAhBrD,KAAKyB,MAAM5F,IAAUsJ,EAC3BA,EAAQ9B,GAAK,GACbrD,KAAKyB,MAAM5F,GAAS,SAAJwH,EAIlB,OAFArD,KAAKwB,SAAW,EAETxB,KAAKiD,SAGd9I,EAAGkG,UAAUuS,SAAW,SAAmBrQ,EAAKsQ,GAC9C,IAAIF,EAAQ3S,KAAK1D,OAASiG,EAAIjG,OAE1B0I,EAAIhF,KAAKiE,QACTgB,EAAI1C,EAGJuQ,EAA8B,EAAxB7N,EAAExD,MAAMwD,EAAE3I,OAAS,GACzByW,EAAU/S,KAAK0G,WAAWoM,GAC9BH,EAAQ,GAAKI,EACC,IAAVJ,IACF1N,EAAIA,EAAEgN,MAAMU,GACZ3N,EAAEqM,OAAOsB,GACTG,EAA8B,EAAxB7N,EAAExD,MAAMwD,EAAE3I,OAAS,IAI3B,IACIgK,EADA4J,EAAIlL,EAAE1I,OAAS2I,EAAE3I,OAGrB,GAAa,QAATuW,EAAgB,CAClBvM,EAAI,IAAInM,EAAG,MACXmM,EAAEhK,OAAS4T,EAAI,EACf5J,EAAE7E,MAAQ,IAAIlF,MAAM+J,EAAEhK,QACtB,IAAK,IAAIT,EAAI,EAAGA,EAAIyK,EAAEhK,OAAQT,IAC5ByK,EAAE7E,MAAM5F,GAAK,EAIjB,IAAImX,EAAOhO,EAAEf,QAAQyO,aAAazN,EAAG,EAAGiL,GAClB,IAAlB8C,EAAKxR,WACPwD,EAAIgO,EACA1M,IACFA,EAAE7E,MAAMyO,GAAK,IAIjB,IAAK,IAAI9M,EAAI8M,EAAI,EAAG9M,GAAK,EAAGA,IAAK,CAC/B,IAAI6P,EAAmC,UAAL,EAAxBjO,EAAEvD,MAAMwD,EAAE3I,OAAS8G,KACE,EAA5B4B,EAAEvD,MAAMwD,EAAE3I,OAAS8G,EAAI,IAI1B6P,EAAK9Q,KAAKC,IAAK6Q,EAAKH,EAAO,EAAG,UAE9B9N,EAAE0N,aAAazN,EAAGgO,EAAI7P,GACtB,MAAsB,IAAf4B,EAAExD,SACPyR,IACAjO,EAAExD,SAAW,EACbwD,EAAE0N,aAAazN,EAAG,EAAG7B,GAChB4B,EAAEU,WACLV,EAAExD,UAAY,GAGd8E,IACFA,EAAE7E,MAAM2B,GAAK6P,GAajB,OAVI3M,GACFA,EAAErD,QAEJ+B,EAAE/B,QAGW,QAAT4P,GAA4B,IAAVF,GACpB3N,EAAEwB,OAAOmM,GAGJ,CACLO,IAAK5M,GAAK,KACV5C,IAAKsB,IAQT7K,EAAGkG,UAAU8S,OAAS,SAAiB5Q,EAAKsQ,EAAMO,GAGhD,OAFAtS,GAAQyB,EAAImD,UAER1F,KAAK0F,SACA,CACLwN,IAAK,IAAI/Y,EAAG,GACZuJ,IAAK,IAAIvJ,EAAG,IAKM,IAAlB6F,KAAKwB,UAAmC,IAAjBe,EAAIf,UAC7B6E,EAAMrG,KAAKwH,MAAM2L,OAAO5Q,EAAKsQ,GAEhB,QAATA,IACFK,EAAM7M,EAAI6M,IAAI1L,OAGH,QAATqL,IACFnP,EAAM2C,EAAI3C,IAAI8D,MACV4L,GAA6B,IAAjB1P,EAAIlC,UAClBkC,EAAI8E,KAAKjG,IAIN,CACL2Q,IAAKA,EACLxP,IAAKA,IAIa,IAAlB1D,KAAKwB,UAAmC,IAAjBe,EAAIf,UAC7B6E,EAAMrG,KAAKmT,OAAO5Q,EAAIiF,MAAOqL,GAEhB,QAATA,IACFK,EAAM7M,EAAI6M,IAAI1L,OAGT,CACL0L,IAAKA,EACLxP,IAAK2C,EAAI3C,MAI0B,KAAlC1D,KAAKwB,SAAWe,EAAIf,WACvB6E,EAAMrG,KAAKwH,MAAM2L,OAAO5Q,EAAIiF,MAAOqL,GAEtB,QAATA,IACFnP,EAAM2C,EAAI3C,IAAI8D,MACV4L,GAA6B,IAAjB1P,EAAIlC,UAClBkC,EAAI+E,KAAKlG,IAIN,CACL2Q,IAAK7M,EAAI6M,IACTxP,IAAKA,IAOLnB,EAAIjG,OAAS0D,KAAK1D,QAAU0D,KAAK4C,IAAIL,GAAO,EACvC,CACL2Q,IAAK,IAAI/Y,EAAG,GACZuJ,IAAK1D,MAKU,IAAfuC,EAAIjG,OACO,QAATuW,EACK,CACLK,IAAKlT,KAAKqT,KAAK9Q,EAAId,MAAM,IACzBiC,IAAK,MAII,QAATmP,EACK,CACLK,IAAK,KACLxP,IAAK,IAAIvJ,EAAG6F,KAAK2F,KAAKpD,EAAId,MAAM,MAI7B,CACLyR,IAAKlT,KAAKqT,KAAK9Q,EAAId,MAAM,IACzBiC,IAAK,IAAIvJ,EAAG6F,KAAK2F,KAAKpD,EAAId,MAAM,MAI7BzB,KAAK4S,SAASrQ,EAAKsQ,GAlF1B,IAAIK,EAAKxP,EAAK2C,GAsFhBlM,EAAGkG,UAAU6S,IAAM,SAAc3Q,GAC/B,OAAOvC,KAAKmT,OAAO5Q,EAAK,OAAO,GAAO2Q,KAIxC/Y,EAAGkG,UAAUqD,IAAM,SAAcnB,GAC/B,OAAOvC,KAAKmT,OAAO5Q,EAAK,OAAO,GAAOmB,KAGxCvJ,EAAGkG,UAAUiT,KAAO,SAAe/Q,GACjC,OAAOvC,KAAKmT,OAAO5Q,EAAK,OAAO,GAAMmB,KAIvCvJ,EAAGkG,UAAUkT,SAAW,SAAmBhR,GACzC,IAAIiR,EAAKxT,KAAKmT,OAAO5Q,GAGrB,GAAIiR,EAAG9P,IAAIgC,SAAU,OAAO8N,EAAGN,IAE/B,IAAIxP,EAA0B,IAApB8P,EAAGN,IAAI1R,SAAiBgS,EAAG9P,IAAI+E,KAAKlG,GAAOiR,EAAG9P,IAEpD+P,EAAOlR,EAAI4P,MAAM,GACjBuB,EAAKnR,EAAIgE,MAAM,GACf3D,EAAMc,EAAId,IAAI6Q,GAGlB,OAAI7Q,EAAM,GAAY,IAAP8Q,GAAoB,IAAR9Q,EAAkB4Q,EAAGN,IAGrB,IAApBM,EAAGN,IAAI1R,SAAiBgS,EAAGN,IAAIZ,MAAM,GAAKkB,EAAGN,IAAIhM,MAAM,IAGhE/M,EAAGkG,UAAUsF,KAAO,SAAepD,GACjCzB,EAAOyB,GAAO,UAId,IAHA,IAAIkN,GAAK,GAAK,IAAMlN,EAEhBoR,EAAM,EACD9X,EAAImE,KAAK1D,OAAS,EAAGT,GAAK,EAAGA,IACpC8X,GAAOlE,EAAIkE,GAAuB,EAAhB3T,KAAKyB,MAAM5F,KAAW0G,EAG1C,OAAOoR,GAITxZ,EAAGkG,UAAUuF,MAAQ,SAAgBrD,GACnCzB,EAAOyB,GAAO,UAGd,IADA,IAAI4C,EAAQ,EACHtJ,EAAImE,KAAK1D,OAAS,EAAGT,GAAK,EAAGA,IAAK,CACzC,IAAIwH,GAAqB,EAAhBrD,KAAKyB,MAAM5F,IAAkB,SAARsJ,EAC9BnF,KAAKyB,MAAM5F,GAAMwH,EAAId,EAAO,EAC5B4C,EAAQ9B,EAAId,EAGd,OAAOvC,KAAKiD,SAGd9I,EAAGkG,UAAUgT,KAAO,SAAe9Q,GACjC,OAAOvC,KAAKiE,QAAQ2B,MAAMrD,IAG5BpI,EAAGkG,UAAUuT,KAAO,SAAenE,GACjC3O,EAAsB,IAAf2O,EAAEjO,UACTV,GAAQ2O,EAAE/J,UAEV,IAAI2I,EAAIrO,KACJsO,EAAImB,EAAExL,QAGRoK,EADiB,IAAfA,EAAE7M,SACA6M,EAAEiF,KAAK7D,GAEPpB,EAAEpK,QAIR,IAAI4P,EAAI,IAAI1Z,EAAG,GACX2Z,EAAI,IAAI3Z,EAAG,GAGX4Z,EAAI,IAAI5Z,EAAG,GACX6Z,EAAI,IAAI7Z,EAAG,GAEX8Z,EAAI,EAER,MAAO5F,EAAE6F,UAAY5F,EAAE4F,SACrB7F,EAAE7H,OAAO,GACT8H,EAAE9H,OAAO,KACPyN,EAGJ,IAAIE,EAAK7F,EAAErK,QACPmQ,EAAK/F,EAAEpK,QAEX,OAAQoK,EAAE3I,SAAU,CAClB,IAAK,IAAI7J,EAAI,EAAGwY,EAAK,EAAyB,KAArBhG,EAAE5M,MAAM,GAAK4S,IAAaxY,EAAI,KAAMA,EAAGwY,IAAO,GACvE,GAAIxY,EAAI,EAAG,CACTwS,EAAE7H,OAAO3K,GACT,MAAOA,KAAM,GACPgY,EAAES,SAAWR,EAAEQ,WACjBT,EAAErL,KAAK2L,GACPL,EAAErL,KAAK2L,IAGTP,EAAErN,OAAO,GACTsN,EAAEtN,OAAO,GAIb,IAAK,IAAIpD,EAAI,EAAGmR,EAAK,EAAyB,KAArBjG,EAAE7M,MAAM,GAAK8S,IAAanR,EAAI,KAAMA,EAAGmR,IAAO,GACvE,GAAInR,EAAI,EAAG,CACTkL,EAAE9H,OAAOpD,GACT,MAAOA,KAAM,GACP2Q,EAAEO,SAAWN,EAAEM,WACjBP,EAAEvL,KAAK2L,GACPH,EAAEvL,KAAK2L,IAGTL,EAAEvN,OAAO,GACTwN,EAAExN,OAAO,GAIT6H,EAAEzL,IAAI0L,IAAM,GACdD,EAAE5F,KAAK6F,GACPuF,EAAEpL,KAAKsL,GACPD,EAAErL,KAAKuL,KAEP1F,EAAE7F,KAAK4F,GACP0F,EAAEtL,KAAKoL,GACPG,EAAEvL,KAAKqL,IAIX,MAAO,CACL9O,EAAG+O,EACH9O,EAAG+O,EACHQ,IAAKlG,EAAE+C,OAAO4C,KAOlB9Z,EAAGkG,UAAUoU,OAAS,SAAiBhF,GACrC3O,EAAsB,IAAf2O,EAAEjO,UACTV,GAAQ2O,EAAE/J,UAEV,IAAIV,EAAIhF,KACJiF,EAAIwK,EAAExL,QAGRe,EADiB,IAAfA,EAAExD,SACAwD,EAAEsO,KAAK7D,GAEPzK,EAAEf,QAGR,IAuCIoC,EAvCAqO,EAAK,IAAIva,EAAG,GACZwa,EAAK,IAAIxa,EAAG,GAEZya,EAAQ3P,EAAEhB,QAEd,MAAOe,EAAE6P,KAAK,GAAK,GAAK5P,EAAE4P,KAAK,GAAK,EAAG,CACrC,IAAK,IAAIhZ,EAAI,EAAGwY,EAAK,EAAyB,KAArBrP,EAAEvD,MAAM,GAAK4S,IAAaxY,EAAI,KAAMA,EAAGwY,IAAO,GACvE,GAAIxY,EAAI,EAAG,CACTmJ,EAAEwB,OAAO3K,GACT,MAAOA,KAAM,EACP6Y,EAAGJ,SACLI,EAAGlM,KAAKoM,GAGVF,EAAGlO,OAAO,GAId,IAAK,IAAIpD,EAAI,EAAGmR,EAAK,EAAyB,KAArBtP,EAAExD,MAAM,GAAK8S,IAAanR,EAAI,KAAMA,EAAGmR,IAAO,GACvE,GAAInR,EAAI,EAAG,CACT6B,EAAEuB,OAAOpD,GACT,MAAOA,KAAM,EACPuR,EAAGL,SACLK,EAAGnM,KAAKoM,GAGVD,EAAGnO,OAAO,GAIVxB,EAAEpC,IAAIqC,IAAM,GACdD,EAAEyD,KAAKxD,GACPyP,EAAGjM,KAAKkM,KAER1P,EAAEwD,KAAKzD,GACP2P,EAAGlM,KAAKiM,IAeZ,OATErO,EADgB,IAAdrB,EAAE6P,KAAK,GACHH,EAEAC,EAGJtO,EAAIwO,KAAK,GAAK,GAChBxO,EAAImC,KAAKiH,GAGJpJ,GAGTlM,EAAGkG,UAAUmU,IAAM,SAAcjS,GAC/B,GAAIvC,KAAK0F,SAAU,OAAOnD,EAAIyE,MAC9B,GAAIzE,EAAImD,SAAU,OAAO1F,KAAKgH,MAE9B,IAAIhC,EAAIhF,KAAKiE,QACTgB,EAAI1C,EAAI0B,QACZe,EAAExD,SAAW,EACbyD,EAAEzD,SAAW,EAGb,IAAK,IAAImR,EAAQ,EAAG3N,EAAEkP,UAAYjP,EAAEiP,SAAUvB,IAC5C3N,EAAEwB,OAAO,GACTvB,EAAEuB,OAAO,GAGX,EAAG,CACD,MAAOxB,EAAEkP,SACPlP,EAAEwB,OAAO,GAEX,MAAOvB,EAAEiP,SACPjP,EAAEuB,OAAO,GAGX,IAAIvE,EAAI+C,EAAEpC,IAAIqC,GACd,GAAIhD,EAAI,EAAG,CAET,IAAI0E,EAAI3B,EACRA,EAAIC,EACJA,EAAI0B,OACC,GAAU,IAAN1E,GAAyB,IAAdgD,EAAE4P,KAAK,GAC3B,MAGF7P,EAAEyD,KAAKxD,SACA,GAET,OAAOA,EAAEoM,OAAOsB,IAIlBxY,EAAGkG,UAAUyU,KAAO,SAAevS,GACjC,OAAOvC,KAAK4T,KAAKrR,GAAKyC,EAAEsO,KAAK/Q,IAG/BpI,EAAGkG,UAAU6T,OAAS,WACpB,OAA+B,KAAP,EAAhBlU,KAAKyB,MAAM,KAGrBtH,EAAGkG,UAAUiU,MAAQ,WACnB,OAA+B,KAAP,EAAhBtU,KAAKyB,MAAM,KAIrBtH,EAAGkG,UAAUkG,MAAQ,SAAgBhE,GACnC,OAAOvC,KAAKyB,MAAM,GAAKc,GAIzBpI,EAAGkG,UAAU0U,MAAQ,SAAgBpQ,GACnC7D,EAAsB,kBAAR6D,GACd,IAAI1C,EAAI0C,EAAM,GACVwK,GAAKxK,EAAM1C,GAAK,GAChBqE,EAAI,GAAKrE,EAGb,GAAIjC,KAAK1D,QAAU6S,EAGjB,OAFAnP,KAAKkE,QAAQiL,EAAI,GACjBnP,KAAKyB,MAAM0N,IAAM7I,EACVtG,KAKT,IADA,IAAImF,EAAQmB,EACHzK,EAAIsT,EAAa,IAAVhK,GAAetJ,EAAImE,KAAK1D,OAAQT,IAAK,CACnD,IAAIwH,EAAoB,EAAhBrD,KAAKyB,MAAM5F,GACnBwH,GAAK8B,EACLA,EAAQ9B,IAAM,GACdA,GAAK,SACLrD,KAAKyB,MAAM5F,GAAKwH,EAMlB,OAJc,IAAV8B,IACFnF,KAAKyB,MAAM5F,GAAKsJ,EAChBnF,KAAK1D,UAEA0D,MAGT7F,EAAGkG,UAAUqF,OAAS,WACpB,OAAuB,IAAhB1F,KAAK1D,QAAkC,IAAlB0D,KAAKyB,MAAM,IAGzCtH,EAAGkG,UAAUwU,KAAO,SAAetS,GACjC,IAOI8D,EAPA7E,EAAWe,EAAM,EAErB,GAAsB,IAAlBvC,KAAKwB,WAAmBA,EAAU,OAAQ,EAC9C,GAAsB,IAAlBxB,KAAKwB,UAAkBA,EAAU,OAAO,EAK5C,GAHAxB,KAAKiD,QAGDjD,KAAK1D,OAAS,EAChB+J,EAAM,MACD,CACD7E,IACFe,GAAOA,GAGTzB,EAAOyB,GAAO,SAAW,qBAEzB,IAAIc,EAAoB,EAAhBrD,KAAKyB,MAAM,GACnB4E,EAAMhD,IAAMd,EAAM,EAAIc,EAAId,GAAO,EAAI,EAEvC,OAAsB,IAAlBvC,KAAKwB,SAA8B,GAAN6E,EAC1BA,GAOTlM,EAAGkG,UAAUuC,IAAM,SAAcL,GAC/B,GAAsB,IAAlBvC,KAAKwB,UAAmC,IAAjBe,EAAIf,SAAgB,OAAQ,EACvD,GAAsB,IAAlBxB,KAAKwB,UAAmC,IAAjBe,EAAIf,SAAgB,OAAO,EAEtD,IAAI6E,EAAMrG,KAAKgV,KAAKzS,GACpB,OAAsB,IAAlBvC,KAAKwB,SAA8B,GAAN6E,EAC1BA,GAITlM,EAAGkG,UAAU2U,KAAO,SAAezS,GAEjC,GAAIvC,KAAK1D,OAASiG,EAAIjG,OAAQ,OAAO,EACrC,GAAI0D,KAAK1D,OAASiG,EAAIjG,OAAQ,OAAQ,EAGtC,IADA,IAAI+J,EAAM,EACDxK,EAAImE,KAAK1D,OAAS,EAAGT,GAAK,EAAGA,IAAK,CACzC,IAAImJ,EAAoB,EAAhBhF,KAAKyB,MAAM5F,GACfoJ,EAAmB,EAAf1C,EAAId,MAAM5F,GAElB,GAAImJ,IAAMC,EAAV,CACID,EAAIC,EACNoB,GAAO,EACErB,EAAIC,IACboB,EAAM,GAER,OAEF,OAAOA,GAGTlM,EAAGkG,UAAU4U,IAAM,SAAc1S,GAC/B,OAA0B,IAAnBvC,KAAK6U,KAAKtS,IAGnBpI,EAAGkG,UAAU6U,GAAK,SAAa3S,GAC7B,OAAyB,IAAlBvC,KAAK4C,IAAIL,IAGlBpI,EAAGkG,UAAU8U,KAAO,SAAe5S,GACjC,OAAOvC,KAAK6U,KAAKtS,IAAQ,GAG3BpI,EAAGkG,UAAU+U,IAAM,SAAc7S,GAC/B,OAAOvC,KAAK4C,IAAIL,IAAQ,GAG1BpI,EAAGkG,UAAUgV,IAAM,SAAc9S,GAC/B,OAA2B,IAApBvC,KAAK6U,KAAKtS,IAGnBpI,EAAGkG,UAAUlC,GAAK,SAAaoE,GAC7B,OAA0B,IAAnBvC,KAAK4C,IAAIL,IAGlBpI,EAAGkG,UAAUiV,KAAO,SAAe/S,GACjC,OAAOvC,KAAK6U,KAAKtS,IAAQ,GAG3BpI,EAAGkG,UAAUkV,IAAM,SAAchT,GAC/B,OAAOvC,KAAK4C,IAAIL,IAAQ,GAG1BpI,EAAGkG,UAAUmV,IAAM,SAAcjT,GAC/B,OAA0B,IAAnBvC,KAAK6U,KAAKtS,IAGnBpI,EAAGkG,UAAUoV,GAAK,SAAalT,GAC7B,OAAyB,IAAlBvC,KAAK4C,IAAIL,IAOlBpI,EAAGuH,IAAM,SAAca,GACrB,OAAO,IAAImT,EAAInT,IAGjBpI,EAAGkG,UAAUsV,MAAQ,SAAgBC,GAGnC,OAFA9U,GAAQd,KAAK0B,IAAK,yCAClBZ,EAAyB,IAAlBd,KAAKwB,SAAgB,iCACrBoU,EAAIC,UAAU7V,MAAM8V,UAAUF,IAGvCzb,EAAGkG,UAAU0V,QAAU,WAErB,OADAjV,EAAOd,KAAK0B,IAAK,wDACV1B,KAAK0B,IAAIsU,YAAYhW,OAG9B7F,EAAGkG,UAAUyV,UAAY,SAAoBF,GAE3C,OADA5V,KAAK0B,IAAMkU,EACJ5V,MAGT7F,EAAGkG,UAAU4V,SAAW,SAAmBL,GAEzC,OADA9U,GAAQd,KAAK0B,IAAK,yCACX1B,KAAK8V,UAAUF,IAGxBzb,EAAGkG,UAAU6V,OAAS,SAAiB3T,GAErC,OADAzB,EAAOd,KAAK0B,IAAK,sCACV1B,KAAK0B,IAAIgH,IAAI1I,KAAMuC,IAG5BpI,EAAGkG,UAAU8V,QAAU,SAAkB5T,GAEvC,OADAzB,EAAOd,KAAK0B,IAAK,uCACV1B,KAAK0B,IAAI8G,KAAKxI,KAAMuC,IAG7BpI,EAAGkG,UAAU+V,OAAS,SAAiB7T,GAErC,OADAzB,EAAOd,KAAK0B,IAAK,sCACV1B,KAAK0B,IAAIiH,IAAI3I,KAAMuC,IAG5BpI,EAAGkG,UAAUgW,QAAU,SAAkB9T,GAEvC,OADAzB,EAAOd,KAAK0B,IAAK,uCACV1B,KAAK0B,IAAI+G,KAAKzI,KAAMuC,IAG7BpI,EAAGkG,UAAUiW,OAAS,SAAiB/T,GAErC,OADAzB,EAAOd,KAAK0B,IAAK,sCACV1B,KAAK0B,IAAI6U,IAAIvW,KAAMuC,IAG5BpI,EAAGkG,UAAUmW,OAAS,SAAiBjU,GAGrC,OAFAzB,EAAOd,KAAK0B,IAAK,sCACjB1B,KAAK0B,IAAI+U,SAASzW,KAAMuC,GACjBvC,KAAK0B,IAAIY,IAAItC,KAAMuC,IAG5BpI,EAAGkG,UAAUqW,QAAU,SAAkBnU,GAGvC,OAFAzB,EAAOd,KAAK0B,IAAK,sCACjB1B,KAAK0B,IAAI+U,SAASzW,KAAMuC,GACjBvC,KAAK0B,IAAIiL,KAAK3M,KAAMuC,IAG7BpI,EAAGkG,UAAUsW,OAAS,WAGpB,OAFA7V,EAAOd,KAAK0B,IAAK,sCACjB1B,KAAK0B,IAAIkV,SAAS5W,MACXA,KAAK0B,IAAIyP,IAAInR,OAGtB7F,EAAGkG,UAAUwW,QAAU,WAGrB,OAFA/V,EAAOd,KAAK0B,IAAK,uCACjB1B,KAAK0B,IAAIkV,SAAS5W,MACXA,KAAK0B,IAAI0P,KAAKpR,OAIvB7F,EAAGkG,UAAUyW,QAAU,WAGrB,OAFAhW,EAAOd,KAAK0B,IAAK,uCACjB1B,KAAK0B,IAAIkV,SAAS5W,MACXA,KAAK0B,IAAIqV,KAAK/W,OAGvB7F,EAAGkG,UAAU2W,QAAU,WAGrB,OAFAlW,EAAOd,KAAK0B,IAAK,uCACjB1B,KAAK0B,IAAIkV,SAAS5W,MACXA,KAAK0B,IAAIoT,KAAK9U,OAIvB7F,EAAGkG,UAAU4W,OAAS,WAGpB,OAFAnW,EAAOd,KAAK0B,IAAK,sCACjB1B,KAAK0B,IAAIkV,SAAS5W,MACXA,KAAK0B,IAAI8F,IAAIxH,OAGtB7F,EAAGkG,UAAU6W,OAAS,SAAiB3U,GAGrC,OAFAzB,EAAOd,KAAK0B,MAAQa,EAAIb,IAAK,qBAC7B1B,KAAK0B,IAAIkV,SAAS5W,MACXA,KAAK0B,IAAIoC,IAAI9D,KAAMuC,IAI5B,IAAI4U,EAAS,CACXC,KAAM,KACNC,KAAM,KACNC,KAAM,KACNC,OAAQ,MAIV,SAASC,EAAQ9c,EAAM+U,GAErBzP,KAAKtF,KAAOA,EACZsF,KAAKyP,EAAI,IAAItV,EAAGsV,EAAG,IACnBzP,KAAK9C,EAAI8C,KAAKyP,EAAE/K,YAChB1E,KAAKoF,EAAI,IAAIjL,EAAG,GAAGkX,OAAOrR,KAAK9C,GAAGuL,KAAKzI,KAAKyP,GAE5CzP,KAAKyX,IAAMzX,KAAK0X,OA2ClB,SAASC,IACPH,EAAOI,KACL5X,KACA,OACA,2EA+DJ,SAAS6X,IACPL,EAAOI,KACL5X,KACA,OACA,kEAIJ,SAAS8X,IACPN,EAAOI,KACL5X,KACA,OACA,yDAIJ,SAAS+X,IAEPP,EAAOI,KACL5X,KACA,QACA,uEA8CJ,SAAS0V,EAAKxF,GACZ,GAAiB,kBAANA,EAAgB,CACzB,IAAI8H,EAAQ7d,EAAG8d,OAAO/H,GACtBlQ,KAAKkQ,EAAI8H,EAAMvI,EACfzP,KAAKgY,MAAQA,OAEblX,EAAOoP,EAAE+E,IAAI,GAAI,kCACjBjV,KAAKkQ,EAAIA,EACTlQ,KAAKgY,MAAQ,KAkOjB,SAASE,EAAMhI,GACbwF,EAAIkC,KAAK5X,KAAMkQ,GAEflQ,KAAK2S,MAAQ3S,KAAKkQ,EAAExL,YAChB1E,KAAK2S,MAAQ,KAAO,IACtB3S,KAAK2S,OAAS,GAAM3S,KAAK2S,MAAQ,IAGnC3S,KAAKiC,EAAI,IAAI9H,EAAG,GAAGkX,OAAOrR,KAAK2S,OAC/B3S,KAAK0T,GAAK1T,KAAKmY,KAAKnY,KAAKiC,EAAEkP,OAC3BnR,KAAKoY,KAAOpY,KAAKiC,EAAEwS,OAAOzU,KAAKkQ,GAE/BlQ,KAAKqY,KAAOrY,KAAKoY,KAAK9V,IAAItC,KAAKiC,GAAGqQ,MAAM,GAAGY,IAAIlT,KAAKkQ,GACpDlQ,KAAKqY,KAAOrY,KAAKqY,KAAK/E,KAAKtT,KAAKiC,GAChCjC,KAAKqY,KAAOrY,KAAKiC,EAAE0G,IAAI3I,KAAKqY,MAta9Bb,EAAOnX,UAAUqX,KAAO,WACtB,IAAID,EAAM,IAAItd,EAAG,MAEjB,OADAsd,EAAIhW,MAAQ,IAAIlF,MAAM4F,KAAKgB,KAAKnD,KAAK9C,EAAI,KAClCua,GAGTD,EAAOnX,UAAUiY,QAAU,SAAkB/V,GAG3C,IACIgW,EADAtW,EAAIM,EAGR,GACEvC,KAAKlD,MAAMmF,EAAGjC,KAAKyX,KACnBxV,EAAIjC,KAAKwY,MAAMvW,GACfA,EAAIA,EAAEuG,KAAKxI,KAAKyX,KAChBc,EAAOtW,EAAEyC,kBACF6T,EAAOvY,KAAK9C,GAErB,IAAI0F,EAAM2V,EAAOvY,KAAK9C,GAAK,EAAI+E,EAAE+S,KAAKhV,KAAKyP,GAU3C,OATY,IAAR7M,GACFX,EAAER,MAAM,GAAK,EACbQ,EAAE3F,OAAS,GACFsG,EAAM,EACfX,EAAEwG,KAAKzI,KAAKyP,GAEZxN,EAAEgB,QAGGhB,GAGTuV,EAAOnX,UAAUvD,MAAQ,SAAgB2b,EAAO1T,GAC9C0T,EAAMjS,OAAOxG,KAAK9C,EAAG,EAAG6H,IAG1ByS,EAAOnX,UAAUmY,MAAQ,SAAgBjW,GACvC,OAAOA,EAAIoK,KAAK3M,KAAKoF,IASvBnE,EAAS0W,EAAMH,GAEfG,EAAKtX,UAAUvD,MAAQ,SAAgB2b,EAAOC,GAK5C,IAHA,IAAI7G,EAAO,QAEP8G,EAASxW,KAAKC,IAAIqW,EAAMnc,OAAQ,GAC3BT,EAAI,EAAGA,EAAI8c,EAAQ9c,IAC1B6c,EAAOjX,MAAM5F,GAAK4c,EAAMhX,MAAM5F,GAIhC,GAFA6c,EAAOpc,OAASqc,EAEZF,EAAMnc,QAAU,EAGlB,OAFAmc,EAAMhX,MAAM,GAAK,OACjBgX,EAAMnc,OAAS,GAKjB,IAAIsc,EAAOH,EAAMhX,MAAM,GAGvB,IAFAiX,EAAOjX,MAAMiX,EAAOpc,UAAYsc,EAAO/G,EAElChW,EAAI,GAAIA,EAAI4c,EAAMnc,OAAQT,IAAK,CAClC,IAAIgd,EAAwB,EAAjBJ,EAAMhX,MAAM5F,GACvB4c,EAAMhX,MAAM5F,EAAI,KAAQgd,EAAOhH,IAAS,EAAM+G,IAAS,GACvDA,EAAOC,EAETD,KAAU,GACVH,EAAMhX,MAAM5F,EAAI,IAAM+c,EACT,IAATA,GAAcH,EAAMnc,OAAS,GAC/Bmc,EAAMnc,QAAU,GAEhBmc,EAAMnc,QAAU,GAIpBqb,EAAKtX,UAAUmY,MAAQ,SAAgBjW,GAErCA,EAAId,MAAMc,EAAIjG,QAAU,EACxBiG,EAAId,MAAMc,EAAIjG,OAAS,GAAK,EAC5BiG,EAAIjG,QAAU,EAId,IADA,IAAI4I,EAAK,EACArJ,EAAI,EAAGA,EAAI0G,EAAIjG,OAAQT,IAAK,CACnC,IAAIwH,EAAmB,EAAfd,EAAId,MAAM5F,GAClBqJ,GAAU,IAAJ7B,EACNd,EAAId,MAAM5F,GAAU,SAALqJ,EACfA,EAAS,GAAJ7B,GAAa6B,EAAK,SAAa,GAUtC,OANkC,IAA9B3C,EAAId,MAAMc,EAAIjG,OAAS,KACzBiG,EAAIjG,SAC8B,IAA9BiG,EAAId,MAAMc,EAAIjG,OAAS,IACzBiG,EAAIjG,UAGDiG,GASTtB,EAAS4W,EAAML,GAQfvW,EAAS6W,EAAMN,GASfvW,EAAS8W,EAAQP,GAEjBO,EAAO1X,UAAUmY,MAAQ,SAAgBjW,GAGvC,IADA,IAAI4C,EAAQ,EACHtJ,EAAI,EAAGA,EAAI0G,EAAIjG,OAAQT,IAAK,CACnC,IAAIgL,EAA0B,IAAL,EAAftE,EAAId,MAAM5F,IAAiBsJ,EACjCD,EAAU,SAAL2B,EACTA,KAAQ,GAERtE,EAAId,MAAM5F,GAAKqJ,EACfC,EAAQ0B,EAKV,OAHc,IAAV1B,IACF5C,EAAId,MAAMc,EAAIjG,UAAY6I,GAErB5C,GAITpI,EAAG8d,OAAS,SAAgBvd,GAE1B,GAAIyc,EAAOzc,GAAO,OAAOyc,EAAOzc,GAEhC,IAAIsd,EACJ,GAAa,SAATtd,EACFsd,EAAQ,IAAIL,OACP,GAAa,SAATjd,EACTsd,EAAQ,IAAIH,OACP,GAAa,SAATnd,EACTsd,EAAQ,IAAIF,MACP,IAAa,WAATpd,EAGT,MAAM,IAAIO,MAAM,iBAAmBP,GAFnCsd,EAAQ,IAAID,EAMd,OAFAZ,EAAOzc,GAAQsd,EAERA,GAkBTtC,EAAIrV,UAAUuW,SAAW,SAAmB5R,GAC1ClE,EAAsB,IAAfkE,EAAExD,SAAgB,iCACzBV,EAAOkE,EAAEtD,IAAK,oCAGhBgU,EAAIrV,UAAUoW,SAAW,SAAmBzR,EAAGC,GAC7CnE,EAAqC,KAA7BkE,EAAExD,SAAWyD,EAAEzD,UAAiB,iCACxCV,EAAOkE,EAAEtD,KAAOsD,EAAEtD,MAAQuD,EAAEvD,IAC1B,oCAGJgU,EAAIrV,UAAU8X,KAAO,SAAenT,GAClC,OAAIhF,KAAKgY,MAAchY,KAAKgY,MAAMM,QAAQtT,GAAG8Q,UAAU9V,MAChDgF,EAAEsO,KAAKtT,KAAKkQ,GAAG4F,UAAU9V,OAGlC0V,EAAIrV,UAAUmH,IAAM,SAAcxC,GAChC,OAAIA,EAAEU,SACGV,EAAEf,QAGJjE,KAAKkQ,EAAEvH,IAAI3D,GAAG8Q,UAAU9V,OAGjC0V,EAAIrV,UAAUqI,IAAM,SAAc1D,EAAGC,GACnCjF,KAAKyW,SAASzR,EAAGC,GAEjB,IAAIoB,EAAMrB,EAAE0D,IAAIzD,GAIhB,OAHIoB,EAAIzD,IAAI5C,KAAKkQ,IAAM,GACrB7J,EAAIoC,KAAKzI,KAAKkQ,GAET7J,EAAIyP,UAAU9V,OAGvB0V,EAAIrV,UAAUmI,KAAO,SAAexD,EAAGC,GACrCjF,KAAKyW,SAASzR,EAAGC,GAEjB,IAAIoB,EAAMrB,EAAEwD,KAAKvD,GAIjB,OAHIoB,EAAIzD,IAAI5C,KAAKkQ,IAAM,GACrB7J,EAAIoC,KAAKzI,KAAKkQ,GAET7J,GAGTqP,EAAIrV,UAAUsI,IAAM,SAAc3D,EAAGC,GACnCjF,KAAKyW,SAASzR,EAAGC,GAEjB,IAAIoB,EAAMrB,EAAE2D,IAAI1D,GAIhB,OAHIoB,EAAIwO,KAAK,GAAK,GAChBxO,EAAImC,KAAKxI,KAAKkQ,GAET7J,EAAIyP,UAAU9V,OAGvB0V,EAAIrV,UAAUoI,KAAO,SAAezD,EAAGC,GACrCjF,KAAKyW,SAASzR,EAAGC,GAEjB,IAAIoB,EAAMrB,EAAEyD,KAAKxD,GAIjB,OAHIoB,EAAIwO,KAAK,GAAK,GAChBxO,EAAImC,KAAKxI,KAAKkQ,GAET7J,GAGTqP,EAAIrV,UAAUkW,IAAM,SAAcvR,EAAGzC,GAEnC,OADAvC,KAAK4W,SAAS5R,GACPhF,KAAKmY,KAAKnT,EAAEiN,MAAM1P,KAG3BmT,EAAIrV,UAAUsM,KAAO,SAAe3H,EAAGC,GAErC,OADAjF,KAAKyW,SAASzR,EAAGC,GACVjF,KAAKmY,KAAKnT,EAAE2H,KAAK1H,KAG1ByQ,EAAIrV,UAAUiC,IAAM,SAAc0C,EAAGC,GAEnC,OADAjF,KAAKyW,SAASzR,EAAGC,GACVjF,KAAKmY,KAAKnT,EAAE1C,IAAI2C,KAGzByQ,EAAIrV,UAAU+Q,KAAO,SAAepM,GAClC,OAAOhF,KAAK2M,KAAK3H,EAAGA,EAAEf,UAGxByR,EAAIrV,UAAU8Q,IAAM,SAAcnM,GAChC,OAAOhF,KAAKsC,IAAI0C,EAAGA,IAGrB0Q,EAAIrV,UAAU0W,KAAO,SAAe/R,GAClC,GAAIA,EAAEU,SAAU,OAAOV,EAAEf,QAEzB,IAAI6U,EAAO9Y,KAAKkQ,EAAE3J,MAAM,GAIxB,GAHAzF,EAAOgY,EAAO,IAAM,GAGP,IAATA,EAAY,CACd,IAAIhV,EAAM9D,KAAKkQ,EAAExH,IAAI,IAAIvO,EAAG,IAAIqM,OAAO,GACvC,OAAOxG,KAAK8D,IAAIkB,EAAGlB,GAMrB,IAAIwC,EAAItG,KAAKkQ,EAAEsC,KAAK,GAChBrD,EAAI,EACR,OAAQ7I,EAAEZ,UAA2B,IAAfY,EAAEC,MAAM,GAC5B4I,IACA7I,EAAEE,OAAO,GAEX1F,GAAQwF,EAAEZ,UAEV,IAAIqT,EAAM,IAAI5e,EAAG,GAAGwb,MAAM3V,MACtBgZ,EAAOD,EAAI9B,SAIXgC,EAAOjZ,KAAKkQ,EAAEsC,KAAK,GAAGhM,OAAO,GAC7B0S,EAAIlZ,KAAKkQ,EAAExL,YACfwU,EAAI,IAAI/e,EAAG,EAAI+e,EAAIA,GAAGvD,MAAM3V,MAE5B,MAAuC,IAAhCA,KAAK8D,IAAIoV,EAAGD,GAAMrW,IAAIoW,GAC3BE,EAAE/C,QAAQ6C,GAGZ,IAAIxa,EAAIwB,KAAK8D,IAAIoV,EAAG5S,GAChBrE,EAAIjC,KAAK8D,IAAIkB,EAAGsB,EAAEiM,KAAK,GAAG/L,OAAO,IACjCG,EAAI3G,KAAK8D,IAAIkB,EAAGsB,GAChB4J,EAAIf,EACR,MAAsB,IAAfxI,EAAE/D,IAAImW,GAAY,CAEvB,IADA,IAAItB,EAAM9Q,EACD9K,EAAI,EAAoB,IAAjB4b,EAAI7U,IAAImW,GAAYld,IAClC4b,EAAMA,EAAId,SAEZ7V,EAAOjF,EAAIqU,GACX,IAAIjL,EAAIjF,KAAK8D,IAAItF,EAAG,IAAIrE,EAAG,GAAGkX,OAAOnB,EAAIrU,EAAI,IAE7CoG,EAAIA,EAAEuU,OAAOvR,GACbzG,EAAIyG,EAAE0R,SACNhQ,EAAIA,EAAE6P,OAAOhY,GACb0R,EAAIrU,EAGN,OAAOoG,GAGTyT,EAAIrV,UAAUyU,KAAO,SAAe9P,GAClC,IAAImU,EAAMnU,EAAEyP,OAAOzU,KAAKkQ,GACxB,OAAqB,IAAjBiJ,EAAI3X,UACN2X,EAAI3X,SAAW,EACRxB,KAAKmY,KAAKgB,GAAKlC,UAEfjX,KAAKmY,KAAKgB,IAIrBzD,EAAIrV,UAAUyD,IAAM,SAAckB,EAAGzC,GACnC,GAAIA,EAAImD,SAAU,OAAO,IAAIvL,EAAG,GAChC,GAAoB,IAAhBoI,EAAIsS,KAAK,GAAU,OAAO7P,EAAEf,QAEhC,IAAImV,EAAa,EACbC,EAAM,IAAI9c,MAAM,GAAK6c,GACzBC,EAAI,GAAK,IAAIlf,EAAG,GAAGwb,MAAM3V,MACzBqZ,EAAI,GAAKrU,EACT,IAAK,IAAInJ,EAAI,EAAGA,EAAIwd,EAAI/c,OAAQT,IAC9Bwd,EAAIxd,GAAKmE,KAAKsC,IAAI+W,EAAIxd,EAAI,GAAImJ,GAGhC,IAAIqB,EAAMgT,EAAI,GACVC,EAAU,EACVC,EAAa,EACbxX,EAAQQ,EAAImC,YAAc,GAK9B,IAJc,IAAV3C,IACFA,EAAQ,IAGLlG,EAAI0G,EAAIjG,OAAS,EAAGT,GAAK,EAAGA,IAAK,CAEpC,IADA,IAAI8H,EAAOpB,EAAId,MAAM5F,GACZuH,EAAIrB,EAAQ,EAAGqB,GAAK,EAAGA,IAAK,CACnC,IAAIuB,EAAOhB,GAAQP,EAAK,EACpBiD,IAAQgT,EAAI,KACdhT,EAAMrG,KAAKmR,IAAI9K,IAGL,IAAR1B,GAAyB,IAAZ2U,GAKjBA,IAAY,EACZA,GAAW3U,EACX4U,KACIA,IAAeH,GAAqB,IAANvd,GAAiB,IAANuH,KAE7CiD,EAAMrG,KAAKsC,IAAI+D,EAAKgT,EAAIC,IACxBC,EAAa,EACbD,EAAU,IAXRC,EAAa,EAajBxX,EAAQ,GAGV,OAAOsE,GAGTqP,EAAIrV,UAAUwV,UAAY,SAAoBtT,GAC5C,IAAIN,EAAIM,EAAI+Q,KAAKtT,KAAKkQ,GAEtB,OAAOjO,IAAMM,EAAMN,EAAEgC,QAAUhC,GAGjCyT,EAAIrV,UAAU2V,YAAc,SAAsBzT,GAChD,IAAI8D,EAAM9D,EAAI0B,QAEd,OADAoC,EAAI3E,IAAM,KACH2E,GAOTlM,EAAGqf,KAAO,SAAejX,GACvB,OAAO,IAAI2V,EAAK3V,IAmBlBtB,EAASiX,EAAMxC,GAEfwC,EAAK7X,UAAUwV,UAAY,SAAoBtT,GAC7C,OAAOvC,KAAKmY,KAAK5V,EAAI0P,MAAMjS,KAAK2S,SAGlCuF,EAAK7X,UAAU2V,YAAc,SAAsBzT,GACjD,IAAIN,EAAIjC,KAAKmY,KAAK5V,EAAID,IAAItC,KAAKoY,OAE/B,OADAnW,EAAEP,IAAM,KACDO,GAGTiW,EAAK7X,UAAUsM,KAAO,SAAe3H,EAAGC,GACtC,GAAID,EAAEU,UAAYT,EAAES,SAGlB,OAFAV,EAAEvD,MAAM,GAAK,EACbuD,EAAE1I,OAAS,EACJ0I,EAGT,IAAI2B,EAAI3B,EAAE2H,KAAK1H,GACXzG,EAAImI,EAAE0L,MAAMrS,KAAK2S,OAAOrQ,IAAItC,KAAKqY,MAAMjG,OAAOpS,KAAK2S,OAAOrQ,IAAItC,KAAKkQ,GACnEuJ,EAAI9S,EAAE8B,KAAKjK,GAAGgI,OAAOxG,KAAK2S,OAC1BtM,EAAMoT,EAQV,OANIA,EAAE7W,IAAI5C,KAAKkQ,IAAM,EACnB7J,EAAMoT,EAAEhR,KAAKzI,KAAKkQ,GACTuJ,EAAE5E,KAAK,GAAK,IACrBxO,EAAMoT,EAAEjR,KAAKxI,KAAKkQ,IAGb7J,EAAIyP,UAAU9V,OAGvBkY,EAAK7X,UAAUiC,IAAM,SAAc0C,EAAGC,GACpC,GAAID,EAAEU,UAAYT,EAAES,SAAU,OAAO,IAAIvL,EAAG,GAAG2b,UAAU9V,MAEzD,IAAI2G,EAAI3B,EAAE1C,IAAI2C,GACVzG,EAAImI,EAAE0L,MAAMrS,KAAK2S,OAAOrQ,IAAItC,KAAKqY,MAAMjG,OAAOpS,KAAK2S,OAAOrQ,IAAItC,KAAKkQ,GACnEuJ,EAAI9S,EAAE8B,KAAKjK,GAAGgI,OAAOxG,KAAK2S,OAC1BtM,EAAMoT,EAOV,OANIA,EAAE7W,IAAI5C,KAAKkQ,IAAM,EACnB7J,EAAMoT,EAAEhR,KAAKzI,KAAKkQ,GACTuJ,EAAE5E,KAAK,GAAK,IACrBxO,EAAMoT,EAAEjR,KAAKxI,KAAKkQ,IAGb7J,EAAIyP,UAAU9V,OAGvBkY,EAAK7X,UAAUyU,KAAO,SAAe9P,GAEnC,IAAIqB,EAAMrG,KAAKmY,KAAKnT,EAAEyP,OAAOzU,KAAKkQ,GAAG5N,IAAItC,KAAK0T,KAC9C,OAAOrN,EAAIyP,UAAU9V,QAh2GzB,CAk2GoCL,EAAQK,Q,8CC10G5C,IAAI9F,EAAI,EAAQ,QACZwf,EAAY,EAAQ,QACpBC,EAAQ,EAAQ,QAChBC,EAAe,EAAQ,QACvBC,EAAY,EAAQ,QAcpBC,EAAa,SAAUC,EAAOC,EAASC,EAAQC,GAyC/C,OArCGhgB,EAAE0E,SAASmb,IAAYA,aAAiB9e,QAAW8e,EAAMI,QACrDjgB,EAAE0E,SAASmb,EAAMI,OAASjgB,EAAEsI,QAAQuX,EAAMI,SACzCJ,EAAMI,KAAOtb,KAAKC,UAAUib,EAAMI,KAAM,KAAM,IAGlDJ,EAAQA,EAAMK,QAAS,KAAML,EAAMI,MAGpCjgB,EAAE6E,SAASgb,KACVA,EAAQ,IAAI9e,MAAM8e,IAGlB7f,EAAEmgB,WAAWH,IACbA,EAASH,GAET7f,EAAEmgB,WAAWJ,MAGTD,GACC9f,EAAEmgB,WAAWL,EAAQM,YACtBN,EAAQM,UAAU,SAAShe,QAAWpC,EAAEmgB,WAAWH,KACnDF,EAAQO,OAAM,eAGlBC,YAAW,WACPP,EAAOF,KACR,IAGJC,GAAW9f,EAAEmgB,WAAWL,EAAQS,OAE/BD,YAAW,WACPR,EAAQS,KAAK,QAASV,GACtBC,EAAQU,uBACT,GAGAV,GAUPW,EAA+B,SAAUC,GACzC,GAAI1gB,EAAE0E,SAASgc,IAASA,EAAKlgB,OAAoC,IAA5BkgB,EAAKlgB,KAAKsE,QAAQ,KACnD,OAAO4b,EAAKlgB,KAGhB,IAAImgB,EAAWD,EAAKE,OAAOC,KAAI,SAASlf,GAAG,OAAOA,EAAEmf,QAASxe,KAAK,KAClE,OAAOoe,EAAKlgB,KAAO,IAAMmgB,EAAW,KAYpCI,EAAa,SAASpe,GACtB,IAAK8c,EAAMvc,YAAYP,GACnB,MAAM,IAAI5B,MAAM,6CAEpB,IAAI0B,EAAM,GACNd,EAAI,EAAGwB,EAAIR,EAAIP,OAInB,IAH4B,OAAxBO,EAAIqe,UAAU,EAAG,KACjBrf,EAAI,GAEDA,EAAIwB,EAAGxB,GAAG,EAAG,CAChB,IAAImB,EAAOlB,SAASe,EAAIS,OAAOzB,EAAG,GAAI,IACtCc,GAAOY,OAAOC,aAAaR,GAG/B,OAAOL,GAUPwe,EAAa,SAASxe,GACtB,IAAIA,EACA,MAAO,OAEX,IADA,IAAIE,EAAM,GACFhB,EAAI,EAAGA,EAAIc,EAAIL,OAAQT,IAAK,CAChC,IAAImB,EAAOL,EAAIM,WAAWpB,GACtBqB,EAAIF,EAAK5B,SAAS,IACtByB,GAAOK,EAAEZ,OAAS,EAAI,IAAMY,EAAIA,EAGpC,MAAO,KAAOL,GAadue,EAAe,SAAUC,GAEzB,GADAA,EAAOA,EAAOA,EAAKzf,cAAgB,SAC9B8d,EAAU4B,QAAQD,GACnB,MAAM,IAAIpgB,MAAM,cAAeogB,EAAM,8DAAgExc,KAAKC,UAAU4a,EAAU4B,QAAS,KAAM,IAEjJ,OAAOD,GAwBPE,EAAU,SAAS1gB,EAAQwgB,GAG3B,GAFAA,EAAOD,EAAaC,IAEhB1B,EAAMpf,KAAKM,KAAYX,EAAE6E,SAASlE,GAClC,MAAM,IAAII,MAAM,kFAGpB,OAAO0e,EAAMpf,KAAKM,GAAU6e,EAAU6B,QAAQ1gB,EAAQwgB,GAAQ3B,EAAU6B,QAAQ1gB,EAAQwgB,GAAMjgB,SAAS,KAyBvGogB,EAAQ,SAAS3gB,EAAQwgB,GAGzB,GAFAA,EAAOD,EAAaC,IAEhB1B,EAAMpf,KAAKM,KAAYX,EAAE6E,SAASlE,GAClC,MAAM,IAAII,MAAM,kFAGpB,OAAO0e,EAAMpf,KAAKM,GAAU6e,EAAU8B,MAAM3gB,EAAQwgB,GAAQ3B,EAAU8B,MAAM3gB,EAAQwgB,GAAMjgB,SAAS,KAanGqgB,EAAoB,SAAUngB,GAC9B,GAAuB,qBAAZA,EAAyB,MAAO,GAE3C,IAAI,uBAAuBC,KAAKD,GAC5B,MAAM,IAAIL,MAAM,kBAAmBK,EAAS,sCAIhDA,EAAUA,EAAQM,cAAcH,QAAQ,OAAO,IAI/C,IAHA,IAAIC,EAAcie,EAAMhe,KAAKL,GAASG,QAAQ,OAAO,IACjDigB,EAAkB,KAEb7f,EAAI,EAAGA,EAAIP,EAAQgB,OAAQT,IAE5BC,SAASJ,EAAYG,GAAI,IAAM,EAC/B6f,GAAmBpgB,EAAQO,GAAGE,cAE9B2f,GAAmBpgB,EAAQO,GAGnC,OAAO6f,GAKX/b,EAAOC,QAAU,CACbka,WAAYA,EACZa,6BAA8BA,EAG9Bd,UAAWA,EACX3f,EAAGA,EACHC,GAAIwf,EAAMxf,GACVI,KAAMof,EAAMpf,KACZI,YAAagf,EAAMhf,YACnBuE,MAAOya,EAAMza,MACb9B,YAAauc,EAAMvc,YACnBzB,KAAMge,EAAMhe,KACZ8D,UAAWka,EAAMhe,KACjBie,aAAcA,EACdve,UAAWse,EAAMte,UACjBG,qBAAsBme,EAAMne,qBAC5BigB,kBAAmBA,EACnBhd,MAAOkb,EAAMlb,MACb7D,KAAM+e,EAAM/e,KAEZwD,WAAYub,EAAMvb,WAClBG,WAAYob,EAAMpb,WAElBV,kBAAmB8b,EAAM9b,kBAEzBH,YAAaic,EAAMjc,YACnBie,UAAWhC,EAAMjc,YAEjBI,YAAa6b,EAAM7b,YACnB8d,YAAajC,EAAM7b,YAEnBX,UAAWwc,EAAMxc,UACjB0e,YAAalC,EAAMxc,UACnB2e,OAAQnC,EAAMxc,UAEdT,UAAWid,EAAMjd,UACjBqf,YAAapC,EAAMjd,UACnBsf,SAAUrC,EAAMjd,UAEhBue,WAAYA,EACZgB,QAAShB,EACTE,WAAYA,EACZe,UAAWf,EAEXG,QAAS5B,EAAU4B,QACnBE,MAAOA,EACPD,QAASA,EAETY,QAASxC,EAAM3d,QACfA,QAAS2d,EAAM3d,QACfogB,SAAUzC,EAAMld,SAChBA,SAAUkd,EAAMld,SAChBvB,iBAAkBye,EAAMze,mB,uBCvS5B,IAAIhB,EAAI,EAAQ,QACZC,EAAK,EAAQ,QACbwf,EAAQ,EAAQ,QAGhB0C,EAAkB,SAAU3hB,GAG5B,OAAIA,EAAK4hB,WAAW,QACT,SAAW5hB,EAAK6hB,MAAM,GACb,QAAT7hB,EACA,SACAA,EAAK4hB,WAAW,SAChB,UAAY5hB,EAAK6hB,MAAM,GACd,SAAT7hB,EACA,UACAA,EAAK4hB,WAAW,UAChB,eAAiB5hB,EAAK6hB,MAAM,GACnB,UAAT7hB,EACA,eACAA,EAAK4hB,WAAW,WAChB,gBAAkB5hB,EAAK6hB,MAAM,GACpB,WAAT7hB,EACA,gBAEJA,GAIP8hB,EAAc,SAAUxB,GACxB,IAAIyB,EAAW,eAAeC,KAAK1B,GACnC,OAAOyB,EAAW3gB,SAAS2gB,EAAS,GAAI,IAAM,MAI9CE,EAAmB,SAAU3B,GAC7B,IAAI4B,EAAY,oBAAoBF,KAAK1B,GACzC,OAAO4B,EAAY9gB,SAAS8gB,EAAU,GAAI,IAAM,MAGhDC,EAAe,SAAUC,GACzB,IAAI9B,SAAc8B,EAClB,GAAa,WAAT9B,EACA,OAAIrB,EAAMvc,YAAY0f,GACX,IAAI3iB,EAAG2iB,EAAIrhB,QAAQ,MAAM,IAAK,IAE9B,IAAItB,EAAG2iB,EAAK,IAEpB,GAAa,WAAT9B,EACP,OAAO,IAAI7gB,EAAG2iB,GACX,GAAInD,EAAMhf,YAAYmiB,GACzB,OAAO,IAAI3iB,EAAG2iB,EAAI1hB,SAAS,KACxB,GAAIue,EAAMpf,KAAKuiB,GAClB,OAAOA,EAEP,MAAM,IAAI7hB,MAAM6hB,EAAK,qBAIzBC,EAAgB,SAAU/B,EAAMrd,EAAOif,GAGvC,IAAIzY,EAAM5B,EAIV,GAHAyY,EAAOqB,EAAgBrB,GAGV,UAATA,EAAkB,CAElB,GAAIrd,EAAMlC,QAAQ,OAAO,IAAIa,OAAS,IAAM,EACxC,MAAM,IAAIrB,MAAM,4BAA6B0C,EAAMrB,QAGvD,OAAOqB,EACJ,GAAa,WAATqd,EACP,OAAOrB,EAAMjd,UAAUiB,GACpB,GAAa,SAATqd,EACP,OAAOrd,EAAQ,KAAO,KACnB,GAAIqd,EAAKsB,WAAW,WAAY,CAOnC,GALInY,EADDyY,EACQ,GAEA,IAGPjD,EAAMte,UAAUsC,GAChB,MAAM,IAAI1C,MAAM0C,EAAO,wDAG3B,OAAOgc,EAAM3d,QAAQ2B,EAAM/B,cAAeuI,GAK9C,GAFAA,EAAOqY,EAAYxB,GAEfA,EAAKsB,WAAW,SAAU,CAE1B,IAAInY,EACA,MAAM,IAAIlJ,MAAM,yCAQpB,GAJG2hB,IACCzY,EAAO,IAGPA,EAAO,GAAKA,EAAO,IAAMA,EAAOxG,EAAMlC,QAAQ,OAAO,IAAIa,OAAS,EAClE,MAAM,IAAIrB,MAAM,gBAAkBkJ,EAAM,QAASxG,GAGrD,OAAOgc,EAAMld,SAASkB,EAAc,EAAPwG,GAC1B,GAAI6W,EAAKsB,WAAW,QAAS,CAEhC,GAAKnY,EAAO,GAAOA,EAAO,GAAOA,EAAO,IACpC,MAAM,IAAIlJ,MAAM,eAAekJ,EAAK,SAIxC,GADA5B,EAAMsa,EAAalf,GACf4E,EAAImC,YAAcP,EAClB,MAAM,IAAIlJ,MAAM,gCAAkCkJ,EAAO,OAAS5B,EAAImC,aAG1E,GAAGnC,EAAIpE,GAAG,IAAIhE,EAAG,IACb,MAAM,IAAIc,MAAM,iBAAkBsH,EAAInH,WAAY,gBAGtD,OAAO+I,EAAOwV,EAAM3d,QAAQuG,EAAInH,SAAS,OAAQ+I,EAAK,EAAI,GAAK5B,EAC5D,GAAIyY,EAAKsB,WAAW,OAAQ,CAE/B,GAAKnY,EAAO,GAAOA,EAAO,GAAOA,EAAO,IACpC,MAAM,IAAIlJ,MAAM,cAAckJ,EAAK,SAIvC,GADA5B,EAAMsa,EAAalf,GACf4E,EAAImC,YAAcP,EAClB,MAAM,IAAIlJ,MAAM,+BAAiCkJ,EAAO,OAAS5B,EAAImC,aAGzE,OAAGnC,EAAIpE,GAAG,IAAIhE,EAAG,IACNoI,EAAIpH,OAAOgJ,GAAM/I,SAAS,OAE1B+I,EAAOwV,EAAM3d,QAAQuG,EAAInH,SAAS,OAAQ+I,EAAK,EAAI,GAAK5B,EAKnE,MAAM,IAAItH,MAAM,gCAAkC+f,IAKtDgC,EAA2B,SAAUF,GAGrC,GAAG5iB,EAAEsI,QAAQsa,GACT,MAAM,IAAI7hB,MAAM,kDAGpB,IAAI+f,EACAiC,EAAQL,EADFjf,EAAQ,GAwBlB,GApBIzD,EAAE0E,SAASke,KAASA,EAAII,eAAe,MAAQJ,EAAII,eAAe,MAAQJ,EAAII,eAAe,UAAYJ,EAAII,eAAe,UAC5HlC,EAAO8B,EAAII,eAAe,KAAOJ,EAAInW,EAAImW,EAAI9B,KAC7Crd,EAAQmf,EAAII,eAAe,KAAOJ,EAAIK,EAAIL,EAAInf,QAK9Cqd,EAAOrB,EAAMlb,MAAMqe,GAAK,GACxBnf,EAAQgc,EAAMlb,MAAMqe,GAEf9B,EAAKsB,WAAW,QAAWtB,EAAKsB,WAAW,UAC5CtB,EAAO,WAIVA,EAAKsB,WAAW,SAAUtB,EAAKsB,WAAW,SAA8B,kBAAV3e,GAAuB,WAAWpC,KAAKoC,KACtGA,EAAQ,IAAIxD,EAAGwD,IAIhBzD,EAAEsI,QAAQ7E,GAAQ,CAEjB,GADAif,EAAYD,EAAiB3B,GAC1B4B,GAAajf,EAAMrB,SAAWsgB,EAC7B,MAAM,IAAI3hB,MAAM+f,EAAM,oCAAqCnc,KAAKC,UAAUnB,IAE1Eif,EAAYjf,EAAMrB,OAK1B,OAAIpC,EAAEsI,QAAQ7E,IACVsf,EAAStf,EAAMod,KAAI,SAAUha,GACzB,OAAOgc,EAAc/B,EAAMja,EAAK6b,GAAWxhB,SAAS,OAAOK,QAAQ,KAAK,OAErEwhB,EAAOzgB,KAAK,MAEnBygB,EAASF,EAAc/B,EAAMrd,EAAOif,GAC7BK,EAAO7hB,SAAS,OAAOK,QAAQ,KAAK,MAW/Cme,EAAe,WAGf,IAAIwD,EAAO7gB,MAAM8D,UAAUkc,MAAM3E,KAAK7c,WAElCsiB,EAAUnjB,EAAE6gB,IAAIqC,EAAMJ,GAK1B,OAAOrD,EAAMhe,KAAK,KAAM0hB,EAAQ7gB,KAAK,MAIzCmD,EAAOC,QAAUga,G,qBC7NjB,IAAI1f,EAAI,EAAQ,QACZyf,EAAQ,EAAQ,QAChBxf,EAAK,EAAQ,QACbmjB,EAAgB,EAAQ,QAaxBC,EAAiB,SAAU5f,GAI3B,OAHGzD,EAAE+E,SAAStB,KACVA,EAAQwE,KAAKqb,MAAM7f,IAEhB,IAAI2f,EAAc3D,EAAMze,iBAAiByC,GAAOlC,QAAQ,KAAK,MAUpEgiB,EAAmB,SAAU9f,GAC7B,IAAIgc,EAAMvc,YAAYO,GAClB,MAAM,IAAI1C,MAAM,kCAAmC0C,EAAQ,KAG/D,IAAIO,EAASP,EAAMlC,QAAQ,OAAO,IAElC,GAAGyC,EAAO5B,OAAS,IAAM,EACrB,MAAM,IAAIrB,MAAM,iDAAkD0C,EAAQ,KAG9E,GAAIO,EAAO5B,OAAS,GAChB,MAAM,IAAIrB,MAAM,uCAAyC0C,EAAQ,KAGrE,IAAIN,EAAI8E,KAAKub,OAAOxf,EAAO5B,OAAS,IAAM,IAE1C,OADA4B,EAASyb,EAAMyC,SAASle,EAAY,GAAJb,GACzB,IAAIigB,EAAcpf,IAUzBuC,EAA0B,SAAU9C,GACpC,IAAIgc,EAAMvc,YAAYO,GAClB,MAAM,IAAI1C,MAAM,kCAAmC0C,EAAQ,KAG/D,IAAIO,EAASP,EAAMlC,QAAQ,OAAO,IAElC,GAAGyC,EAAO5B,OAAS,IAAM,EACrB,MAAM,IAAIrB,MAAM,iDAAkD0C,EAAQ,KAG9E,IAAIrB,EAAS4B,EAAO5B,OAAS,EACzBe,EAAI8E,KAAKub,OAAOxf,EAAO5B,OAAS,IAAM,IAE1C,OADA4B,EAASyb,EAAMyC,SAASle,EAAY,GAAJb,GACzB,IAAIigB,EAAcC,EAAejhB,GAAQqB,MAAQO,IAUxDyf,EAAoB,SAAUhgB,GAC9B,IAAIzD,EAAE6E,SAASpB,GACX,MAAM,IAAI1C,MAAM,0CAA4C0C,GAGhE,IAAIO,EAASyb,EAAMjd,UAAUiB,GAAOlC,QAAQ,OAAO,IAC/Ca,EAAS4B,EAAO5B,OAAS,EACzBe,EAAI8E,KAAKub,OAAOxf,EAAO5B,OAAS,IAAM,IAE1C,OADA4B,EAASyb,EAAMyC,SAASle,EAAY,GAAJb,GACzB,IAAIigB,EAAcC,EAAejhB,GAAQqB,MAAQO,IAUxDgC,EAAkB,SAAUvC,GAC5B,IAAIO,EAAS,mEAAqEP,EAAS,IAAM,KACjG,OAAO,IAAI2f,EAAcpf,IAWzB0f,EAAmB,SAAUjgB,GAC7B,MAAqE,MAA7D,IAAIxD,EAAGwD,EAAML,OAAO,EAAG,GAAI,IAAIlC,SAAS,GAAGkC,OAAO,EAAG,IAU7DugB,EAAkB,SAAUC,GAC5B,IAAIngB,EAAQmgB,EAAMC,aAElB,IAAIpgB,IAAUmgB,EAAME,SAChB,MAAM,IAAI/iB,MAAM,mBAAqBP,KAAM,gBAAiBojB,EAAME,UAKtE,OAAIJ,EAAiBjgB,GACV,IAAIxD,EAAGwD,EAAO,IAAIwJ,SAAS,KAAK/L,SAAS,IAE7C,IAAIjB,EAAGwD,EAAO,IAAIvC,SAAS,KAUlC6iB,EAAmB,SAAUH,EAAOpjB,GACpC,IAAIiD,EAAQmgB,EAAMC,aAElB,IAAIpgB,IAAUmgB,EAAME,SAChB,MAAM,IAAI/iB,MAAM,mBAAqBP,EAAM,gBAAiBojB,EAAME,UAGtE,OAAO,IAAI7jB,EAAGwD,EAAO,IAAIvC,SAAS,KAalCgF,EAAmB,SAAU0d,EAAOpjB,GACpC,IAAIiD,EAAQmgB,EAAMC,aAElB,IAAIpgB,IAAUmgB,EAAME,SAChB,MAAM,IAAI/iB,MAAM,mBAAqBP,EAAM,gBAAiBojB,EAAME,UAGtE,MAAkB,qEAAVrgB,GAWRugB,EAAoB,SAAUJ,EAAOpjB,GACrC,IAAIyjB,EAAUzjB,EAAK6F,MAAM,kBACrB4D,EAAOrI,SAASqiB,EAAQ,IAE5B,GAAGL,EAAMC,aAAaxB,MAAM,EAAG,EAAIpY,GAAM7H,SAAkB,EAAP6H,EAChD,MAAM,IAAIlJ,MAAM,mBAAqBP,EAAM,gBAAiBojB,EAAME,SAAW,4BAGjF,MAAO,KAAOF,EAAMC,aAAaxB,MAAM,EAAG,EAAIpY,IAW9CzD,EAA2B,SAAUod,EAAOpjB,GAC5C,IAAImC,EAAMihB,EAAMM,cAAc7B,MAAM,EAAG,IAEvC,IAAK1f,EACD,MAAM,IAAI5B,MAAM,mBAAqBP,EAAM,gBAAiBojB,EAAME,UAGtE,IAAI1hB,EAAwC,EAA/B,IAAKnC,EAAG0C,EAAK,IAAKe,WAC/B,MAAO,KAAOkgB,EAAMM,cAAc9gB,OAAO,GAAIhB,IAU7C+hB,EAAqB,SAAUP,GAC/B,IAAIjhB,EAAMihB,EAAMM,cAAc7B,MAAM,EAAG,IAEvC,IAAI1f,EACA,MAAM,IAAI5B,MAAM,yDAA0D4B,GAG9E,IAAIP,EAAwC,EAA/B,IAAKnC,EAAG0C,EAAK,IAAKe,WAC/B,OAAOtB,EAASqd,EAAMxc,UAAU,KAAM2gB,EAAMM,cAAc9gB,OAAO,GAAIhB,GAAQb,QAAQ,OAAQ,KAAO,IAWpG6iB,EAAsB,SAAUR,EAAOpjB,GACvC,IAAIiD,EAAQmgB,EAAMC,aAElB,IAAKpgB,EACD,MAAM,IAAI1C,MAAM,mBAAqBP,EAAM,gBAAiBojB,EAAME,UAGtE,OAAOrE,EAAM8B,kBAAkB,KAAO9d,EAAM4e,MAAM5e,EAAMrB,OAAS,GAAIqB,EAAMrB,UAG/EqD,EAAOC,QAAU,CACb2d,eAAgBA,EAChBE,iBAAkBA,EAClBhd,wBAAyBA,EACzBkd,kBAAmBA,EACnBzd,gBAAiBA,EACjB2d,gBAAiBA,EACjBI,iBAAkBA,EAClB7d,iBAAkBA,EAClB8d,kBAAmBA,EACnBxd,yBAA0BA,EAC1B2d,mBAAoBA,EACpBC,oBAAqBA,EACrBpjB,iBAAkBye,EAAMze,mB,uBCxQ5B,IAAIhB,EAAI,EAAQ,QACZC,EAAK,EAAQ,QACbC,EAAa,EAAQ,QACrBC,EAAO,EAAQ,QACfC,EAAO,EAAQ,SAUfC,EAAO,SAAUC,GACjB,OAAOA,aAAkBL,GACpBK,GAAUA,EAAOC,aAA2C,OAA5BD,EAAOC,YAAYC,MAUxDC,EAAc,SAAUH,GACxB,OAAOA,GAAUA,EAAOC,aAA2C,cAA5BD,EAAOC,YAAYC,MAU1DE,EAAO,SAASC,GAChB,IACI,OAAOT,EAAWU,MAAM,KAAMC,WAChC,MAAMC,GACJ,MAAM,IAAIC,MAAMD,EAAI,kBAAmBH,EAAQ,OAYnDK,EAAmB,SAAUL,GAC7B,MAAO,KAAMD,EAAKC,GAAQM,OAAO,KAAKC,SAAS,GAAI,KAUnDC,EAAY,SAAUC,GAEtB,QAAK,uBAAuBC,KAAKD,QAGtB,yBAAyBC,KAAKD,KAAY,yBAAyBC,KAAKD,KAIxEE,EAAqBF,KAahCE,EAAuB,SAAUF,GAEjCA,EAAUA,EAAQG,QAAQ,OAAO,IAGjC,IAFA,IAAIC,EAAcC,EAAKL,EAAQM,eAAeH,QAAQ,OAAO,IAEpDI,EAAI,EAAGA,EAAI,GAAIA,IAEpB,GAAKC,SAASJ,EAAYG,GAAI,IAAM,GAAKP,EAAQO,GAAGE,gBAAkBT,EAAQO,IAAQC,SAASJ,EAAYG,GAAI,KAAO,GAAKP,EAAQO,GAAGD,gBAAkBN,EAAQO,GAC5J,OAAO,EAGf,OAAO,GAYPG,EAAU,SAAUC,EAAQC,EAAOC,GACnC,IAAIC,EAAY,OAAOb,KAAKU,IAA6B,kBAAXA,EAC9CA,EAASA,EAAOb,SAAS,IAAIK,QAAQ,OAAO,IAE5C,IAAIY,EAAWH,EAAQD,EAAOK,OAAS,GAAK,EAAKJ,EAAQD,EAAOK,OAAS,EAAI,EAE7E,OAAQF,EAAY,KAAO,IAAM,IAAIG,MAAMF,GAASG,KAAKL,GAAc,KAAOF,GAY9EQ,EAAW,SAAUR,EAAQC,EAAOC,GACpC,IAAIC,EAAY,OAAOb,KAAKU,IAA6B,kBAAXA,EAC9CA,EAASA,EAAOb,SAAS,IAAIK,QAAQ,OAAO,IAE5C,IAAIY,EAAWH,EAAQD,EAAOK,OAAS,GAAK,EAAKJ,EAAQD,EAAOK,OAAS,EAAI,EAE7E,OAAQF,EAAY,KAAO,IAAMH,EAAU,IAAIM,MAAMF,GAASG,KAAKL,GAAc,MAWjFO,EAAY,SAASC,GACrBA,EAAMtC,EAAKuC,OAAOD,GAClB,IAAIE,EAAM,GAGVF,EAAMA,EAAIlB,QAAQ,eAAe,IACjCkB,EAAMA,EAAIG,MAAM,IAAIC,UAAUP,KAAK,IACnCG,EAAMA,EAAIlB,QAAQ,eAAe,IACjCkB,EAAMA,EAAIG,MAAM,IAAIC,UAAUP,KAAK,IAEnC,IAAI,IAAIX,EAAI,EAAGA,EAAIc,EAAIL,OAAQT,IAAK,CAChC,IAAImB,EAAOL,EAAIM,WAAWpB,GAEtBqB,EAAIF,EAAK5B,SAAS,IACtByB,GAAOK,EAAEZ,OAAS,EAAI,IAAMY,EAAIA,EAIpC,MAAO,KAAOL,GAUdM,EAAY,SAASN,GACrB,IAAKO,EAAYP,GACb,MAAM,IAAI5B,MAAM,kBAAmB4B,EAAK,iCAE5C,IAAIF,EAAM,GACNK,EAAO,EACXH,EAAMA,EAAIpB,QAAQ,OAAO,IAGzBoB,EAAMA,EAAIpB,QAAQ,WAAW,IAC7BoB,EAAMA,EAAIC,MAAM,IAAIC,UAAUP,KAAK,IACnCK,EAAMA,EAAIpB,QAAQ,WAAW,IAC7BoB,EAAMA,EAAIC,MAAM,IAAIC,UAAUP,KAAK,IAInC,IAFA,IAAIa,EAAIR,EAAIP,OAEHT,EAAE,EAAGA,EAAIwB,EAAGxB,GAAG,EACpBmB,EAAOlB,SAASe,EAAIS,OAAOzB,EAAG,GAAI,IAElCc,GAAOY,OAAOC,aAAaR,GAI/B,OAAO3C,EAAKoD,OAAOd,IAWnBe,EAAc,SAAUC,GACxB,OAAKA,EAIE/C,EAAK+C,GAAOC,WAHRD,GAaXE,EAAoB,SAAUF,GAC9B,OAAKA,EAEE/C,EAAK+C,GAAOvC,SAAS,IAFTuC,GAanBG,EAAc,SAAUH,GACxB,GAAIzD,EAAE6D,OAAOJ,IAAUzD,EAAE8D,YAAYL,GACjC,OAAOA,EAGX,IAAKM,SAASN,KAAWP,EAAYO,GACjC,MAAM,IAAI1C,MAAM,gBAAgB0C,EAAM,sBAG1C,IAAI9C,EAASD,EAAK+C,GACdO,EAASrD,EAAOO,SAAS,IAE7B,OAAOP,EAAOsD,GAAG,IAAIhE,EAAG,IAAM,MAAQ+D,EAAOZ,OAAO,GAAK,KAAOY,GAahEE,EAAa,SAASC,GACtB,IAAK,IAAIxB,EAAM,GAAIhB,EAAI,EAAGA,EAAIwC,EAAM/B,OAAQT,IAExCgB,EAAIyB,MAAMD,EAAMxC,KAAO,GAAGT,SAAS,KACnCyB,EAAIyB,MAAiB,GAAXD,EAAMxC,IAAUT,SAAS,KAGvC,MAAO,KAAMyB,EAAIL,KAAK,KAYtB+B,EAAa,SAAS1B,GAGtB,GAFAA,EAAMA,EAAIzB,SAAS,KAEdgC,EAAYP,GACb,MAAM,IAAI5B,MAAM,gBAAiB4B,EAAK,gCAG1CA,EAAMA,EAAIpB,QAAQ,OAAO,IAEzB,IAAK,IAAI4C,EAAQ,GAAIG,EAAI,EAAGA,EAAI3B,EAAIP,OAAQkC,GAAK,EAC7CH,EAAMC,KAAKxC,SAASe,EAAIS,OAAOkB,EAAG,GAAI,KAC1C,OAAOH,GAaPI,EAAQ,SAAUd,EAAOe,GAGzB,GAAIrD,EAAUsC,GACV,OAAOe,EAAa,UAAY,KAAMf,EAAM/B,cAAcH,QAAQ,OAAO,IAG7E,GAAIvB,EAAEyE,UAAUhB,GACZ,OAAOe,EAAa,OAASf,EAAQ,OAAS,OAIlD,GAAIzD,EAAE0E,SAASjB,KAAWhD,EAAYgD,KAAWpD,EAAKoD,GAClD,OAAOe,EAAa,SAAWhC,EAAUmC,KAAKC,UAAUnB,IAI5D,GAAIzD,EAAE6E,SAASpB,GAAQ,CACnB,GAA6B,IAAzBA,EAAMqB,QAAQ,QAAyC,IAAzBrB,EAAMqB,QAAQ,OAC5C,OAAON,EAAa,SAAWZ,EAAYH,GACxC,GAA2B,IAAxBA,EAAMqB,QAAQ,OAAuC,IAAxBrB,EAAMqB,QAAQ,MACjD,OAAON,EAAa,QAAUf,EAC3B,IAAKM,SAASN,GACjB,OAAOe,EAAa,SAAWhC,EAAUiB,GAIjD,OAAOe,EAAcf,EAAQ,EAAI,SAAW,UAAaG,EAAYH,IAWrEP,EAAc,SAAUP,GACxB,OAAS3C,EAAE6E,SAASlC,IAAQ3C,EAAE+E,SAASpC,KAAS,qBAAqBtB,KAAKsB,IAU1EqC,EAAQ,SAAUrC,GAClB,OAAS3C,EAAE6E,SAASlC,IAAQ3C,EAAE+E,SAASpC,KAAS,wBAAwBtB,KAAKsB,IAa7EsC,EAAU,SAAUC,GACpB,QAAK,wBAAwB7D,KAAK6D,OAEvB,uBAAuB7D,KAAK6D,KAAU,uBAAuB7D,KAAK6D,KAe7EC,EAAU,SAAUC,GACpB,QAAK,uBAAuB/D,KAAK+D,OAEtB,sBAAsB/D,KAAK+D,KAAU,sBAAsB/D,KAAK+D,KAe3EC,EAAc,qEAEd5D,EAAO,SAAUgC,GACbP,EAAYO,IAAU,OAAOpC,KAAK,EAAQH,cAC1CuC,EAAQY,EAAWZ,IAGvB,IAAI6B,EAAclF,EAAKmF,UAAU9B,GAEjC,OAAG6B,IAAgBD,EACR,KAEAC,GAIf7D,EAAK+D,MAAQpF,EAGbqF,EAAOC,QAAU,CACbzF,GAAIA,EACJI,KAAMA,EACNI,YAAaA,EACbC,KAAMA,EACNS,UAAWA,EACX8D,QAASA,EACTE,QAASA,EACT7D,qBAAsBA,EACtBkB,UAAWA,EACXS,UAAWA,EACXO,YAAaA,EACbG,kBAAmBA,EACnBC,YAAaA,EACbW,MAAOA,EACPF,WAAYA,EACZH,WAAYA,EACZc,MAAOA,EACP9B,YAAaA,EACbpB,QAASA,EACTS,SAAUA,EACVvB,iBAAkBA,EAClBS,KAAMA,I,oCCxbVgE,EAAOC,QAAU,CACb2e,cAAe,SAAUrgB,GACrB,IAAIkc,EAAYlc,GAAYA,EAAO6b,OAAW7b,EAAO6b,MAAMK,QAAUlc,EAAO6b,MAAMK,QAAUvb,KAAKC,UAAUZ,GAC3G,OAAO,IAAIjD,MAAM,mBAAqBmf,IAE1CoE,sBAAuB,SAAUC,EAAKC,EAAUC,GAC5C,OAAO,IAAI1jB,MAAM,qCAAsC0jB,EAAQ,UAAWF,EAAK,aAAcC,EAAU,MAE3GE,kBAAmB,SAAUC,GACzB,OAAO,IAAI5jB,MAAM,8CAAgD4jB,EAAM,MAE3EC,gBAAiB,WACb,OAAO,IAAI7jB,MAAM,gCAErB8jB,gBAAiB,SAAU7gB,GACvB,IAAIkc,EAAYlc,GAAYA,EAAO6b,OAAW7b,EAAO6b,MAAMK,QAAUlc,EAAO6b,MAAMK,QAAU,8BAAgCvb,KAAKC,UAAUZ,GAC3I,OAAO,IAAIjD,MAAMmf,IAErB4E,kBAAmB,SAAUC,GACzB,OAAO,IAAIhkB,MAAM,kCAAoCgkB,EAAK,kB,uBCtBlE,IAAIpe,EAAa,EAAQ,QAMrByc,EAAgB,SAAU3f,EAAOuhB,EAAQlB,GACzChe,KAAKrC,MAAQA,GAAS,GACtBqC,KAAKkf,OAASA,EACdlf,KAAKge,SAAWA,GASpBV,EAAcjd,UAAU8e,kBAAoB,WACxC,OAAOnf,KAAKoe,cAAc9hB,OAAS,GAUvCghB,EAAcjd,UAAU+e,WAAa,SAAUF,GAC3C,OAAO,IAAI5B,EAActd,KAAKrC,MAAOuhB,IAWzC5B,EAAcjd,UAAUgf,QAAU,SAAUvB,GACxC,OAAO,IAAIR,EAActd,KAAKrC,MAAQmgB,EAAMngB,QAUhD2f,EAAcjd,UAAUif,UAAY,WAChC,YAAuBC,IAAhBvf,KAAKkf,QAShB5B,EAAcjd,UAAUmf,cAAgB,WACpC,OAAQxf,KAAKsf,YAAmBze,EAAW3F,iBAAiB8E,KAAKkf,QAAQzjB,QAAQ,KAAK,IAA3D,IAS/B6hB,EAAcjd,UAAU0d,WAAa,WACjC,OAAK/d,KAAKsf,YAGHtf,KAAKwf,gBAFDxf,KAAKrC,OAWpB2f,EAAcjd,UAAU+d,YAAc,WAClC,OAAOpe,KAAKsf,YAActf,KAAKrC,MAAQ,IAS3C2f,EAAcjd,UAAUzD,OAAS,WAC7B,OAAOoD,KAAK+d,aAAe/d,KAAKoe,eAUpCd,EAAcmC,WAAa,SAAUC,GAGjC,IAAIC,EAA8B,GAAhBD,EAAOpjB,OACrBsjB,EAAeF,EAAO3E,KAAI,SAAU+C,GACpC,IAAKA,EAAMwB,YACP,OAAOxB,EAEX,IAAIoB,EAASS,EAEb,OADAA,GAAe7B,EAAMqB,oBACdrB,EAAMsB,WAAWF,MAI5B,OAAOU,EAAaC,QAAO,SAAU3hB,EAAQ4f,GACzC,OAAO5f,EAAS4f,EAAMM,gBACvBwB,EAAaC,QAAO,SAAU3hB,EAAQ4f,GACrC,OAAO5f,EAAS4f,EAAMC,eACvB,MAKPpe,EAAOC,QAAU0d,G,uBCvJjB,IAAIzd,EAAI,EAAQ,QACZC,EAAe,EAAQ,QAevBggB,EAAoB,WACpB9f,KAAKC,gBAAkBJ,EAAE4d,iBACzBzd,KAAKG,iBAAmBN,EAAEqe,mBAG9B4B,EAAkBzf,UAAY,IAAIP,EAAa,IAC/CggB,EAAkBzf,UAAU5F,YAAcqlB,EAE1CA,EAAkBzf,UAAUC,OAAS,SAAU5F,GAC3C,QAASA,EAAK6F,MAAM,sCAGxBZ,EAAOC,QAAUkgB,G,wBC5BjB,2BACE,aAGA,SAAShf,EAAQC,EAAKC,GACpB,IAAKD,EAAK,MAAM,IAAI9F,MAAM+F,GAAO,oBAKnC,SAASC,EAAUC,EAAMC,GACvBD,EAAKE,OAASD,EACd,IAAIE,EAAW,aACfA,EAAShB,UAAYc,EAAUd,UAC/Ba,EAAKb,UAAY,IAAIgB,EACrBH,EAAKb,UAAU5F,YAAcyG,EAK/B,SAAS/G,EAAIU,EAAQyG,EAAMC,GACzB,GAAIpH,EAAGI,KAAKM,GACV,OAAOA,EAGTmF,KAAKwB,SAAW,EAChBxB,KAAKyB,MAAQ,KACbzB,KAAK1D,OAAS,EAGd0D,KAAK0B,IAAM,KAEI,OAAX7G,IACW,OAATyG,GAA0B,OAATA,IACnBC,EAASD,EACTA,EAAO,IAGTtB,KAAK2B,MAAM9G,GAAU,EAAGyG,GAAQ,GAAIC,GAAU,OAYlD,IAAIK,EATkB,kBAAXjC,EACTA,EAAOC,QAAUzF,EAEjByF,EAAQzF,GAAKA,EAGfA,EAAGA,GAAKA,EACRA,EAAG0H,SAAW,GAGd,IACED,EAAS,EAAQ,QAAeA,OAChC,MAAO5G,IAoIT,SAAS8G,EAAUnF,EAAKoF,EAAOC,GAG7B,IAFA,IAAIC,EAAI,EACJC,EAAMC,KAAKC,IAAIzF,EAAIL,OAAQ0F,GACtBnG,EAAIkG,EAAOlG,EAAIqG,EAAKrG,IAAK,CAChC,IAAI2C,EAAI7B,EAAIM,WAAWpB,GAAK,GAE5BoG,IAAM,EAIJA,GADEzD,GAAK,IAAMA,GAAK,GACbA,EAAI,GAAK,GAGLA,GAAK,IAAMA,GAAK,GACpBA,EAAI,GAAK,GAIL,GAAJA,EAGT,OAAOyD,EAiCT,SAASI,EAAW1F,EAAKoF,EAAOC,EAAKM,GAGnC,IAFA,IAAIL,EAAI,EACJC,EAAMC,KAAKC,IAAIzF,EAAIL,OAAQ0F,GACtBnG,EAAIkG,EAAOlG,EAAIqG,EAAKrG,IAAK,CAChC,IAAI2C,EAAI7B,EAAIM,WAAWpB,GAAK,GAE5BoG,GAAKK,EAIHL,GADEzD,GAAK,GACFA,EAAI,GAAK,GAGLA,GAAK,GACTA,EAAI,GAAK,GAITA,EAGT,OAAOyD,EA5MT9H,EAAGI,KAAO,SAAegI,GACvB,OAAIA,aAAepI,GAIJ,OAARoI,GAA+B,kBAARA,GAC5BA,EAAI9H,YAAYoH,WAAa1H,EAAG0H,UAAYtF,MAAMiG,QAAQD,EAAId,QAGlEtH,EAAGsI,IAAM,SAAcC,EAAMC,GAC3B,OAAID,EAAKE,IAAID,GAAS,EAAUD,EACzBC,GAGTxI,EAAGiI,IAAM,SAAcM,EAAMC,GAC3B,OAAID,EAAKE,IAAID,GAAS,EAAUD,EACzBC,GAGTxI,EAAGkG,UAAUsB,MAAQ,SAAe9G,EAAQyG,EAAMC,GAChD,GAAsB,kBAAX1G,EACT,OAAOmF,KAAK6C,YAAYhI,EAAQyG,EAAMC,GAGxC,GAAsB,kBAAX1G,EACT,OAAOmF,KAAK8C,WAAWjI,EAAQyG,EAAMC,GAG1B,QAATD,IACFA,EAAO,IAETR,EAAOQ,KAAiB,EAAPA,IAAaA,GAAQ,GAAKA,GAAQ,IAEnDzG,EAASA,EAAOO,WAAWK,QAAQ,OAAQ,IAC3C,IAAIsG,EAAQ,EACM,MAAdlH,EAAO,IACTkH,IAGW,KAATT,EACFtB,KAAK+C,UAAUlI,EAAQkH,GAEvB/B,KAAKgD,WAAWnI,EAAQyG,EAAMS,GAGd,MAAdlH,EAAO,KACTmF,KAAKwB,SAAW,GAGlBxB,KAAKiD,QAEU,OAAX1B,GAEJvB,KAAK8C,WAAW9C,KAAKkD,UAAW5B,EAAMC,IAGxCpH,EAAGkG,UAAUwC,YAAc,SAAsBhI,EAAQyG,EAAMC,GACzD1G,EAAS,IACXmF,KAAKwB,SAAW,EAChB3G,GAAUA,GAERA,EAAS,UACXmF,KAAKyB,MAAQ,CAAW,SAAT5G,GACfmF,KAAK1D,OAAS,GACLzB,EAAS,kBAClBmF,KAAKyB,MAAQ,CACF,SAAT5G,EACCA,EAAS,SAAa,UAEzBmF,KAAK1D,OAAS,IAEdwE,EAAOjG,EAAS,kBAChBmF,KAAKyB,MAAQ,CACF,SAAT5G,EACCA,EAAS,SAAa,SACvB,GAEFmF,KAAK1D,OAAS,GAGD,OAAXiF,GAGJvB,KAAK8C,WAAW9C,KAAKkD,UAAW5B,EAAMC,IAGxCpH,EAAGkG,UAAUyC,WAAa,SAAqBjI,EAAQyG,EAAMC,GAG3D,GADAT,EAAgC,kBAAlBjG,EAAOyB,QACjBzB,EAAOyB,QAAU,EAGnB,OAFA0D,KAAKyB,MAAQ,CAAE,GACfzB,KAAK1D,OAAS,EACP0D,KAGTA,KAAK1D,OAAS6F,KAAKgB,KAAKtI,EAAOyB,OAAS,GACxC0D,KAAKyB,MAAQ,IAAIlF,MAAMyD,KAAK1D,QAC5B,IAAK,IAAIT,EAAI,EAAGA,EAAImE,KAAK1D,OAAQT,IAC/BmE,KAAKyB,MAAM5F,GAAK,EAGlB,IAAIuH,EAAGC,EACHC,EAAM,EACV,GAAe,OAAX/B,EACF,IAAK1F,EAAIhB,EAAOyB,OAAS,EAAG8G,EAAI,EAAGvH,GAAK,EAAGA,GAAK,EAC9CwH,EAAIxI,EAAOgB,GAAMhB,EAAOgB,EAAI,IAAM,EAAMhB,EAAOgB,EAAI,IAAM,GACzDmE,KAAKyB,MAAM2B,IAAOC,GAAKC,EAAO,SAC9BtD,KAAKyB,MAAM2B,EAAI,GAAMC,IAAO,GAAKC,EAAQ,SACzCA,GAAO,GACHA,GAAO,KACTA,GAAO,GACPF,UAGC,GAAe,OAAX7B,EACT,IAAK1F,EAAI,EAAGuH,EAAI,EAAGvH,EAAIhB,EAAOyB,OAAQT,GAAK,EACzCwH,EAAIxI,EAAOgB,GAAMhB,EAAOgB,EAAI,IAAM,EAAMhB,EAAOgB,EAAI,IAAM,GACzDmE,KAAKyB,MAAM2B,IAAOC,GAAKC,EAAO,SAC9BtD,KAAKyB,MAAM2B,EAAI,GAAMC,IAAO,GAAKC,EAAQ,SACzCA,GAAO,GACHA,GAAO,KACTA,GAAO,GACPF,KAIN,OAAOpD,KAAKiD,SA2Bd9I,EAAGkG,UAAU0C,UAAY,SAAoBlI,EAAQkH,GAEnD/B,KAAK1D,OAAS6F,KAAKgB,MAAMtI,EAAOyB,OAASyF,GAAS,GAClD/B,KAAKyB,MAAQ,IAAIlF,MAAMyD,KAAK1D,QAC5B,IAAK,IAAIT,EAAI,EAAGA,EAAImE,KAAK1D,OAAQT,IAC/BmE,KAAKyB,MAAM5F,GAAK,EAGlB,IAAIuH,EAAGC,EAEHC,EAAM,EACV,IAAKzH,EAAIhB,EAAOyB,OAAS,EAAG8G,EAAI,EAAGvH,GAAKkG,EAAOlG,GAAK,EAClDwH,EAAIvB,EAASjH,EAAQgB,EAAGA,EAAI,GAC5BmE,KAAKyB,MAAM2B,IAAOC,GAAKC,EAAO,SAE9BtD,KAAKyB,MAAM2B,EAAI,IAAMC,IAAO,GAAKC,EAAO,QACxCA,GAAO,GACHA,GAAO,KACTA,GAAO,GACPF,KAGAvH,EAAI,IAAMkG,IACZsB,EAAIvB,EAASjH,EAAQkH,EAAOlG,EAAI,GAChCmE,KAAKyB,MAAM2B,IAAOC,GAAKC,EAAO,SAC9BtD,KAAKyB,MAAM2B,EAAI,IAAMC,IAAO,GAAKC,EAAO,SAE1CtD,KAAKiD,SA2BP9I,EAAGkG,UAAU2C,WAAa,SAAqBnI,EAAQyG,EAAMS,GAE3D/B,KAAKyB,MAAQ,CAAE,GACfzB,KAAK1D,OAAS,EAGd,IAAK,IAAIiH,EAAU,EAAGC,EAAU,EAAGA,GAAW,SAAWA,GAAWlC,EAClEiC,IAEFA,IACAC,EAAWA,EAAUlC,EAAQ,EAO7B,IALA,IAAImC,EAAQ5I,EAAOyB,OAASyF,EACxB2B,EAAMD,EAAQF,EACdvB,EAAMG,KAAKC,IAAIqB,EAAOA,EAAQC,GAAO3B,EAErC4B,EAAO,EACF9H,EAAIkG,EAAOlG,EAAImG,EAAKnG,GAAK0H,EAChCI,EAAOtB,EAAUxH,EAAQgB,EAAGA,EAAI0H,EAASjC,GAEzCtB,KAAK4D,MAAMJ,GACPxD,KAAKyB,MAAM,GAAKkC,EAAO,SACzB3D,KAAKyB,MAAM,IAAMkC,EAEjB3D,KAAK6D,OAAOF,GAIhB,GAAY,IAARD,EAAW,CACb,IAAII,EAAM,EAGV,IAFAH,EAAOtB,EAAUxH,EAAQgB,EAAGhB,EAAOyB,OAAQgF,GAEtCzF,EAAI,EAAGA,EAAI6H,EAAK7H,IACnBiI,GAAOxC,EAGTtB,KAAK4D,MAAME,GACP9D,KAAKyB,MAAM,GAAKkC,EAAO,SACzB3D,KAAKyB,MAAM,IAAMkC,EAEjB3D,KAAK6D,OAAOF,KAKlBxJ,EAAGkG,UAAU0D,KAAO,SAAeC,GACjCA,EAAKvC,MAAQ,IAAIlF,MAAMyD,KAAK1D,QAC5B,IAAK,IAAIT,EAAI,EAAGA,EAAImE,KAAK1D,OAAQT,IAC/BmI,EAAKvC,MAAM5F,GAAKmE,KAAKyB,MAAM5F,GAE7BmI,EAAK1H,OAAS0D,KAAK1D,OACnB0H,EAAKxC,SAAWxB,KAAKwB,SACrBwC,EAAKtC,IAAM1B,KAAK0B,KAGlBvH,EAAGkG,UAAU4D,MAAQ,WACnB,IAAIhC,EAAI,IAAI9H,EAAG,MAEf,OADA6F,KAAK+D,KAAK9B,GACHA,GAGT9H,EAAGkG,UAAU6D,QAAU,SAAkBC,GACvC,MAAOnE,KAAK1D,OAAS6H,EACnBnE,KAAKyB,MAAMzB,KAAK1D,UAAY,EAE9B,OAAO0D,MAIT7F,EAAGkG,UAAU4C,MAAQ,WACnB,MAAOjD,KAAK1D,OAAS,GAAqC,IAAhC0D,KAAKyB,MAAMzB,KAAK1D,OAAS,GACjD0D,KAAK1D,SAEP,OAAO0D,KAAKoE,aAGdjK,EAAGkG,UAAU+D,UAAY,WAKvB,OAHoB,IAAhBpE,KAAK1D,QAAkC,IAAlB0D,KAAKyB,MAAM,KAClCzB,KAAKwB,SAAW,GAEXxB,MAGT7F,EAAGkG,UAAUgE,QAAU,WACrB,OAAQrE,KAAK0B,IAAM,UAAY,SAAW1B,KAAK5E,SAAS,IAAM,KAiChE,IAAIkJ,EAAQ,CACV,GACA,IACA,KACA,MACA,OACA,QACA,SACA,UACA,WACA,YACA,aACA,cACA,eACA,gBACA,iBACA,kBACA,mBACA,oBACA,qBACA,sBACA,uBACA,wBACA,yBACA,0BACA,2BACA,6BAGEC,EAAa,CACf,EAAG,EACH,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EACvB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAGhBC,EAAa,CACf,EAAG,EACH,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAC5D,SAAU,IAAU,SAAU,SAAU,SAAU,QAAS,SAC3D,SAAU,SAAU,SAAU,SAAU,KAAU,QAAS,QAC3D,QAAS,QAAS,QAAS,SAAU,SAAU,SAAU,SACzD,MAAU,SAAU,SAAU,SAAU,SAAU,SAAU,UAyM9D,SAASC,EAAYlC,GAGnB,IAFA,IAAIc,EAAI,IAAI9G,MAAMgG,EAAImC,aAEbC,EAAM,EAAGA,EAAMtB,EAAE/G,OAAQqI,IAAO,CACvC,IAAIrB,EAAOqB,EAAM,GAAM,EACnBC,EAAOD,EAAM,GAEjBtB,EAAEsB,IAAQpC,EAAId,MAAM6B,GAAQ,GAAKsB,KAAWA,EAG9C,OAAOvB,EAmWT,SAASwB,EAAYC,EAAMvC,EAAKwC,GAC9BA,EAAIvD,SAAWe,EAAIf,SAAWsD,EAAKtD,SACnC,IAAIU,EAAO4C,EAAKxI,OAASiG,EAAIjG,OAAU,EACvCyI,EAAIzI,OAAS4F,EACbA,EAAOA,EAAM,EAAK,EAGlB,IAAI8C,EAAoB,EAAhBF,EAAKrD,MAAM,GACfwD,EAAmB,EAAf1C,EAAId,MAAM,GACdQ,EAAI+C,EAAIC,EAERC,EAAS,SAAJjD,EACLkD,EAASlD,EAAI,SAAa,EAC9B8C,EAAItD,MAAM,GAAKyD,EAEf,IAAK,IAAIE,EAAI,EAAGA,EAAIlD,EAAKkD,IAAK,CAM5B,IAHA,IAAIC,EAASF,IAAU,GACnBG,EAAgB,SAARH,EACRI,EAAOpD,KAAKC,IAAIgD,EAAG7C,EAAIjG,OAAS,GAC3B8G,EAAIjB,KAAKM,IAAI,EAAG2C,EAAIN,EAAKxI,OAAS,GAAI8G,GAAKmC,EAAMnC,IAAK,CAC7D,IAAIvH,EAAKuJ,EAAIhC,EAAK,EAClB4B,EAAoB,EAAhBF,EAAKrD,MAAM5F,GACfoJ,EAAmB,EAAf1C,EAAId,MAAM2B,GACdnB,EAAI+C,EAAIC,EAAIK,EACZD,GAAWpD,EAAI,SAAa,EAC5BqD,EAAY,SAAJrD,EAEV8C,EAAItD,MAAM2D,GAAa,EAARE,EACfH,EAAiB,EAATE,EAQV,OANc,IAAVF,EACFJ,EAAItD,MAAM2D,GAAa,EAARD,EAEfJ,EAAIzI,SAGCyI,EAAI9B,QAzlBb9I,EAAGkG,UAAUjF,SAAW,SAAmBkG,EAAMjF,GAI/C,IAAI0I,EACJ,GAJAzD,EAAOA,GAAQ,GACfjF,EAAoB,EAAVA,GAAe,EAGZ,KAATiF,GAAwB,QAATA,EAAgB,CACjCyD,EAAM,GAGN,IAFA,IAAIzB,EAAM,EACN6B,EAAQ,EACHtJ,EAAI,EAAGA,EAAImE,KAAK1D,OAAQT,IAAK,CACpC,IAAIwH,EAAIrD,KAAKyB,MAAM5F,GACf8H,GAA+B,UAArBN,GAAKC,EAAO6B,IAAmB/J,SAAS,IACtD+J,EAAS9B,IAAO,GAAKC,EAAQ,SAE3ByB,EADY,IAAVI,GAAetJ,IAAMmE,KAAK1D,OAAS,EAC/BgI,EAAM,EAAIX,EAAKrH,QAAUqH,EAAOoB,EAEhCpB,EAAOoB,EAEfzB,GAAO,EACHA,GAAO,KACTA,GAAO,GACPzH,KAGU,IAAVsJ,IACFJ,EAAMI,EAAM/J,SAAS,IAAM2J,GAE7B,MAAOA,EAAIzI,OAASD,IAAY,EAC9B0I,EAAM,IAAMA,EAKd,OAHsB,IAAlB/E,KAAKwB,WACPuD,EAAM,IAAMA,GAEPA,EAGT,GAAIzD,KAAiB,EAAPA,IAAaA,GAAQ,GAAKA,GAAQ,GAAI,CAElD,IAAIkE,EAAYjB,EAAWjD,GAEvBmE,EAAYjB,EAAWlD,GAC3ByD,EAAM,GACN,IAAIvG,EAAIwB,KAAKiE,QACbzF,EAAEgD,SAAW,EACb,OAAQhD,EAAEkH,SAAU,CAClB,IAAIzD,EAAIzD,EAAEmH,KAAKF,GAAWrK,SAASkG,GACnC9C,EAAIA,EAAEoH,MAAMH,GAKVV,EAHGvG,EAAEkH,SAGCzD,EAAI8C,EAFJT,EAAMkB,EAAYvD,EAAE3F,QAAU2F,EAAI8C,EAKxC/E,KAAK0F,WACPX,EAAM,IAAMA,GAEd,MAAOA,EAAIzI,OAASD,IAAY,EAC9B0I,EAAM,IAAMA,EAKd,OAHsB,IAAlB/E,KAAKwB,WACPuD,EAAM,IAAMA,GAEPA,EAGTjE,GAAO,EAAO,oCAGhB3G,EAAGkG,UAAUzC,SAAW,WACtB,IAAIiI,EAAM7F,KAAKyB,MAAM,GASrB,OARoB,IAAhBzB,KAAK1D,OACPuJ,GAAuB,SAAhB7F,KAAKyB,MAAM,GACO,IAAhBzB,KAAK1D,QAAkC,IAAlB0D,KAAKyB,MAAM,GAEzCoE,GAAO,iBAAoC,SAAhB7F,KAAKyB,MAAM,GAC7BzB,KAAK1D,OAAS,GACvBwE,GAAO,EAAO,8CAEU,IAAlBd,KAAKwB,UAAmBqE,EAAMA,GAGxC1L,EAAGkG,UAAUyF,OAAS,WACpB,OAAO9F,KAAK5E,SAAS,KAGvBjB,EAAGkG,UAAU0F,SAAW,SAAmBxE,EAAQjF,GAEjD,OADAwE,EAAyB,qBAAXc,GACP5B,KAAKgG,YAAYpE,EAAQL,EAAQjF,IAG1CnC,EAAGkG,UAAU6C,QAAU,SAAkB3B,EAAQjF,GAC/C,OAAO0D,KAAKgG,YAAYzJ,MAAOgF,EAAQjF,IAGzCnC,EAAGkG,UAAU2F,YAAc,SAAsBC,EAAW1E,EAAQjF,GAClE,IAAI4J,EAAalG,KAAKkG,aAClBC,EAAY7J,GAAU6F,KAAKM,IAAI,EAAGyD,GACtCpF,EAAOoF,GAAcC,EAAW,yCAChCrF,EAAOqF,EAAY,EAAG,+BAEtBnG,KAAKiD,QACL,IAGIgC,EAAGpJ,EAHHuK,EAA0B,OAAX7E,EACf8E,EAAM,IAAIJ,EAAUE,GAGpBG,EAAItG,KAAKiE,QACb,GAAKmC,EAYE,CACL,IAAKvK,EAAI,GAAIyK,EAAEZ,SAAU7J,IACvBoJ,EAAIqB,EAAEC,MAAM,KACZD,EAAEE,OAAO,GAETH,EAAIxK,GAAKoJ,EAGX,KAAOpJ,EAAIsK,EAAWtK,IACpBwK,EAAIxK,GAAK,MArBM,CAEjB,IAAKA,EAAI,EAAGA,EAAIsK,EAAYD,EAAYrK,IACtCwK,EAAIxK,GAAK,EAGX,IAAKA,EAAI,GAAIyK,EAAEZ,SAAU7J,IACvBoJ,EAAIqB,EAAEC,MAAM,KACZD,EAAEE,OAAO,GAETH,EAAIF,EAAYtK,EAAI,GAAKoJ,EAe7B,OAAOoB,GAGLlE,KAAKsE,MACPtM,EAAGkG,UAAUqG,WAAa,SAAqBrD,GAC7C,OAAO,GAAKlB,KAAKsE,MAAMpD,IAGzBlJ,EAAGkG,UAAUqG,WAAa,SAAqBrD,GAC7C,IAAIsD,EAAItD,EACJpB,EAAI,EAiBR,OAhBI0E,GAAK,OACP1E,GAAK,GACL0E,KAAO,IAELA,GAAK,KACP1E,GAAK,EACL0E,KAAO,GAELA,GAAK,IACP1E,GAAK,EACL0E,KAAO,GAELA,GAAK,IACP1E,GAAK,EACL0E,KAAO,GAEF1E,EAAI0E,GAIfxM,EAAGkG,UAAUuG,UAAY,SAAoBvD,GAE3C,GAAU,IAANA,EAAS,OAAO,GAEpB,IAAIsD,EAAItD,EACJpB,EAAI,EAoBR,OAnBqB,KAAZ,KAAJ0E,KACH1E,GAAK,GACL0E,KAAO,IAEU,KAAV,IAAJA,KACH1E,GAAK,EACL0E,KAAO,GAES,KAAT,GAAJA,KACH1E,GAAK,EACL0E,KAAO,GAES,KAAT,EAAJA,KACH1E,GAAK,EACL0E,KAAO,GAES,KAAT,EAAJA,IACH1E,IAEKA,GAIT9H,EAAGkG,UAAUqE,UAAY,WACvB,IAAIrB,EAAIrD,KAAKyB,MAAMzB,KAAK1D,OAAS,GAC7BuK,EAAK7G,KAAK0G,WAAWrD,GACzB,OAA2B,IAAnBrD,KAAK1D,OAAS,GAAUuK,GAiBlC1M,EAAGkG,UAAUyG,SAAW,WACtB,GAAI9G,KAAK0F,SAAU,OAAO,EAG1B,IADA,IAAIzD,EAAI,EACCpG,EAAI,EAAGA,EAAImE,KAAK1D,OAAQT,IAAK,CACpC,IAAIoJ,EAAIjF,KAAK4G,UAAU5G,KAAKyB,MAAM5F,IAElC,GADAoG,GAAKgD,EACK,KAANA,EAAU,MAEhB,OAAOhD,GAGT9H,EAAGkG,UAAU6F,WAAa,WACxB,OAAO/D,KAAKgB,KAAKnD,KAAK0E,YAAc,IAGtCvK,EAAGkG,UAAUlF,OAAS,SAAiB4L,GACrC,OAAsB,IAAlB/G,KAAKwB,SACAxB,KAAKgH,MAAMC,MAAMF,GAAOG,MAAM,GAEhClH,KAAKiE,SAGd9J,EAAGkG,UAAU8G,SAAW,SAAmBJ,GACzC,OAAI/G,KAAKoH,MAAML,EAAQ,GACd/G,KAAKqH,KAAKN,GAAOG,MAAM,GAAGI,OAE5BtH,KAAKiE,SAGd9J,EAAGkG,UAAUkH,MAAQ,WACnB,OAAyB,IAAlBvH,KAAKwB,UAIdrH,EAAGkG,UAAUmH,IAAM,WACjB,OAAOxH,KAAKiE,QAAQqD,QAGtBnN,EAAGkG,UAAUiH,KAAO,WAKlB,OAJKtH,KAAK0F,WACR1F,KAAKwB,UAAY,GAGZxB,MAIT7F,EAAGkG,UAAUoH,KAAO,SAAelF,GACjC,MAAOvC,KAAK1D,OAASiG,EAAIjG,OACvB0D,KAAKyB,MAAMzB,KAAK1D,UAAY,EAG9B,IAAK,IAAIT,EAAI,EAAGA,EAAI0G,EAAIjG,OAAQT,IAC9BmE,KAAKyB,MAAM5F,GAAKmE,KAAKyB,MAAM5F,GAAK0G,EAAId,MAAM5F,GAG5C,OAAOmE,KAAKiD,SAGd9I,EAAGkG,UAAUqH,IAAM,SAAcnF,GAE/B,OADAzB,EAA0C,KAAlCd,KAAKwB,SAAWe,EAAIf,WACrBxB,KAAKyH,KAAKlF,IAInBpI,EAAGkG,UAAUsH,GAAK,SAAapF,GAC7B,OAAIvC,KAAK1D,OAASiG,EAAIjG,OAAe0D,KAAKiE,QAAQyD,IAAInF,GAC/CA,EAAI0B,QAAQyD,IAAI1H,OAGzB7F,EAAGkG,UAAUuH,IAAM,SAAcrF,GAC/B,OAAIvC,KAAK1D,OAASiG,EAAIjG,OAAe0D,KAAKiE,QAAQwD,KAAKlF,GAChDA,EAAI0B,QAAQwD,KAAKzH,OAI1B7F,EAAGkG,UAAUwH,MAAQ,SAAgBtF,GAEnC,IAAI0C,EAEFA,EADEjF,KAAK1D,OAASiG,EAAIjG,OAChBiG,EAEAvC,KAGN,IAAK,IAAInE,EAAI,EAAGA,EAAIoJ,EAAE3I,OAAQT,IAC5BmE,KAAKyB,MAAM5F,GAAKmE,KAAKyB,MAAM5F,GAAK0G,EAAId,MAAM5F,GAK5C,OAFAmE,KAAK1D,OAAS2I,EAAE3I,OAET0D,KAAKiD,SAGd9I,EAAGkG,UAAUyH,KAAO,SAAevF,GAEjC,OADAzB,EAA0C,KAAlCd,KAAKwB,SAAWe,EAAIf,WACrBxB,KAAK6H,MAAMtF,IAIpBpI,EAAGkG,UAAU0H,IAAM,SAAcxF,GAC/B,OAAIvC,KAAK1D,OAASiG,EAAIjG,OAAe0D,KAAKiE,QAAQ6D,KAAKvF,GAChDA,EAAI0B,QAAQ6D,KAAK9H,OAG1B7F,EAAGkG,UAAU2H,KAAO,SAAezF,GACjC,OAAIvC,KAAK1D,OAASiG,EAAIjG,OAAe0D,KAAKiE,QAAQ4D,MAAMtF,GACjDA,EAAI0B,QAAQ4D,MAAM7H,OAI3B7F,EAAGkG,UAAU4H,MAAQ,SAAgB1F,GAEnC,IAAIyC,EACAC,EACAjF,KAAK1D,OAASiG,EAAIjG,QACpB0I,EAAIhF,KACJiF,EAAI1C,IAEJyC,EAAIzC,EACJ0C,EAAIjF,MAGN,IAAK,IAAInE,EAAI,EAAGA,EAAIoJ,EAAE3I,OAAQT,IAC5BmE,KAAKyB,MAAM5F,GAAKmJ,EAAEvD,MAAM5F,GAAKoJ,EAAExD,MAAM5F,GAGvC,GAAImE,OAASgF,EACX,KAAOnJ,EAAImJ,EAAE1I,OAAQT,IACnBmE,KAAKyB,MAAM5F,GAAKmJ,EAAEvD,MAAM5F,GAM5B,OAFAmE,KAAK1D,OAAS0I,EAAE1I,OAET0D,KAAKiD,SAGd9I,EAAGkG,UAAU6H,KAAO,SAAe3F,GAEjC,OADAzB,EAA0C,KAAlCd,KAAKwB,SAAWe,EAAIf,WACrBxB,KAAKiI,MAAM1F,IAIpBpI,EAAGkG,UAAU8H,IAAM,SAAc5F,GAC/B,OAAIvC,KAAK1D,OAASiG,EAAIjG,OAAe0D,KAAKiE,QAAQiE,KAAK3F,GAChDA,EAAI0B,QAAQiE,KAAKlI,OAG1B7F,EAAGkG,UAAU+H,KAAO,SAAe7F,GACjC,OAAIvC,KAAK1D,OAASiG,EAAIjG,OAAe0D,KAAKiE,QAAQgE,MAAM1F,GACjDA,EAAI0B,QAAQgE,MAAMjI,OAI3B7F,EAAGkG,UAAU4G,MAAQ,SAAgBF,GACnCjG,EAAwB,kBAAViG,GAAsBA,GAAS,GAE7C,IAAIsB,EAAsC,EAAxBlG,KAAKgB,KAAK4D,EAAQ,IAChCuB,EAAWvB,EAAQ,GAGvB/G,KAAKkE,QAAQmE,GAETC,EAAW,GACbD,IAIF,IAAK,IAAIxM,EAAI,EAAGA,EAAIwM,EAAaxM,IAC/BmE,KAAKyB,MAAM5F,GAAsB,UAAhBmE,KAAKyB,MAAM5F,GAS9B,OALIyM,EAAW,IACbtI,KAAKyB,MAAM5F,IAAMmE,KAAKyB,MAAM5F,GAAM,UAAc,GAAKyM,GAIhDtI,KAAKiD,SAGd9I,EAAGkG,UAAUgH,KAAO,SAAeN,GACjC,OAAO/G,KAAKiE,QAAQgD,MAAMF,IAI5B5M,EAAGkG,UAAUkI,KAAO,SAAe5D,EAAK5D,GACtCD,EAAsB,kBAAR6D,GAAoBA,GAAO,GAEzC,IAAIrB,EAAOqB,EAAM,GAAM,EACnBC,EAAOD,EAAM,GAUjB,OARA3E,KAAKkE,QAAQZ,EAAM,GAGjBtD,KAAKyB,MAAM6B,GADTvC,EACgBf,KAAKyB,MAAM6B,GAAQ,GAAKsB,EAExB5E,KAAKyB,MAAM6B,KAAS,GAAKsB,GAGtC5E,KAAKiD,SAId9I,EAAGkG,UAAUmI,KAAO,SAAejG,GACjC,IAAIN,EAkBA+C,EAAGC,EAfP,GAAsB,IAAlBjF,KAAKwB,UAAmC,IAAjBe,EAAIf,SAI7B,OAHAxB,KAAKwB,SAAW,EAChBS,EAAIjC,KAAKyI,KAAKlG,GACdvC,KAAKwB,UAAY,EACVxB,KAAKoE,YAGP,GAAsB,IAAlBpE,KAAKwB,UAAmC,IAAjBe,EAAIf,SAIpC,OAHAe,EAAIf,SAAW,EACfS,EAAIjC,KAAKyI,KAAKlG,GACdA,EAAIf,SAAW,EACRS,EAAEmC,YAKPpE,KAAK1D,OAASiG,EAAIjG,QACpB0I,EAAIhF,KACJiF,EAAI1C,IAEJyC,EAAIzC,EACJ0C,EAAIjF,MAIN,IADA,IAAImF,EAAQ,EACHtJ,EAAI,EAAGA,EAAIoJ,EAAE3I,OAAQT,IAC5BoG,GAAkB,EAAb+C,EAAEvD,MAAM5F,KAAwB,EAAboJ,EAAExD,MAAM5F,IAAUsJ,EAC1CnF,KAAKyB,MAAM5F,GAAS,SAAJoG,EAChBkD,EAAQlD,IAAM,GAEhB,KAAiB,IAAVkD,GAAetJ,EAAImJ,EAAE1I,OAAQT,IAClCoG,GAAkB,EAAb+C,EAAEvD,MAAM5F,IAAUsJ,EACvBnF,KAAKyB,MAAM5F,GAAS,SAAJoG,EAChBkD,EAAQlD,IAAM,GAIhB,GADAjC,KAAK1D,OAAS0I,EAAE1I,OACF,IAAV6I,EACFnF,KAAKyB,MAAMzB,KAAK1D,QAAU6I,EAC1BnF,KAAK1D,cAEA,GAAI0I,IAAMhF,KACf,KAAOnE,EAAImJ,EAAE1I,OAAQT,IACnBmE,KAAKyB,MAAM5F,GAAKmJ,EAAEvD,MAAM5F,GAI5B,OAAOmE,MAIT7F,EAAGkG,UAAUqI,IAAM,SAAcnG,GAC/B,IAAI8D,EACJ,OAAqB,IAAjB9D,EAAIf,UAAoC,IAAlBxB,KAAKwB,UAC7Be,EAAIf,SAAW,EACf6E,EAAMrG,KAAK2I,IAAIpG,GACfA,EAAIf,UAAY,EACT6E,GACmB,IAAjB9D,EAAIf,UAAoC,IAAlBxB,KAAKwB,UACpCxB,KAAKwB,SAAW,EAChB6E,EAAM9D,EAAIoG,IAAI3I,MACdA,KAAKwB,SAAW,EACT6E,GAGLrG,KAAK1D,OAASiG,EAAIjG,OAAe0D,KAAKiE,QAAQuE,KAAKjG,GAEhDA,EAAI0B,QAAQuE,KAAKxI,OAI1B7F,EAAGkG,UAAUoI,KAAO,SAAelG,GAEjC,GAAqB,IAAjBA,EAAIf,SAAgB,CACtBe,EAAIf,SAAW,EACf,IAAIS,EAAIjC,KAAKwI,KAAKjG,GAElB,OADAA,EAAIf,SAAW,EACRS,EAAEmC,YAGJ,GAAsB,IAAlBpE,KAAKwB,SAId,OAHAxB,KAAKwB,SAAW,EAChBxB,KAAKwI,KAAKjG,GACVvC,KAAKwB,SAAW,EACTxB,KAAKoE,YAId,IAWIY,EAAGC,EAXHrC,EAAM5C,KAAK4C,IAAIL,GAGnB,GAAY,IAARK,EAIF,OAHA5C,KAAKwB,SAAW,EAChBxB,KAAK1D,OAAS,EACd0D,KAAKyB,MAAM,GAAK,EACTzB,KAKL4C,EAAM,GACRoC,EAAIhF,KACJiF,EAAI1C,IAEJyC,EAAIzC,EACJ0C,EAAIjF,MAIN,IADA,IAAImF,EAAQ,EACHtJ,EAAI,EAAGA,EAAIoJ,EAAE3I,OAAQT,IAC5BoG,GAAkB,EAAb+C,EAAEvD,MAAM5F,KAAwB,EAAboJ,EAAExD,MAAM5F,IAAUsJ,EAC1CA,EAAQlD,GAAK,GACbjC,KAAKyB,MAAM5F,GAAS,SAAJoG,EAElB,KAAiB,IAAVkD,GAAetJ,EAAImJ,EAAE1I,OAAQT,IAClCoG,GAAkB,EAAb+C,EAAEvD,MAAM5F,IAAUsJ,EACvBA,EAAQlD,GAAK,GACbjC,KAAKyB,MAAM5F,GAAS,SAAJoG,EAIlB,GAAc,IAAVkD,GAAetJ,EAAImJ,EAAE1I,QAAU0I,IAAMhF,KACvC,KAAOnE,EAAImJ,EAAE1I,OAAQT,IACnBmE,KAAKyB,MAAM5F,GAAKmJ,EAAEvD,MAAM5F,GAU5B,OANAmE,KAAK1D,OAAS6F,KAAKM,IAAIzC,KAAK1D,OAAQT,GAEhCmJ,IAAMhF,OACRA,KAAKwB,SAAW,GAGXxB,KAAKiD,SAId9I,EAAGkG,UAAUsI,IAAM,SAAcpG,GAC/B,OAAOvC,KAAKiE,QAAQwE,KAAKlG,IA+C3B,IAAIqG,EAAc,SAAsB9D,EAAMvC,EAAKwC,GACjD,IAIIG,EACA2D,EACAhC,EANA7B,EAAIF,EAAKrD,MACTwD,EAAI1C,EAAId,MACRqH,EAAI/D,EAAItD,MACRjD,EAAI,EAIJuK,EAAY,EAAP/D,EAAE,GACPgE,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPlE,EAAE,GACPmE,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPrE,EAAE,GACPsE,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPxE,EAAE,GACPyE,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP3E,EAAE,GACP4E,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP9E,EAAE,GACP+E,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPjF,EAAE,GACPkF,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPpF,EAAE,GACPqF,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPvF,EAAE,GACPwF,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP1F,EAAE,GACP2F,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP5F,EAAE,GACP6F,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP/F,EAAE,GACPgG,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPlG,EAAE,GACPmG,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPrG,EAAE,GACPsG,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPxG,EAAE,GACPyG,EAAW,KAALD,EACNE,GAAMF,IAAO,GACbG,GAAY,EAAP3G,EAAE,GACP4G,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAP9G,EAAE,GACP+G,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAPjH,EAAE,GACPkH,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAPpH,EAAE,GACPqH,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAPvH,EAAE,GACPwH,GAAW,KAALD,GACNE,GAAMF,KAAO,GAEjBzH,EAAIvD,SAAWsD,EAAKtD,SAAWe,EAAIf,SACnCuD,EAAIzI,OAAS,GAEb4I,EAAK/C,KAAKwK,KAAK3D,EAAK8B,GACpBjC,EAAM1G,KAAKwK,KAAK3D,EAAK+B,GACrBlC,EAAOA,EAAM1G,KAAKwK,KAAK1D,EAAK6B,GAAQ,EACpCjE,EAAK1E,KAAKwK,KAAK1D,EAAK8B,GACpB,IAAI6B,IAAQpO,EAAI0G,EAAM,KAAa,KAAN2D,IAAiB,IAAO,EACrDrK,GAAOqI,GAAMgC,IAAQ,IAAO,IAAM+D,KAAO,IAAO,EAChDA,IAAM,SAEN1H,EAAK/C,KAAKwK,KAAKxD,EAAK2B,GACpBjC,EAAM1G,KAAKwK,KAAKxD,EAAK4B,GACrBlC,EAAOA,EAAM1G,KAAKwK,KAAKvD,EAAK0B,GAAQ,EACpCjE,EAAK1E,KAAKwK,KAAKvD,EAAK2B,GACpB7F,EAAMA,EAAK/C,KAAKwK,KAAK3D,EAAKiC,GAAQ,EAClCpC,EAAOA,EAAM1G,KAAKwK,KAAK3D,EAAKkC,GAAQ,EACpCrC,EAAOA,EAAM1G,KAAKwK,KAAK1D,EAAKgC,GAAQ,EACpCpE,EAAMA,EAAK1E,KAAKwK,KAAK1D,EAAKiC,GAAQ,EAClC,IAAI2B,IAAQrO,EAAI0G,EAAM,KAAa,KAAN2D,IAAiB,IAAO,EACrDrK,GAAOqI,GAAMgC,IAAQ,IAAO,IAAMgE,KAAO,IAAO,EAChDA,IAAM,SAEN3H,EAAK/C,KAAKwK,KAAKrD,EAAKwB,GACpBjC,EAAM1G,KAAKwK,KAAKrD,EAAKyB,GACrBlC,EAAOA,EAAM1G,KAAKwK,KAAKpD,EAAKuB,GAAQ,EACpCjE,EAAK1E,KAAKwK,KAAKpD,EAAKwB,GACpB7F,EAAMA,EAAK/C,KAAKwK,KAAKxD,EAAK8B,GAAQ,EAClCpC,EAAOA,EAAM1G,KAAKwK,KAAKxD,EAAK+B,GAAQ,EACpCrC,EAAOA,EAAM1G,KAAKwK,KAAKvD,EAAK6B,GAAQ,EACpCpE,EAAMA,EAAK1E,KAAKwK,KAAKvD,EAAK8B,GAAQ,EAClChG,EAAMA,EAAK/C,KAAKwK,KAAK3D,EAAKoC,GAAQ,EAClCvC,EAAOA,EAAM1G,KAAKwK,KAAK3D,EAAKqC,GAAQ,EACpCxC,EAAOA,EAAM1G,KAAKwK,KAAK1D,EAAKmC,GAAQ,EACpCvE,EAAMA,EAAK1E,KAAKwK,KAAK1D,EAAKoC,GAAQ,EAClC,IAAIyB,IAAQtO,EAAI0G,EAAM,KAAa,KAAN2D,IAAiB,IAAO,EACrDrK,GAAOqI,GAAMgC,IAAQ,IAAO,IAAMiE,KAAO,IAAO,EAChDA,IAAM,SAEN5H,EAAK/C,KAAKwK,KAAKlD,EAAKqB,GACpBjC,EAAM1G,KAAKwK,KAAKlD,EAAKsB,GACrBlC,EAAOA,EAAM1G,KAAKwK,KAAKjD,EAAKoB,GAAQ,EACpCjE,EAAK1E,KAAKwK,KAAKjD,EAAKqB,GACpB7F,EAAMA,EAAK/C,KAAKwK,KAAKrD,EAAK2B,GAAQ,EAClCpC,EAAOA,EAAM1G,KAAKwK,KAAKrD,EAAK4B,GAAQ,EACpCrC,EAAOA,EAAM1G,KAAKwK,KAAKpD,EAAK0B,GAAQ,EACpCpE,EAAMA,EAAK1E,KAAKwK,KAAKpD,EAAK2B,GAAQ,EAClChG,EAAMA,EAAK/C,KAAKwK,KAAKxD,EAAKiC,GAAQ,EAClCvC,EAAOA,EAAM1G,KAAKwK,KAAKxD,EAAKkC,GAAQ,EACpCxC,EAAOA,EAAM1G,KAAKwK,KAAKvD,EAAKgC,GAAQ,EACpCvE,EAAMA,EAAK1E,KAAKwK,KAAKvD,EAAKiC,GAAQ,EAClCnG,EAAMA,EAAK/C,KAAKwK,KAAK3D,EAAKuC,GAAQ,EAClC1C,EAAOA,EAAM1G,KAAKwK,KAAK3D,EAAKwC,GAAQ,EACpC3C,EAAOA,EAAM1G,KAAKwK,KAAK1D,EAAKsC,GAAQ,EACpC1E,EAAMA,EAAK1E,KAAKwK,KAAK1D,EAAKuC,GAAQ,EAClC,IAAIuB,IAAQvO,EAAI0G,EAAM,KAAa,KAAN2D,IAAiB,IAAO,EACrDrK,GAAOqI,GAAMgC,IAAQ,IAAO,IAAMkE,KAAO,IAAO,EAChDA,IAAM,SAEN7H,EAAK/C,KAAKwK,KAAK/C,EAAKkB,GACpBjC,EAAM1G,KAAKwK,KAAK/C,EAAKmB,GACrBlC,EAAOA,EAAM1G,KAAKwK,KAAK9C,EAAKiB,GAAQ,EACpCjE,EAAK1E,KAAKwK,KAAK9C,EAAKkB,GACpB7F,EAAMA,EAAK/C,KAAKwK,KAAKlD,EAAKwB,GAAQ,EAClCpC,EAAOA,EAAM1G,KAAKwK,KAAKlD,EAAKyB,GAAQ,EACpCrC,EAAOA,EAAM1G,KAAKwK,KAAKjD,EAAKuB,GAAQ,EACpCpE,EAAMA,EAAK1E,KAAKwK,KAAKjD,EAAKwB,GAAQ,EAClChG,EAAMA,EAAK/C,KAAKwK,KAAKrD,EAAK8B,GAAQ,EAClCvC,EAAOA,EAAM1G,KAAKwK,KAAKrD,EAAK+B,GAAQ,EACpCxC,EAAOA,EAAM1G,KAAKwK,KAAKpD,EAAK6B,GAAQ,EACpCvE,EAAMA,EAAK1E,KAAKwK,KAAKpD,EAAK8B,GAAQ,EAClCnG,EAAMA,EAAK/C,KAAKwK,KAAKxD,EAAKoC,GAAQ,EAClC1C,EAAOA,EAAM1G,KAAKwK,KAAKxD,EAAKqC,GAAQ,EACpC3C,EAAOA,EAAM1G,KAAKwK,KAAKvD,EAAKmC,GAAQ,EACpC1E,EAAMA,EAAK1E,KAAKwK,KAAKvD,EAAKoC,GAAQ,EAClCtG,EAAMA,EAAK/C,KAAKwK,KAAK3D,EAAK0C,GAAQ,EAClC7C,EAAOA,EAAM1G,KAAKwK,KAAK3D,EAAK2C,IAAQ,EACpC9C,EAAOA,EAAM1G,KAAKwK,KAAK1D,EAAKyC,GAAQ,EACpC7E,EAAMA,EAAK1E,KAAKwK,KAAK1D,EAAK0C,IAAQ,EAClC,IAAIqB,IAAQxO,EAAI0G,EAAM,KAAa,KAAN2D,IAAiB,IAAO,EACrDrK,GAAOqI,GAAMgC,IAAQ,IAAO,IAAMmE,KAAO,IAAO,EAChDA,IAAM,SAEN9H,EAAK/C,KAAKwK,KAAK5C,EAAKe,GACpBjC,EAAM1G,KAAKwK,KAAK5C,EAAKgB,GACrBlC,EAAOA,EAAM1G,KAAKwK,KAAK3C,EAAKc,GAAQ,EACpCjE,EAAK1E,KAAKwK,KAAK3C,EAAKe,GACpB7F,EAAMA,EAAK/C,KAAKwK,KAAK/C,EAAKqB,GAAQ,EAClCpC,EAAOA,EAAM1G,KAAKwK,KAAK/C,EAAKsB,GAAQ,EACpCrC,EAAOA,EAAM1G,KAAKwK,KAAK9C,EAAKoB,GAAQ,EACpCpE,EAAMA,EAAK1E,KAAKwK,KAAK9C,EAAKqB,GAAQ,EAClChG,EAAMA,EAAK/C,KAAKwK,KAAKlD,EAAK2B,GAAQ,EAClCvC,EAAOA,EAAM1G,KAAKwK,KAAKlD,EAAK4B,GAAQ,EACpCxC,EAAOA,EAAM1G,KAAKwK,KAAKjD,EAAK0B,GAAQ,EACpCvE,EAAMA,EAAK1E,KAAKwK,KAAKjD,EAAK2B,GAAQ,EAClCnG,EAAMA,EAAK/C,KAAKwK,KAAKrD,EAAKiC,GAAQ,EAClC1C,EAAOA,EAAM1G,KAAKwK,KAAKrD,EAAKkC,GAAQ,EACpC3C,EAAOA,EAAM1G,KAAKwK,KAAKpD,EAAKgC,GAAQ,EACpC1E,EAAMA,EAAK1E,KAAKwK,KAAKpD,EAAKiC,GAAQ,EAClCtG,EAAMA,EAAK/C,KAAKwK,KAAKxD,EAAKuC,GAAQ,EAClC7C,EAAOA,EAAM1G,KAAKwK,KAAKxD,EAAKwC,IAAQ,EACpC9C,EAAOA,EAAM1G,KAAKwK,KAAKvD,EAAKsC,GAAQ,EACpC7E,EAAMA,EAAK1E,KAAKwK,KAAKvD,EAAKuC,IAAQ,EAClCzG,EAAMA,EAAK/C,KAAKwK,KAAK3D,EAAK6C,IAAQ,EAClChD,EAAOA,EAAM1G,KAAKwK,KAAK3D,EAAK8C,IAAQ,EACpCjD,EAAOA,EAAM1G,KAAKwK,KAAK1D,EAAK4C,IAAQ,EACpChF,EAAMA,EAAK1E,KAAKwK,KAAK1D,EAAK6C,IAAQ,EAClC,IAAImB,IAAQzO,EAAI0G,EAAM,KAAa,KAAN2D,IAAiB,IAAO,EACrDrK,GAAOqI,GAAMgC,IAAQ,IAAO,IAAMoE,KAAO,IAAO,EAChDA,IAAM,SAEN/H,EAAK/C,KAAKwK,KAAKzC,EAAKY,GACpBjC,EAAM1G,KAAKwK,KAAKzC,EAAKa,GACrBlC,EAAOA,EAAM1G,KAAKwK,KAAKxC,EAAKW,GAAQ,EACpCjE,EAAK1E,KAAKwK,KAAKxC,EAAKY,GACpB7F,EAAMA,EAAK/C,KAAKwK,KAAK5C,EAAKkB,GAAQ,EAClCpC,EAAOA,EAAM1G,KAAKwK,KAAK5C,EAAKmB,GAAQ,EACpCrC,EAAOA,EAAM1G,KAAKwK,KAAK3C,EAAKiB,GAAQ,EACpCpE,EAAMA,EAAK1E,KAAKwK,KAAK3C,EAAKkB,GAAQ,EAClChG,EAAMA,EAAK/C,KAAKwK,KAAK/C,EAAKwB,GAAQ,EAClCvC,EAAOA,EAAM1G,KAAKwK,KAAK/C,EAAKyB,GAAQ,EACpCxC,EAAOA,EAAM1G,KAAKwK,KAAK9C,EAAKuB,GAAQ,EACpCvE,EAAMA,EAAK1E,KAAKwK,KAAK9C,EAAKwB,GAAQ,EAClCnG,EAAMA,EAAK/C,KAAKwK,KAAKlD,EAAK8B,GAAQ,EAClC1C,EAAOA,EAAM1G,KAAKwK,KAAKlD,EAAK+B,GAAQ,EACpC3C,EAAOA,EAAM1G,KAAKwK,KAAKjD,EAAK6B,GAAQ,EACpC1E,EAAMA,EAAK1E,KAAKwK,KAAKjD,EAAK8B,GAAQ,EAClCtG,EAAMA,EAAK/C,KAAKwK,KAAKrD,EAAKoC,GAAQ,EAClC7C,EAAOA,EAAM1G,KAAKwK,KAAKrD,EAAKqC,IAAQ,EACpC9C,EAAOA,EAAM1G,KAAKwK,KAAKpD,EAAKmC,GAAQ,EACpC7E,EAAMA,EAAK1E,KAAKwK,KAAKpD,EAAKoC,IAAQ,EAClCzG,EAAMA,EAAK/C,KAAKwK,KAAKxD,EAAK0C,IAAQ,EAClChD,EAAOA,EAAM1G,KAAKwK,KAAKxD,EAAK2C,IAAQ,EACpCjD,EAAOA,EAAM1G,KAAKwK,KAAKvD,EAAKyC,IAAQ,EACpChF,EAAMA,EAAK1E,KAAKwK,KAAKvD,EAAK0C,IAAQ,EAClC5G,EAAMA,EAAK/C,KAAKwK,KAAK3D,EAAKgD,IAAQ,EAClCnD,EAAOA,EAAM1G,KAAKwK,KAAK3D,EAAKiD,IAAQ,EACpCpD,EAAOA,EAAM1G,KAAKwK,KAAK1D,EAAK+C,IAAQ,EACpCnF,EAAMA,EAAK1E,KAAKwK,KAAK1D,EAAKgD,IAAQ,EAClC,IAAIiB,IAAQ1O,EAAI0G,EAAM,KAAa,KAAN2D,IAAiB,IAAO,EACrDrK,GAAOqI,GAAMgC,IAAQ,IAAO,IAAMqE,KAAO,IAAO,EAChDA,IAAM,SAENhI,EAAK/C,KAAKwK,KAAKtC,EAAKS,GACpBjC,EAAM1G,KAAKwK,KAAKtC,EAAKU,GACrBlC,EAAOA,EAAM1G,KAAKwK,KAAKrC,EAAKQ,GAAQ,EACpCjE,EAAK1E,KAAKwK,KAAKrC,EAAKS,GACpB7F,EAAMA,EAAK/C,KAAKwK,KAAKzC,EAAKe,GAAQ,EAClCpC,EAAOA,EAAM1G,KAAKwK,KAAKzC,EAAKgB,GAAQ,EACpCrC,EAAOA,EAAM1G,KAAKwK,KAAKxC,EAAKc,GAAQ,EACpCpE,EAAMA,EAAK1E,KAAKwK,KAAKxC,EAAKe,GAAQ,EAClChG,EAAMA,EAAK/C,KAAKwK,KAAK5C,EAAKqB,GAAQ,EAClCvC,EAAOA,EAAM1G,KAAKwK,KAAK5C,EAAKsB,GAAQ,EACpCxC,EAAOA,EAAM1G,KAAKwK,KAAK3C,EAAKoB,GAAQ,EACpCvE,EAAMA,EAAK1E,KAAKwK,KAAK3C,EAAKqB,GAAQ,EAClCnG,EAAMA,EAAK/C,KAAKwK,KAAK/C,EAAK2B,GAAQ,EAClC1C,EAAOA,EAAM1G,KAAKwK,KAAK/C,EAAK4B,GAAQ,EACpC3C,EAAOA,EAAM1G,KAAKwK,KAAK9C,EAAK0B,GAAQ,EACpC1E,EAAMA,EAAK1E,KAAKwK,KAAK9C,EAAK2B,GAAQ,EAClCtG,EAAMA,EAAK/C,KAAKwK,KAAKlD,EAAKiC,GAAQ,EAClC7C,EAAOA,EAAM1G,KAAKwK,KAAKlD,EAAKkC,IAAQ,EACpC9C,EAAOA,EAAM1G,KAAKwK,KAAKjD,EAAKgC,GAAQ,EACpC7E,EAAMA,EAAK1E,KAAKwK,KAAKjD,EAAKiC,IAAQ,EAClCzG,EAAMA,EAAK/C,KAAKwK,KAAKrD,EAAKuC,IAAQ,EAClChD,EAAOA,EAAM1G,KAAKwK,KAAKrD,EAAKwC,IAAQ,EACpCjD,EAAOA,EAAM1G,KAAKwK,KAAKpD,EAAKsC,IAAQ,EACpChF,EAAMA,EAAK1E,KAAKwK,KAAKpD,EAAKuC,IAAQ,EAClC5G,EAAMA,EAAK/C,KAAKwK,KAAKxD,EAAK6C,IAAQ,EAClCnD,EAAOA,EAAM1G,KAAKwK,KAAKxD,EAAK8C,IAAQ,EACpCpD,EAAOA,EAAM1G,KAAKwK,KAAKvD,EAAK4C,IAAQ,EACpCnF,EAAMA,EAAK1E,KAAKwK,KAAKvD,EAAK6C,IAAQ,EAClC/G,EAAMA,EAAK/C,KAAKwK,KAAK3D,EAAKmD,IAAQ,EAClCtD,EAAOA,EAAM1G,KAAKwK,KAAK3D,EAAKoD,IAAQ,EACpCvD,EAAOA,EAAM1G,KAAKwK,KAAK1D,EAAKkD,IAAQ,EACpCtF,EAAMA,EAAK1E,KAAKwK,KAAK1D,EAAKmD,IAAQ,EAClC,IAAIe,IAAQ3O,EAAI0G,EAAM,KAAa,KAAN2D,IAAiB,IAAO,EACrDrK,GAAOqI,GAAMgC,IAAQ,IAAO,IAAMsE,KAAO,IAAO,EAChDA,IAAM,SAENjI,EAAK/C,KAAKwK,KAAKnC,EAAKM,GACpBjC,EAAM1G,KAAKwK,KAAKnC,EAAKO,GACrBlC,EAAOA,EAAM1G,KAAKwK,KAAKlC,EAAKK,GAAQ,EACpCjE,EAAK1E,KAAKwK,KAAKlC,EAAKM,GACpB7F,EAAMA,EAAK/C,KAAKwK,KAAKtC,EAAKY,GAAQ,EAClCpC,EAAOA,EAAM1G,KAAKwK,KAAKtC,EAAKa,GAAQ,EACpCrC,EAAOA,EAAM1G,KAAKwK,KAAKrC,EAAKW,GAAQ,EACpCpE,EAAMA,EAAK1E,KAAKwK,KAAKrC,EAAKY,GAAQ,EAClChG,EAAMA,EAAK/C,KAAKwK,KAAKzC,EAAKkB,GAAQ,EAClCvC,EAAOA,EAAM1G,KAAKwK,KAAKzC,EAAKmB,GAAQ,EACpCxC,EAAOA,EAAM1G,KAAKwK,KAAKxC,EAAKiB,GAAQ,EACpCvE,EAAMA,EAAK1E,KAAKwK,KAAKxC,EAAKkB,GAAQ,EAClCnG,EAAMA,EAAK/C,KAAKwK,KAAK5C,EAAKwB,GAAQ,EAClC1C,EAAOA,EAAM1G,KAAKwK,KAAK5C,EAAKyB,GAAQ,EACpC3C,EAAOA,EAAM1G,KAAKwK,KAAK3C,EAAKuB,GAAQ,EACpC1E,EAAMA,EAAK1E,KAAKwK,KAAK3C,EAAKwB,GAAQ,EAClCtG,EAAMA,EAAK/C,KAAKwK,KAAK/C,EAAK8B,GAAQ,EAClC7C,EAAOA,EAAM1G,KAAKwK,KAAK/C,EAAK+B,IAAQ,EACpC9C,EAAOA,EAAM1G,KAAKwK,KAAK9C,EAAK6B,GAAQ,EACpC7E,EAAMA,EAAK1E,KAAKwK,KAAK9C,EAAK8B,IAAQ,EAClCzG,EAAMA,EAAK/C,KAAKwK,KAAKlD,EAAKoC,IAAQ,EAClChD,EAAOA,EAAM1G,KAAKwK,KAAKlD,EAAKqC,IAAQ,EACpCjD,EAAOA,EAAM1G,KAAKwK,KAAKjD,EAAKmC,IAAQ,EACpChF,EAAMA,EAAK1E,KAAKwK,KAAKjD,EAAKoC,IAAQ,EAClC5G,EAAMA,EAAK/C,KAAKwK,KAAKrD,EAAK0C,IAAQ,EAClCnD,EAAOA,EAAM1G,KAAKwK,KAAKrD,EAAK2C,IAAQ,EACpCpD,EAAOA,EAAM1G,KAAKwK,KAAKpD,EAAKyC,IAAQ,EACpCnF,EAAMA,EAAK1E,KAAKwK,KAAKpD,EAAK0C,IAAQ,EAClC/G,EAAMA,EAAK/C,KAAKwK,KAAKxD,EAAKgD,IAAQ,EAClCtD,EAAOA,EAAM1G,KAAKwK,KAAKxD,EAAKiD,IAAQ,EACpCvD,EAAOA,EAAM1G,KAAKwK,KAAKvD,EAAK+C,IAAQ,EACpCtF,EAAMA,EAAK1E,KAAKwK,KAAKvD,EAAKgD,IAAQ,EAClClH,EAAMA,EAAK/C,KAAKwK,KAAK3D,EAAKsD,IAAQ,EAClCzD,EAAOA,EAAM1G,KAAKwK,KAAK3D,EAAKuD,IAAQ,EACpC1D,EAAOA,EAAM1G,KAAKwK,KAAK1D,EAAKqD,IAAQ,EACpCzF,EAAMA,EAAK1E,KAAKwK,KAAK1D,EAAKsD,IAAQ,EAClC,IAAIa,IAAQ5O,EAAI0G,EAAM,KAAa,KAAN2D,IAAiB,IAAO,EACrDrK,GAAOqI,GAAMgC,IAAQ,IAAO,IAAMuE,KAAO,IAAO,EAChDA,IAAM,SAENlI,EAAK/C,KAAKwK,KAAKhC,EAAKG,GACpBjC,EAAM1G,KAAKwK,KAAKhC,EAAKI,GACrBlC,EAAOA,EAAM1G,KAAKwK,KAAK/B,EAAKE,GAAQ,EACpCjE,EAAK1E,KAAKwK,KAAK/B,EAAKG,GACpB7F,EAAMA,EAAK/C,KAAKwK,KAAKnC,EAAKS,GAAQ,EAClCpC,EAAOA,EAAM1G,KAAKwK,KAAKnC,EAAKU,GAAQ,EACpCrC,EAAOA,EAAM1G,KAAKwK,KAAKlC,EAAKQ,GAAQ,EACpCpE,EAAMA,EAAK1E,KAAKwK,KAAKlC,EAAKS,GAAQ,EAClChG,EAAMA,EAAK/C,KAAKwK,KAAKtC,EAAKe,GAAQ,EAClCvC,EAAOA,EAAM1G,KAAKwK,KAAKtC,EAAKgB,GAAQ,EACpCxC,EAAOA,EAAM1G,KAAKwK,KAAKrC,EAAKc,GAAQ,EACpCvE,EAAMA,EAAK1E,KAAKwK,KAAKrC,EAAKe,GAAQ,EAClCnG,EAAMA,EAAK/C,KAAKwK,KAAKzC,EAAKqB,GAAQ,EAClC1C,EAAOA,EAAM1G,KAAKwK,KAAKzC,EAAKsB,GAAQ,EACpC3C,EAAOA,EAAM1G,KAAKwK,KAAKxC,EAAKoB,GAAQ,EACpC1E,EAAMA,EAAK1E,KAAKwK,KAAKxC,EAAKqB,GAAQ,EAClCtG,EAAMA,EAAK/C,KAAKwK,KAAK5C,EAAK2B,GAAQ,EAClC7C,EAAOA,EAAM1G,KAAKwK,KAAK5C,EAAK4B,IAAQ,EACpC9C,EAAOA,EAAM1G,KAAKwK,KAAK3C,EAAK0B,GAAQ,EACpC7E,EAAMA,EAAK1E,KAAKwK,KAAK3C,EAAK2B,IAAQ,EAClCzG,EAAMA,EAAK/C,KAAKwK,KAAK/C,EAAKiC,IAAQ,EAClChD,EAAOA,EAAM1G,KAAKwK,KAAK/C,EAAKkC,IAAQ,EACpCjD,EAAOA,EAAM1G,KAAKwK,KAAK9C,EAAKgC,IAAQ,EACpChF,EAAMA,EAAK1E,KAAKwK,KAAK9C,EAAKiC,IAAQ,EAClC5G,EAAMA,EAAK/C,KAAKwK,KAAKlD,EAAKuC,IAAQ,EAClCnD,EAAOA,EAAM1G,KAAKwK,KAAKlD,EAAKwC,IAAQ,EACpCpD,EAAOA,EAAM1G,KAAKwK,KAAKjD,EAAKsC,IAAQ,EACpCnF,EAAMA,EAAK1E,KAAKwK,KAAKjD,EAAKuC,IAAQ,EAClC/G,EAAMA,EAAK/C,KAAKwK,KAAKrD,EAAK6C,IAAQ,EAClCtD,EAAOA,EAAM1G,KAAKwK,KAAKrD,EAAK8C,IAAQ,EACpCvD,EAAOA,EAAM1G,KAAKwK,KAAKpD,EAAK4C,IAAQ,EACpCtF,EAAMA,EAAK1E,KAAKwK,KAAKpD,EAAK6C,IAAQ,EAClClH,EAAMA,EAAK/C,KAAKwK,KAAKxD,EAAKmD,IAAQ,EAClCzD,EAAOA,EAAM1G,KAAKwK,KAAKxD,EAAKoD,IAAQ,EACpC1D,EAAOA,EAAM1G,KAAKwK,KAAKvD,EAAKkD,IAAQ,EACpCzF,EAAMA,EAAK1E,KAAKwK,KAAKvD,EAAKmD,IAAQ,EAClCrH,EAAMA,EAAK/C,KAAKwK,KAAK3D,EAAKyD,IAAQ,EAClC5D,EAAOA,EAAM1G,KAAKwK,KAAK3D,EAAK0D,IAAQ,EACpC7D,EAAOA,EAAM1G,KAAKwK,KAAK1D,EAAKwD,IAAQ,EACpC5F,EAAMA,EAAK1E,KAAKwK,KAAK1D,EAAKyD,IAAQ,EAClC,IAAIW,IAAQ7O,EAAI0G,EAAM,KAAa,KAAN2D,IAAiB,IAAO,EACrDrK,GAAOqI,GAAMgC,IAAQ,IAAO,IAAMwE,KAAO,IAAO,EAChDA,IAAM,SAENnI,EAAK/C,KAAKwK,KAAKhC,EAAKM,GACpBpC,EAAM1G,KAAKwK,KAAKhC,EAAKO,GACrBrC,EAAOA,EAAM1G,KAAKwK,KAAK/B,EAAKK,GAAQ,EACpCpE,EAAK1E,KAAKwK,KAAK/B,EAAKM,GACpBhG,EAAMA,EAAK/C,KAAKwK,KAAKnC,EAAKY,GAAQ,EAClCvC,EAAOA,EAAM1G,KAAKwK,KAAKnC,EAAKa,GAAQ,EACpCxC,EAAOA,EAAM1G,KAAKwK,KAAKlC,EAAKW,GAAQ,EACpCvE,EAAMA,EAAK1E,KAAKwK,KAAKlC,EAAKY,GAAQ,EAClCnG,EAAMA,EAAK/C,KAAKwK,KAAKtC,EAAKkB,GAAQ,EAClC1C,EAAOA,EAAM1G,KAAKwK,KAAKtC,EAAKmB,GAAQ,EACpC3C,EAAOA,EAAM1G,KAAKwK,KAAKrC,EAAKiB,GAAQ,EACpC1E,EAAMA,EAAK1E,KAAKwK,KAAKrC,EAAKkB,GAAQ,EAClCtG,EAAMA,EAAK/C,KAAKwK,KAAKzC,EAAKwB,GAAQ,EAClC7C,EAAOA,EAAM1G,KAAKwK,KAAKzC,EAAKyB,IAAQ,EACpC9C,EAAOA,EAAM1G,KAAKwK,KAAKxC,EAAKuB,GAAQ,EACpC7E,EAAMA,EAAK1E,KAAKwK,KAAKxC,EAAKwB,IAAQ,EAClCzG,EAAMA,EAAK/C,KAAKwK,KAAK5C,EAAK8B,IAAQ,EAClChD,EAAOA,EAAM1G,KAAKwK,KAAK5C,EAAK+B,IAAQ,EACpCjD,EAAOA,EAAM1G,KAAKwK,KAAK3C,EAAK6B,IAAQ,EACpChF,EAAMA,EAAK1E,KAAKwK,KAAK3C,EAAK8B,IAAQ,EAClC5G,EAAMA,EAAK/C,KAAKwK,KAAK/C,EAAKoC,IAAQ,EAClCnD,EAAOA,EAAM1G,KAAKwK,KAAK/C,EAAKqC,IAAQ,EACpCpD,EAAOA,EAAM1G,KAAKwK,KAAK9C,EAAKmC,IAAQ,EACpCnF,EAAMA,EAAK1E,KAAKwK,KAAK9C,EAAKoC,IAAQ,EAClC/G,EAAMA,EAAK/C,KAAKwK,KAAKlD,EAAK0C,IAAQ,EAClCtD,EAAOA,EAAM1G,KAAKwK,KAAKlD,EAAK2C,IAAQ,EACpCvD,EAAOA,EAAM1G,KAAKwK,KAAKjD,EAAKyC,IAAQ,EACpCtF,EAAMA,EAAK1E,KAAKwK,KAAKjD,EAAK0C,IAAQ,EAClClH,EAAMA,EAAK/C,KAAKwK,KAAKrD,EAAKgD,IAAQ,EAClCzD,EAAOA,EAAM1G,KAAKwK,KAAKrD,EAAKiD,IAAQ,EACpC1D,EAAOA,EAAM1G,KAAKwK,KAAKpD,EAAK+C,IAAQ,EACpCzF,EAAMA,EAAK1E,KAAKwK,KAAKpD,EAAKgD,IAAQ,EAClCrH,EAAMA,EAAK/C,KAAKwK,KAAKxD,EAAKsD,IAAQ,EAClC5D,EAAOA,EAAM1G,KAAKwK,KAAKxD,EAAKuD,IAAQ,EACpC7D,EAAOA,EAAM1G,KAAKwK,KAAKvD,EAAKqD,IAAQ,EACpC5F,EAAMA,EAAK1E,KAAKwK,KAAKvD,EAAKsD,IAAQ,EAClC,IAAIY,IAAS9O,EAAI0G,EAAM,KAAa,KAAN2D,IAAiB,IAAO,EACtDrK,GAAOqI,GAAMgC,IAAQ,IAAO,IAAMyE,KAAQ,IAAO,EACjDA,IAAO,SAEPpI,EAAK/C,KAAKwK,KAAKhC,EAAKS,GACpBvC,EAAM1G,KAAKwK,KAAKhC,EAAKU,GACrBxC,EAAOA,EAAM1G,KAAKwK,KAAK/B,EAAKQ,GAAQ,EACpCvE,EAAK1E,KAAKwK,KAAK/B,EAAKS,GACpBnG,EAAMA,EAAK/C,KAAKwK,KAAKnC,EAAKe,GAAQ,EAClC1C,EAAOA,EAAM1G,KAAKwK,KAAKnC,EAAKgB,GAAQ,EACpC3C,EAAOA,EAAM1G,KAAKwK,KAAKlC,EAAKc,GAAQ,EACpC1E,EAAMA,EAAK1E,KAAKwK,KAAKlC,EAAKe,GAAQ,EAClCtG,EAAMA,EAAK/C,KAAKwK,KAAKtC,EAAKqB,GAAQ,EAClC7C,EAAOA,EAAM1G,KAAKwK,KAAKtC,EAAKsB,IAAQ,EACpC9C,EAAOA,EAAM1G,KAAKwK,KAAKrC,EAAKoB,GAAQ,EACpC7E,EAAMA,EAAK1E,KAAKwK,KAAKrC,EAAKqB,IAAQ,EAClCzG,EAAMA,EAAK/C,KAAKwK,KAAKzC,EAAK2B,IAAQ,EAClChD,EAAOA,EAAM1G,KAAKwK,KAAKzC,EAAK4B,IAAQ,EACpCjD,EAAOA,EAAM1G,KAAKwK,KAAKxC,EAAK0B,IAAQ,EACpChF,EAAMA,EAAK1E,KAAKwK,KAAKxC,EAAK2B,IAAQ,EAClC5G,EAAMA,EAAK/C,KAAKwK,KAAK5C,EAAKiC,IAAQ,EAClCnD,EAAOA,EAAM1G,KAAKwK,KAAK5C,EAAKkC,IAAQ,EACpCpD,EAAOA,EAAM1G,KAAKwK,KAAK3C,EAAKgC,IAAQ,EACpCnF,EAAMA,EAAK1E,KAAKwK,KAAK3C,EAAKiC,IAAQ,EAClC/G,EAAMA,EAAK/C,KAAKwK,KAAK/C,EAAKuC,IAAQ,EAClCtD,EAAOA,EAAM1G,KAAKwK,KAAK/C,EAAKwC,IAAQ,EACpCvD,EAAOA,EAAM1G,KAAKwK,KAAK9C,EAAKsC,IAAQ,EACpCtF,EAAMA,EAAK1E,KAAKwK,KAAK9C,EAAKuC,IAAQ,EAClClH,EAAMA,EAAK/C,KAAKwK,KAAKlD,EAAK6C,IAAQ,EAClCzD,EAAOA,EAAM1G,KAAKwK,KAAKlD,EAAK8C,IAAQ,EACpC1D,EAAOA,EAAM1G,KAAKwK,KAAKjD,EAAK4C,IAAQ,EACpCzF,EAAMA,EAAK1E,KAAKwK,KAAKjD,EAAK6C,IAAQ,EAClCrH,EAAMA,EAAK/C,KAAKwK,KAAKrD,EAAKmD,IAAQ,EAClC5D,EAAOA,EAAM1G,KAAKwK,KAAKrD,EAAKoD,IAAQ,EACpC7D,EAAOA,EAAM1G,KAAKwK,KAAKpD,EAAKkD,IAAQ,EACpC5F,EAAMA,EAAK1E,KAAKwK,KAAKpD,EAAKmD,IAAQ,EAClC,IAAIa,IAAS/O,EAAI0G,EAAM,KAAa,KAAN2D,IAAiB,IAAO,EACtDrK,GAAOqI,GAAMgC,IAAQ,IAAO,IAAM0E,KAAQ,IAAO,EACjDA,IAAO,SAEPrI,EAAK/C,KAAKwK,KAAKhC,EAAKY,GACpB1C,EAAM1G,KAAKwK,KAAKhC,EAAKa,GACrB3C,EAAOA,EAAM1G,KAAKwK,KAAK/B,EAAKW,GAAQ,EACpC1E,EAAK1E,KAAKwK,KAAK/B,EAAKY,GACpBtG,EAAMA,EAAK/C,KAAKwK,KAAKnC,EAAKkB,GAAQ,EAClC7C,EAAOA,EAAM1G,KAAKwK,KAAKnC,EAAKmB,IAAQ,EACpC9C,EAAOA,EAAM1G,KAAKwK,KAAKlC,EAAKiB,GAAQ,EACpC7E,EAAMA,EAAK1E,KAAKwK,KAAKlC,EAAKkB,IAAQ,EAClCzG,EAAMA,EAAK/C,KAAKwK,KAAKtC,EAAKwB,IAAQ,EAClChD,EAAOA,EAAM1G,KAAKwK,KAAKtC,EAAKyB,IAAQ,EACpCjD,EAAOA,EAAM1G,KAAKwK,KAAKrC,EAAKuB,IAAQ,EACpChF,EAAMA,EAAK1E,KAAKwK,KAAKrC,EAAKwB,IAAQ,EAClC5G,EAAMA,EAAK/C,KAAKwK,KAAKzC,EAAK8B,IAAQ,EAClCnD,EAAOA,EAAM1G,KAAKwK,KAAKzC,EAAK+B,IAAQ,EACpCpD,EAAOA,EAAM1G,KAAKwK,KAAKxC,EAAK6B,IAAQ,EACpCnF,EAAMA,EAAK1E,KAAKwK,KAAKxC,EAAK8B,IAAQ,EAClC/G,EAAMA,EAAK/C,KAAKwK,KAAK5C,EAAKoC,IAAQ,EAClCtD,EAAOA,EAAM1G,KAAKwK,KAAK5C,EAAKqC,IAAQ,EACpCvD,EAAOA,EAAM1G,KAAKwK,KAAK3C,EAAKmC,IAAQ,EACpCtF,EAAMA,EAAK1E,KAAKwK,KAAK3C,EAAKoC,IAAQ,EAClClH,EAAMA,EAAK/C,KAAKwK,KAAK/C,EAAK0C,IAAQ,EAClCzD,EAAOA,EAAM1G,KAAKwK,KAAK/C,EAAK2C,IAAQ,EACpC1D,EAAOA,EAAM1G,KAAKwK,KAAK9C,EAAKyC,IAAQ,EACpCzF,EAAMA,EAAK1E,KAAKwK,KAAK9C,EAAK0C,IAAQ,EAClCrH,EAAMA,EAAK/C,KAAKwK,KAAKlD,EAAKgD,IAAQ,EAClC5D,EAAOA,EAAM1G,KAAKwK,KAAKlD,EAAKiD,IAAQ,EACpC7D,EAAOA,EAAM1G,KAAKwK,KAAKjD,EAAK+C,IAAQ,EACpC5F,EAAMA,EAAK1E,KAAKwK,KAAKjD,EAAKgD,IAAQ,EAClC,IAAIc,IAAShP,EAAI0G,EAAM,KAAa,KAAN2D,IAAiB,IAAO,EACtDrK,GAAOqI,GAAMgC,IAAQ,IAAO,IAAM2E,KAAQ,IAAO,EACjDA,IAAO,SAEPtI,EAAK/C,KAAKwK,KAAKhC,EAAKe,GACpB7C,EAAM1G,KAAKwK,KAAKhC,EAAKgB,IACrB9C,EAAOA,EAAM1G,KAAKwK,KAAK/B,EAAKc,GAAQ,EACpC7E,EAAK1E,KAAKwK,KAAK/B,EAAKe,IACpBzG,EAAMA,EAAK/C,KAAKwK,KAAKnC,EAAKqB,IAAQ,EAClChD,EAAOA,EAAM1G,KAAKwK,KAAKnC,EAAKsB,IAAQ,EACpCjD,EAAOA,EAAM1G,KAAKwK,KAAKlC,EAAKoB,IAAQ,EACpChF,EAAMA,EAAK1E,KAAKwK,KAAKlC,EAAKqB,IAAQ,EAClC5G,EAAMA,EAAK/C,KAAKwK,KAAKtC,EAAK2B,IAAQ,EAClCnD,EAAOA,EAAM1G,KAAKwK,KAAKtC,EAAK4B,IAAQ,EACpCpD,EAAOA,EAAM1G,KAAKwK,KAAKrC,EAAK0B,IAAQ,EACpCnF,EAAMA,EAAK1E,KAAKwK,KAAKrC,EAAK2B,IAAQ,EAClC/G,EAAMA,EAAK/C,KAAKwK,KAAKzC,EAAKiC,IAAQ,EAClCtD,EAAOA,EAAM1G,KAAKwK,KAAKzC,EAAKkC,IAAQ,EACpCvD,EAAOA,EAAM1G,KAAKwK,KAAKxC,EAAKgC,IAAQ,EACpCtF,EAAMA,EAAK1E,KAAKwK,KAAKxC,EAAKiC,IAAQ,EAClClH,EAAMA,EAAK/C,KAAKwK,KAAK5C,EAAKuC,IAAQ,EAClCzD,EAAOA,EAAM1G,KAAKwK,KAAK5C,EAAKwC,IAAQ,EACpC1D,EAAOA,EAAM1G,KAAKwK,KAAK3C,EAAKsC,IAAQ,EACpCzF,EAAMA,EAAK1E,KAAKwK,KAAK3C,EAAKuC,IAAQ,EAClCrH,EAAMA,EAAK/C,KAAKwK,KAAK/C,EAAK6C,IAAQ,EAClC5D,EAAOA,EAAM1G,KAAKwK,KAAK/C,EAAK8C,IAAQ,EACpC7D,EAAOA,EAAM1G,KAAKwK,KAAK9C,EAAK4C,IAAQ,EACpC5F,EAAMA,EAAK1E,KAAKwK,KAAK9C,EAAK6C,IAAQ,EAClC,IAAIe,IAASjP,EAAI0G,EAAM,KAAa,KAAN2D,IAAiB,IAAO,EACtDrK,GAAOqI,GAAMgC,IAAQ,IAAO,IAAM4E,KAAQ,IAAO,EACjDA,IAAO,SAEPvI,EAAK/C,KAAKwK,KAAKhC,EAAKkB,IACpBhD,EAAM1G,KAAKwK,KAAKhC,EAAKmB,IACrBjD,EAAOA,EAAM1G,KAAKwK,KAAK/B,EAAKiB,IAAQ,EACpChF,EAAK1E,KAAKwK,KAAK/B,EAAKkB,IACpB5G,EAAMA,EAAK/C,KAAKwK,KAAKnC,EAAKwB,IAAQ,EAClCnD,EAAOA,EAAM1G,KAAKwK,KAAKnC,EAAKyB,IAAQ,EACpCpD,EAAOA,EAAM1G,KAAKwK,KAAKlC,EAAKuB,IAAQ,EACpCnF,EAAMA,EAAK1E,KAAKwK,KAAKlC,EAAKwB,IAAQ,EAClC/G,EAAMA,EAAK/C,KAAKwK,KAAKtC,EAAK8B,IAAQ,EAClCtD,EAAOA,EAAM1G,KAAKwK,KAAKtC,EAAK+B,IAAQ,EACpCvD,EAAOA,EAAM1G,KAAKwK,KAAKrC,EAAK6B,IAAQ,EACpCtF,EAAMA,EAAK1E,KAAKwK,KAAKrC,EAAK8B,IAAQ,EAClClH,EAAMA,EAAK/C,KAAKwK,KAAKzC,EAAKoC,IAAQ,EAClCzD,EAAOA,EAAM1G,KAAKwK,KAAKzC,EAAKqC,IAAQ,EACpC1D,EAAOA,EAAM1G,KAAKwK,KAAKxC,EAAKmC,IAAQ,EACpCzF,EAAMA,EAAK1E,KAAKwK,KAAKxC,EAAKoC,IAAQ,EAClCrH,EAAMA,EAAK/C,KAAKwK,KAAK5C,EAAK0C,IAAQ,EAClC5D,EAAOA,EAAM1G,KAAKwK,KAAK5C,EAAK2C,IAAQ,EACpC7D,EAAOA,EAAM1G,KAAKwK,KAAK3C,EAAKyC,IAAQ,EACpC5F,EAAMA,EAAK1E,KAAKwK,KAAK3C,EAAK0C,IAAQ,EAClC,IAAIgB,IAASlP,EAAI0G,EAAM,KAAa,KAAN2D,IAAiB,IAAO,EACtDrK,GAAOqI,GAAMgC,IAAQ,IAAO,IAAM6E,KAAQ,IAAO,EACjDA,IAAO,SAEPxI,EAAK/C,KAAKwK,KAAKhC,EAAKqB,IACpBnD,EAAM1G,KAAKwK,KAAKhC,EAAKsB,IACrBpD,EAAOA,EAAM1G,KAAKwK,KAAK/B,EAAKoB,IAAQ,EACpCnF,EAAK1E,KAAKwK,KAAK/B,EAAKqB,IACpB/G,EAAMA,EAAK/C,KAAKwK,KAAKnC,EAAK2B,IAAQ,EAClCtD,EAAOA,EAAM1G,KAAKwK,KAAKnC,EAAK4B,IAAQ,EACpCvD,EAAOA,EAAM1G,KAAKwK,KAAKlC,EAAK0B,IAAQ,EACpCtF,EAAMA,EAAK1E,KAAKwK,KAAKlC,EAAK2B,IAAQ,EAClClH,EAAMA,EAAK/C,KAAKwK,KAAKtC,EAAKiC,IAAQ,EAClCzD,EAAOA,EAAM1G,KAAKwK,KAAKtC,EAAKkC,IAAQ,EACpC1D,EAAOA,EAAM1G,KAAKwK,KAAKrC,EAAKgC,IAAQ,EACpCzF,EAAMA,EAAK1E,KAAKwK,KAAKrC,EAAKiC,IAAQ,EAClCrH,EAAMA,EAAK/C,KAAKwK,KAAKzC,EAAKuC,IAAQ,EAClC5D,EAAOA,EAAM1G,KAAKwK,KAAKzC,EAAKwC,IAAQ,EACpC7D,EAAOA,EAAM1G,KAAKwK,KAAKxC,EAAKsC,IAAQ,EACpC5F,EAAMA,EAAK1E,KAAKwK,KAAKxC,EAAKuC,IAAQ,EAClC,IAAIiB,IAASnP,EAAI0G,EAAM,KAAa,KAAN2D,IAAiB,IAAO,EACtDrK,GAAOqI,GAAMgC,IAAQ,IAAO,IAAM8E,KAAQ,IAAO,EACjDA,IAAO,SAEPzI,EAAK/C,KAAKwK,KAAKhC,EAAKwB,IACpBtD,EAAM1G,KAAKwK,KAAKhC,EAAKyB,IACrBvD,EAAOA,EAAM1G,KAAKwK,KAAK/B,EAAKuB,IAAQ,EACpCtF,EAAK1E,KAAKwK,KAAK/B,EAAKwB,IACpBlH,EAAMA,EAAK/C,KAAKwK,KAAKnC,EAAK8B,IAAQ,EAClCzD,EAAOA,EAAM1G,KAAKwK,KAAKnC,EAAK+B,IAAQ,EACpC1D,EAAOA,EAAM1G,KAAKwK,KAAKlC,EAAK6B,IAAQ,EACpCzF,EAAMA,EAAK1E,KAAKwK,KAAKlC,EAAK8B,IAAQ,EAClCrH,EAAMA,EAAK/C,KAAKwK,KAAKtC,EAAKoC,IAAQ,EAClC5D,EAAOA,EAAM1G,KAAKwK,KAAKtC,EAAKqC,IAAQ,EACpC7D,EAAOA,EAAM1G,KAAKwK,KAAKrC,EAAKmC,IAAQ,EACpC5F,EAAMA,EAAK1E,KAAKwK,KAAKrC,EAAKoC,IAAQ,EAClC,IAAIkB,IAASpP,EAAI0G,EAAM,KAAa,KAAN2D,IAAiB,IAAO,EACtDrK,GAAOqI,GAAMgC,IAAQ,IAAO,IAAM+E,KAAQ,IAAO,EACjDA,IAAO,SAEP1I,EAAK/C,KAAKwK,KAAKhC,EAAK2B,IACpBzD,EAAM1G,KAAKwK,KAAKhC,EAAK4B,IACrB1D,EAAOA,EAAM1G,KAAKwK,KAAK/B,EAAK0B,IAAQ,EACpCzF,EAAK1E,KAAKwK,KAAK/B,EAAK2B,IACpBrH,EAAMA,EAAK/C,KAAKwK,KAAKnC,EAAKiC,IAAQ,EAClC5D,EAAOA,EAAM1G,KAAKwK,KAAKnC,EAAKkC,IAAQ,EACpC7D,EAAOA,EAAM1G,KAAKwK,KAAKlC,EAAKgC,IAAQ,EACpC5F,EAAMA,EAAK1E,KAAKwK,KAAKlC,EAAKiC,IAAQ,EAClC,IAAImB,IAASrP,EAAI0G,EAAM,KAAa,KAAN2D,IAAiB,IAAO,EACtDrK,GAAOqI,GAAMgC,IAAQ,IAAO,IAAMgF,KAAQ,IAAO,EACjDA,IAAO,SAEP3I,EAAK/C,KAAKwK,KAAKhC,EAAK8B,IACpB5D,EAAM1G,KAAKwK,KAAKhC,EAAK+B,IACrB7D,EAAOA,EAAM1G,KAAKwK,KAAK/B,EAAK6B,IAAQ,EACpC5F,EAAK1E,KAAKwK,KAAK/B,EAAK8B,IACpB,IAAIoB,IAAStP,EAAI0G,EAAM,KAAa,KAAN2D,IAAiB,IAAO,EA0BtD,OAzBArK,GAAOqI,GAAMgC,IAAQ,IAAO,IAAMiF,KAAQ,IAAO,EACjDA,IAAO,SACPhF,EAAE,GAAK8D,GACP9D,EAAE,GAAK+D,GACP/D,EAAE,GAAKgE,GACPhE,EAAE,GAAKiE,GACPjE,EAAE,GAAKkE,GACPlE,EAAE,GAAKmE,GACPnE,EAAE,GAAKoE,GACPpE,EAAE,GAAKqE,GACPrE,EAAE,GAAKsE,GACPtE,EAAE,GAAKuE,GACPvE,EAAE,IAAMwE,GACRxE,EAAE,IAAMyE,GACRzE,EAAE,IAAM0E,GACR1E,EAAE,IAAM2E,GACR3E,EAAE,IAAM4E,GACR5E,EAAE,IAAM6E,GACR7E,EAAE,IAAM8E,GACR9E,EAAE,IAAM+E,GACR/E,EAAE,IAAMgF,GACE,IAANtP,IACFsK,EAAE,IAAMtK,EACRuG,EAAIzI,UAECyI,GAQT,SAASgJ,EAAUjJ,EAAMvC,EAAKwC,GAC5BA,EAAIvD,SAAWe,EAAIf,SAAWsD,EAAKtD,SACnCuD,EAAIzI,OAASwI,EAAKxI,OAASiG,EAAIjG,OAI/B,IAFA,IAAI6I,EAAQ,EACR6I,EAAU,EACL5I,EAAI,EAAGA,EAAIL,EAAIzI,OAAS,EAAG8I,IAAK,CAGvC,IAAIC,EAAS2I,EACbA,EAAU,EAGV,IAFA,IAAI1I,EAAgB,SAARH,EACRI,EAAOpD,KAAKC,IAAIgD,EAAG7C,EAAIjG,OAAS,GAC3B8G,EAAIjB,KAAKM,IAAI,EAAG2C,EAAIN,EAAKxI,OAAS,GAAI8G,GAAKmC,EAAMnC,IAAK,CAC7D,IAAIvH,EAAIuJ,EAAIhC,EACR4B,EAAoB,EAAhBF,EAAKrD,MAAM5F,GACfoJ,EAAmB,EAAf1C,EAAId,MAAM2B,GACdnB,EAAI+C,EAAIC,EAERC,EAAS,SAAJjD,EACToD,EAAUA,GAAWpD,EAAI,SAAa,GAAM,EAC5CiD,EAAMA,EAAKI,EAAS,EACpBA,EAAa,SAALJ,EACRG,EAAUA,GAAUH,IAAO,IAAO,EAElC8I,GAAW3I,IAAW,GACtBA,GAAU,SAEZN,EAAItD,MAAM2D,GAAKE,EACfH,EAAQE,EACRA,EAAS2I,EAQX,OANc,IAAV7I,EACFJ,EAAItD,MAAM2D,GAAKD,EAEfJ,EAAIzI,SAGCyI,EAAI9B,QAGb,SAASgL,EAAYnJ,EAAMvC,EAAKwC,GAC9B,IAAImJ,EAAO,IAAIC,EACf,OAAOD,EAAKE,KAAKtJ,EAAMvC,EAAKwC,GAsB9B,SAASoJ,EAAME,EAAGC,GAChBtO,KAAKqO,EAAIA,EACTrO,KAAKsO,EAAIA,EAvENnM,KAAKwK,OACR/D,EAAc/D,GAiDhB1K,EAAGkG,UAAUkO,MAAQ,SAAgBhM,EAAKwC,GACxC,IAAIsB,EACAnE,EAAMlC,KAAK1D,OAASiG,EAAIjG,OAW5B,OATE+J,EADkB,KAAhBrG,KAAK1D,QAAgC,KAAfiG,EAAIjG,OACtBsM,EAAY5I,KAAMuC,EAAKwC,GACpB7C,EAAM,GACT2C,EAAW7E,KAAMuC,EAAKwC,GACnB7C,EAAM,KACT6L,EAAS/N,KAAMuC,EAAKwC,GAEpBkJ,EAAWjO,KAAMuC,EAAKwC,GAGvBsB,GAWT8H,EAAK9N,UAAUmO,QAAU,SAAkBC,GAGzC,IAFA,IAAI9H,EAAI,IAAIpK,MAAMkS,GACdpR,EAAIlD,EAAGkG,UAAUqG,WAAW+H,GAAK,EAC5B5S,EAAI,EAAGA,EAAI4S,EAAG5S,IACrB8K,EAAE9K,GAAKmE,KAAK0O,OAAO7S,EAAGwB,EAAGoR,GAG3B,OAAO9H,GAITwH,EAAK9N,UAAUqO,OAAS,SAAiBL,EAAGhR,EAAGoR,GAC7C,GAAU,IAANJ,GAAWA,IAAMI,EAAI,EAAG,OAAOJ,EAGnC,IADA,IAAIM,EAAK,EACA9S,EAAI,EAAGA,EAAIwB,EAAGxB,IACrB8S,IAAW,EAAJN,IAAWhR,EAAIxB,EAAI,EAC1BwS,IAAM,EAGR,OAAOM,GAKTR,EAAK9N,UAAUuO,QAAU,SAAkBC,EAAKC,EAAKC,EAAKC,EAAMC,EAAMR,GACpE,IAAK,IAAI5S,EAAI,EAAGA,EAAI4S,EAAG5S,IACrBmT,EAAKnT,GAAKiT,EAAID,EAAIhT,IAClBoT,EAAKpT,GAAKkT,EAAIF,EAAIhT,KAItBsS,EAAK9N,UAAU6O,UAAY,SAAoBJ,EAAKC,EAAKC,EAAMC,EAAMR,EAAGI,GACtE7O,KAAK4O,QAAQC,EAAKC,EAAKC,EAAKC,EAAMC,EAAMR,GAExC,IAAK,IAAIU,EAAI,EAAGA,EAAIV,EAAGU,IAAM,EAM3B,IALA,IAAI9R,EAAI8R,GAAK,EAETC,EAAQjN,KAAKkN,IAAI,EAAIlN,KAAKmN,GAAKjS,GAC/BkS,EAAQpN,KAAKqN,IAAI,EAAIrN,KAAKmN,GAAKjS,GAE1BoS,EAAI,EAAGA,EAAIhB,EAAGgB,GAAKpS,EAI1B,IAHA,IAAIqS,EAASN,EACTO,EAASJ,EAEJnM,EAAI,EAAGA,EAAI+L,EAAG/L,IAAK,CAC1B,IAAIwM,EAAKZ,EAAKS,EAAIrM,GACdyM,EAAKZ,EAAKQ,EAAIrM,GAEd0M,EAAKd,EAAKS,EAAIrM,EAAI+L,GAClBY,EAAKd,EAAKQ,EAAIrM,EAAI+L,GAElBa,EAAKN,EAASI,EAAKH,EAASI,EAEhCA,EAAKL,EAASK,EAAKJ,EAASG,EAC5BA,EAAKE,EAELhB,EAAKS,EAAIrM,GAAKwM,EAAKE,EACnBb,EAAKQ,EAAIrM,GAAKyM,EAAKE,EAEnBf,EAAKS,EAAIrM,EAAI+L,GAAKS,EAAKE,EACvBb,EAAKQ,EAAIrM,EAAI+L,GAAKU,EAAKE,EAGnB3M,IAAM/F,IACR2S,EAAKZ,EAAQM,EAASH,EAAQI,EAE9BA,EAASP,EAAQO,EAASJ,EAAQG,EAClCA,EAASM,KAOnB7B,EAAK9N,UAAU4P,YAAc,SAAsB/S,EAAGgT,GACpD,IAAIzB,EAAqB,EAAjBtM,KAAKM,IAAIyN,EAAGhT,GAChBiT,EAAU,EAAJ1B,EACN5S,EAAI,EACR,IAAK4S,EAAIA,EAAI,EAAI,EAAGA,EAAGA,KAAU,EAC/B5S,IAGF,OAAO,GAAKA,EAAI,EAAIsU,GAGtBhC,EAAK9N,UAAU+P,UAAY,SAAoBtB,EAAKC,EAAKN,GACvD,KAAIA,GAAK,GAET,IAAK,IAAI5S,EAAI,EAAGA,EAAI4S,EAAI,EAAG5S,IAAK,CAC9B,IAAI8K,EAAImI,EAAIjT,GAEZiT,EAAIjT,GAAKiT,EAAIL,EAAI5S,EAAI,GACrBiT,EAAIL,EAAI5S,EAAI,GAAK8K,EAEjBA,EAAIoI,EAAIlT,GAERkT,EAAIlT,IAAMkT,EAAIN,EAAI5S,EAAI,GACtBkT,EAAIN,EAAI5S,EAAI,IAAM8K,IAItBwH,EAAK9N,UAAUgQ,aAAe,SAAuBC,EAAI7B,GAEvD,IADA,IAAItJ,EAAQ,EACHtJ,EAAI,EAAGA,EAAI4S,EAAI,EAAG5S,IAAK,CAC9B,IAAIwH,EAAoC,KAAhClB,KAAKoO,MAAMD,EAAG,EAAIzU,EAAI,GAAK4S,GACjCtM,KAAKoO,MAAMD,EAAG,EAAIzU,GAAK4S,GACvBtJ,EAEFmL,EAAGzU,GAAS,SAAJwH,EAGN8B,EADE9B,EAAI,SACE,EAEAA,EAAI,SAAY,EAI5B,OAAOiN,GAGTnC,EAAK9N,UAAUmQ,WAAa,SAAqBF,EAAIpO,EAAK4M,EAAKL,GAE7D,IADA,IAAItJ,EAAQ,EACHtJ,EAAI,EAAGA,EAAIqG,EAAKrG,IACvBsJ,GAAyB,EAARmL,EAAGzU,GAEpBiT,EAAI,EAAIjT,GAAa,KAARsJ,EAAgBA,KAAkB,GAC/C2J,EAAI,EAAIjT,EAAI,GAAa,KAARsJ,EAAgBA,KAAkB,GAIrD,IAAKtJ,EAAI,EAAIqG,EAAKrG,EAAI4S,IAAK5S,EACzBiT,EAAIjT,GAAK,EAGXiF,EAAiB,IAAVqE,GACPrE,EAA6B,MAAb,KAARqE,KAGVgJ,EAAK9N,UAAUoQ,KAAO,SAAehC,GAEnC,IADA,IAAIiC,EAAK,IAAInU,MAAMkS,GACV5S,EAAI,EAAGA,EAAI4S,EAAG5S,IACrB6U,EAAG7U,GAAK,EAGV,OAAO6U,GAGTvC,EAAK9N,UAAU+N,KAAO,SAAeC,EAAGC,EAAGvJ,GACzC,IAAI0J,EAAI,EAAIzO,KAAKiQ,YAAY5B,EAAE/R,OAAQgS,EAAEhS,QAErCuS,EAAM7O,KAAKwO,QAAQC,GAEnBvU,EAAI8F,KAAKyQ,KAAKhC,GAEdK,EAAM,IAAIvS,MAAMkS,GAChBkC,EAAO,IAAIpU,MAAMkS,GACjBmC,EAAO,IAAIrU,MAAMkS,GAEjBoC,EAAO,IAAItU,MAAMkS,GACjBqC,EAAQ,IAAIvU,MAAMkS,GAClBsC,EAAQ,IAAIxU,MAAMkS,GAElBuC,EAAOjM,EAAItD,MACfuP,EAAK1U,OAASmS,EAEdzO,KAAKwQ,WAAWnC,EAAE5M,MAAO4M,EAAE/R,OAAQwS,EAAKL,GACxCzO,KAAKwQ,WAAWlC,EAAE7M,MAAO6M,EAAEhS,OAAQuU,EAAMpC,GAEzCzO,KAAKkP,UAAUJ,EAAK5U,EAAGyW,EAAMC,EAAMnC,EAAGI,GACtC7O,KAAKkP,UAAU2B,EAAM3W,EAAG4W,EAAOC,EAAOtC,EAAGI,GAEzC,IAAK,IAAIhT,EAAI,EAAGA,EAAI4S,EAAG5S,IAAK,CAC1B,IAAImU,EAAKW,EAAK9U,GAAKiV,EAAMjV,GAAK+U,EAAK/U,GAAKkV,EAAMlV,GAC9C+U,EAAK/U,GAAK8U,EAAK9U,GAAKkV,EAAMlV,GAAK+U,EAAK/U,GAAKiV,EAAMjV,GAC/C8U,EAAK9U,GAAKmU,EAUZ,OAPAhQ,KAAKoQ,UAAUO,EAAMC,EAAMnC,GAC3BzO,KAAKkP,UAAUyB,EAAMC,EAAMI,EAAM9W,EAAGuU,EAAGI,GACvC7O,KAAKoQ,UAAUY,EAAM9W,EAAGuU,GACxBzO,KAAKqQ,aAAaW,EAAMvC,GAExB1J,EAAIvD,SAAW6M,EAAE7M,SAAW8M,EAAE9M,SAC9BuD,EAAIzI,OAAS+R,EAAE/R,OAASgS,EAAEhS,OACnByI,EAAI9B,SAIb9I,EAAGkG,UAAUiC,IAAM,SAAcC,GAC/B,IAAIwC,EAAM,IAAI5K,EAAG,MAEjB,OADA4K,EAAItD,MAAQ,IAAIlF,MAAMyD,KAAK1D,OAASiG,EAAIjG,QACjC0D,KAAKuO,MAAMhM,EAAKwC,IAIzB5K,EAAGkG,UAAU4Q,KAAO,SAAe1O,GACjC,IAAIwC,EAAM,IAAI5K,EAAG,MAEjB,OADA4K,EAAItD,MAAQ,IAAIlF,MAAMyD,KAAK1D,OAASiG,EAAIjG,QACjC2R,EAAWjO,KAAMuC,EAAKwC,IAI/B5K,EAAGkG,UAAUsM,KAAO,SAAepK,GACjC,OAAOvC,KAAKiE,QAAQsK,MAAMhM,EAAKvC,OAGjC7F,EAAGkG,UAAUuD,MAAQ,SAAgBrB,GACnCzB,EAAsB,kBAARyB,GACdzB,EAAOyB,EAAM,UAIb,IADA,IAAI4C,EAAQ,EACHtJ,EAAI,EAAGA,EAAImE,KAAK1D,OAAQT,IAAK,CACpC,IAAIwH,GAAqB,EAAhBrD,KAAKyB,MAAM5F,IAAU0G,EAC1B2C,GAAU,SAAJ7B,IAA0B,SAAR8B,GAC5BA,IAAU,GACVA,GAAU9B,EAAI,SAAa,EAE3B8B,GAASD,IAAO,GAChBlF,KAAKyB,MAAM5F,GAAU,SAALqJ,EAQlB,OALc,IAAVC,IACFnF,KAAKyB,MAAM5F,GAAKsJ,EAChBnF,KAAK1D,UAGA0D,MAGT7F,EAAGkG,UAAU6Q,KAAO,SAAe3O,GACjC,OAAOvC,KAAKiE,QAAQL,MAAMrB,IAI5BpI,EAAGkG,UAAU8Q,IAAM,WACjB,OAAOnR,KAAKsC,IAAItC,OAIlB7F,EAAGkG,UAAU+Q,KAAO,WAClB,OAAOpR,KAAK2M,KAAK3M,KAAKiE,UAIxB9J,EAAGkG,UAAUyD,IAAM,SAAcvB,GAC/B,IAAIc,EAAIoB,EAAWlC,GACnB,GAAiB,IAAbc,EAAE/G,OAAc,OAAO,IAAInC,EAAG,GAIlC,IADA,IAAIkM,EAAMrG,KACDnE,EAAI,EAAGA,EAAIwH,EAAE/G,OAAQT,IAAKwK,EAAMA,EAAI8K,MAC3C,GAAa,IAAT9N,EAAExH,GAAU,MAGlB,KAAMA,EAAIwH,EAAE/G,OACV,IAAK,IAAIgK,EAAID,EAAI8K,MAAOtV,EAAIwH,EAAE/G,OAAQT,IAAKyK,EAAIA,EAAE6K,MAClC,IAAT9N,EAAExH,KAENwK,EAAMA,EAAI/D,IAAIgE,IAIlB,OAAOD,GAITlM,EAAGkG,UAAUgR,OAAS,SAAiBC,GACrCxQ,EAAuB,kBAATwQ,GAAqBA,GAAQ,GAC3C,IAGIzV,EAHAoG,EAAIqP,EAAO,GACXnC,GAAKmC,EAAOrP,GAAK,GACjBsP,EAAa,WAAe,GAAKtP,GAAQ,GAAKA,EAGlD,GAAU,IAANA,EAAS,CACX,IAAIkD,EAAQ,EAEZ,IAAKtJ,EAAI,EAAGA,EAAImE,KAAK1D,OAAQT,IAAK,CAChC,IAAI2V,EAAWxR,KAAKyB,MAAM5F,GAAK0V,EAC3B/S,GAAsB,EAAhBwB,KAAKyB,MAAM5F,IAAU2V,GAAavP,EAC5CjC,KAAKyB,MAAM5F,GAAK2C,EAAI2G,EACpBA,EAAQqM,IAAc,GAAKvP,EAGzBkD,IACFnF,KAAKyB,MAAM5F,GAAKsJ,EAChBnF,KAAK1D,UAIT,GAAU,IAAN6S,EAAS,CACX,IAAKtT,EAAImE,KAAK1D,OAAS,EAAGT,GAAK,EAAGA,IAChCmE,KAAKyB,MAAM5F,EAAIsT,GAAKnP,KAAKyB,MAAM5F,GAGjC,IAAKA,EAAI,EAAGA,EAAIsT,EAAGtT,IACjBmE,KAAKyB,MAAM5F,GAAK,EAGlBmE,KAAK1D,QAAU6S,EAGjB,OAAOnP,KAAKiD,SAGd9I,EAAGkG,UAAUoR,MAAQ,SAAgBH,GAGnC,OADAxQ,EAAyB,IAAlBd,KAAKwB,UACLxB,KAAKqR,OAAOC,IAMrBnX,EAAGkG,UAAUmG,OAAS,SAAiB8K,EAAMI,EAAMC,GAEjD,IAAIC,EADJ9Q,EAAuB,kBAATwQ,GAAqBA,GAAQ,GAGzCM,EADEF,GACGA,EAAQA,EAAO,IAAO,GAEvB,EAGN,IAAIzP,EAAIqP,EAAO,GACXnC,EAAIhN,KAAKC,KAAKkP,EAAOrP,GAAK,GAAIjC,KAAK1D,QACnCuV,EAAO,SAAc,WAAc5P,GAAMA,EACzC6P,EAAcH,EAMlB,GAJAC,GAAKzC,EACLyC,EAAIzP,KAAKM,IAAI,EAAGmP,GAGZE,EAAa,CACf,IAAK,IAAIjW,EAAI,EAAGA,EAAIsT,EAAGtT,IACrBiW,EAAYrQ,MAAM5F,GAAKmE,KAAKyB,MAAM5F,GAEpCiW,EAAYxV,OAAS6S,EAGvB,GAAU,IAANA,QAEG,GAAInP,KAAK1D,OAAS6S,EAEvB,IADAnP,KAAK1D,QAAU6S,EACVtT,EAAI,EAAGA,EAAImE,KAAK1D,OAAQT,IAC3BmE,KAAKyB,MAAM5F,GAAKmE,KAAKyB,MAAM5F,EAAIsT,QAGjCnP,KAAKyB,MAAM,GAAK,EAChBzB,KAAK1D,OAAS,EAGhB,IAAI6I,EAAQ,EACZ,IAAKtJ,EAAImE,KAAK1D,OAAS,EAAGT,GAAK,IAAgB,IAAVsJ,GAAetJ,GAAK+V,GAAI/V,IAAK,CAChE,IAAI8H,EAAuB,EAAhB3D,KAAKyB,MAAM5F,GACtBmE,KAAKyB,MAAM5F,GAAMsJ,GAAU,GAAKlD,EAAO0B,IAAS1B,EAChDkD,EAAQxB,EAAOkO,EAajB,OATIC,GAAyB,IAAV3M,IACjB2M,EAAYrQ,MAAMqQ,EAAYxV,UAAY6I,GAGxB,IAAhBnF,KAAK1D,SACP0D,KAAKyB,MAAM,GAAK,EAChBzB,KAAK1D,OAAS,GAGT0D,KAAKiD,SAGd9I,EAAGkG,UAAU0R,MAAQ,SAAgBT,EAAMI,EAAMC,GAG/C,OADA7Q,EAAyB,IAAlBd,KAAKwB,UACLxB,KAAKwG,OAAO8K,EAAMI,EAAMC,IAIjCxX,EAAGkG,UAAU2R,KAAO,SAAeV,GACjC,OAAOtR,KAAKiE,QAAQwN,MAAMH,IAG5BnX,EAAGkG,UAAU4R,MAAQ,SAAgBX,GACnC,OAAOtR,KAAKiE,QAAQoN,OAAOC,IAI7BnX,EAAGkG,UAAU6R,KAAO,SAAeZ,GACjC,OAAOtR,KAAKiE,QAAQ8N,MAAMT,IAG5BnX,EAAGkG,UAAU8R,MAAQ,SAAgBb,GACnC,OAAOtR,KAAKiE,QAAQuC,OAAO8K,IAI7BnX,EAAGkG,UAAU+G,MAAQ,SAAgBzC,GACnC7D,EAAsB,kBAAR6D,GAAoBA,GAAO,GACzC,IAAI1C,EAAI0C,EAAM,GACVwK,GAAKxK,EAAM1C,GAAK,GAChBqE,EAAI,GAAKrE,EAGb,GAAIjC,KAAK1D,QAAU6S,EAAG,OAAO,EAG7B,IAAI9L,EAAIrD,KAAKyB,MAAM0N,GAEnB,SAAU9L,EAAIiD,IAIhBnM,EAAGkG,UAAU+R,OAAS,SAAiBd,GACrCxQ,EAAuB,kBAATwQ,GAAqBA,GAAQ,GAC3C,IAAIrP,EAAIqP,EAAO,GACXnC,GAAKmC,EAAOrP,GAAK,GAIrB,GAFAnB,EAAyB,IAAlBd,KAAKwB,SAAgB,2CAExBxB,KAAK1D,QAAU6S,EACjB,OAAOnP,KAQT,GALU,IAANiC,GACFkN,IAEFnP,KAAK1D,OAAS6F,KAAKC,IAAI+M,EAAGnP,KAAK1D,QAErB,IAAN2F,EAAS,CACX,IAAI4P,EAAO,SAAc,WAAc5P,GAAMA,EAC7CjC,KAAKyB,MAAMzB,KAAK1D,OAAS,IAAMuV,EAGjC,OAAO7R,KAAKiD,SAId9I,EAAGkG,UAAUgS,MAAQ,SAAgBf,GACnC,OAAOtR,KAAKiE,QAAQmO,OAAOd,IAI7BnX,EAAGkG,UAAU6G,MAAQ,SAAgB3E,GAGnC,OAFAzB,EAAsB,kBAARyB,GACdzB,EAAOyB,EAAM,UACTA,EAAM,EAAUvC,KAAKsS,OAAO/P,GAGV,IAAlBvC,KAAKwB,SACa,IAAhBxB,KAAK1D,SAAiC,EAAhB0D,KAAKyB,MAAM,IAAUc,GAC7CvC,KAAKyB,MAAM,GAAKc,GAAuB,EAAhBvC,KAAKyB,MAAM,IAClCzB,KAAKwB,SAAW,EACTxB,OAGTA,KAAKwB,SAAW,EAChBxB,KAAKsS,MAAM/P,GACXvC,KAAKwB,SAAW,EACTxB,MAIFA,KAAK6D,OAAOtB,IAGrBpI,EAAGkG,UAAUwD,OAAS,SAAiBtB,GACrCvC,KAAKyB,MAAM,IAAMc,EAGjB,IAAK,IAAI1G,EAAI,EAAGA,EAAImE,KAAK1D,QAAU0D,KAAKyB,MAAM5F,IAAM,SAAWA,IAC7DmE,KAAKyB,MAAM5F,IAAM,SACbA,IAAMmE,KAAK1D,OAAS,EACtB0D,KAAKyB,MAAM5F,EAAI,GAAK,EAEpBmE,KAAKyB,MAAM5F,EAAI,KAKnB,OAFAmE,KAAK1D,OAAS6F,KAAKM,IAAIzC,KAAK1D,OAAQT,EAAI,GAEjCmE,MAIT7F,EAAGkG,UAAUiS,MAAQ,SAAgB/P,GAGnC,GAFAzB,EAAsB,kBAARyB,GACdzB,EAAOyB,EAAM,UACTA,EAAM,EAAG,OAAOvC,KAAKkH,OAAO3E,GAEhC,GAAsB,IAAlBvC,KAAKwB,SAIP,OAHAxB,KAAKwB,SAAW,EAChBxB,KAAKkH,MAAM3E,GACXvC,KAAKwB,SAAW,EACTxB,KAKT,GAFAA,KAAKyB,MAAM,IAAMc,EAEG,IAAhBvC,KAAK1D,QAAgB0D,KAAKyB,MAAM,GAAK,EACvCzB,KAAKyB,MAAM,IAAMzB,KAAKyB,MAAM,GAC5BzB,KAAKwB,SAAW,OAGhB,IAAK,IAAI3F,EAAI,EAAGA,EAAImE,KAAK1D,QAAU0D,KAAKyB,MAAM5F,GAAK,EAAGA,IACpDmE,KAAKyB,MAAM5F,IAAM,SACjBmE,KAAKyB,MAAM5F,EAAI,IAAM,EAIzB,OAAOmE,KAAKiD,SAGd9I,EAAGkG,UAAUkS,KAAO,SAAehQ,GACjC,OAAOvC,KAAKiE,QAAQiD,MAAM3E,IAG5BpI,EAAGkG,UAAUmS,KAAO,SAAejQ,GACjC,OAAOvC,KAAKiE,QAAQqO,MAAM/P,IAG5BpI,EAAGkG,UAAUoS,KAAO,WAGlB,OAFAzS,KAAKwB,SAAW,EAETxB,MAGT7F,EAAGkG,UAAU2G,IAAM,WACjB,OAAOhH,KAAKiE,QAAQwO,QAGtBtY,EAAGkG,UAAUqS,aAAe,SAAuBnQ,EAAKD,EAAKqQ,GAC3D,IACI9W,EAIAwH,EALAnB,EAAMK,EAAIjG,OAASqW,EAGvB3S,KAAKkE,QAAQhC,GAGb,IAAIiD,EAAQ,EACZ,IAAKtJ,EAAI,EAAGA,EAAI0G,EAAIjG,OAAQT,IAAK,CAC/BwH,GAA6B,EAAxBrD,KAAKyB,MAAM5F,EAAI8W,IAAcxN,EAClC,IAAIxC,GAAwB,EAAfJ,EAAId,MAAM5F,IAAUyG,EACjCe,GAAa,SAARV,EACLwC,GAAS9B,GAAK,KAAQV,EAAQ,SAAa,GAC3C3C,KAAKyB,MAAM5F,EAAI8W,GAAa,SAAJtP,EAE1B,KAAOxH,EAAImE,KAAK1D,OAASqW,EAAO9W,IAC9BwH,GAA6B,EAAxBrD,KAAKyB,MAAM5F,EAAI8W,IAAcxN,EAClCA,EAAQ9B,GAAK,GACbrD,KAAKyB,MAAM5F,EAAI8W,GAAa,SAAJtP,EAG1B,GAAc,IAAV8B,EAAa,OAAOnF,KAAKiD,QAK7B,IAFAnC,GAAkB,IAAXqE,GACPA,EAAQ,EACHtJ,EAAI,EAAGA,EAAImE,KAAK1D,OAAQT,IAC3BwH,IAAsB,EAAhBrD,KAAKyB,MAAM5F,IAAUsJ,EAC3BA,EAAQ9B,GAAK,GACbrD,KAAKyB,MAAM5F,GAAS,SAAJwH,EAIlB,OAFArD,KAAKwB,SAAW,EAETxB,KAAKiD,SAGd9I,EAAGkG,UAAUuS,SAAW,SAAmBrQ,EAAKsQ,GAC9C,IAAIF,EAAQ3S,KAAK1D,OAASiG,EAAIjG,OAE1B0I,EAAIhF,KAAKiE,QACTgB,EAAI1C,EAGJuQ,EAA8B,EAAxB7N,EAAExD,MAAMwD,EAAE3I,OAAS,GACzByW,EAAU/S,KAAK0G,WAAWoM,GAC9BH,EAAQ,GAAKI,EACC,IAAVJ,IACF1N,EAAIA,EAAEgN,MAAMU,GACZ3N,EAAEqM,OAAOsB,GACTG,EAA8B,EAAxB7N,EAAExD,MAAMwD,EAAE3I,OAAS,IAI3B,IACIgK,EADA4J,EAAIlL,EAAE1I,OAAS2I,EAAE3I,OAGrB,GAAa,QAATuW,EAAgB,CAClBvM,EAAI,IAAInM,EAAG,MACXmM,EAAEhK,OAAS4T,EAAI,EACf5J,EAAE7E,MAAQ,IAAIlF,MAAM+J,EAAEhK,QACtB,IAAK,IAAIT,EAAI,EAAGA,EAAIyK,EAAEhK,OAAQT,IAC5ByK,EAAE7E,MAAM5F,GAAK,EAIjB,IAAImX,EAAOhO,EAAEf,QAAQyO,aAAazN,EAAG,EAAGiL,GAClB,IAAlB8C,EAAKxR,WACPwD,EAAIgO,EACA1M,IACFA,EAAE7E,MAAMyO,GAAK,IAIjB,IAAK,IAAI9M,EAAI8M,EAAI,EAAG9M,GAAK,EAAGA,IAAK,CAC/B,IAAI6P,EAAmC,UAAL,EAAxBjO,EAAEvD,MAAMwD,EAAE3I,OAAS8G,KACE,EAA5B4B,EAAEvD,MAAMwD,EAAE3I,OAAS8G,EAAI,IAI1B6P,EAAK9Q,KAAKC,IAAK6Q,EAAKH,EAAO,EAAG,UAE9B9N,EAAE0N,aAAazN,EAAGgO,EAAI7P,GACtB,MAAsB,IAAf4B,EAAExD,SACPyR,IACAjO,EAAExD,SAAW,EACbwD,EAAE0N,aAAazN,EAAG,EAAG7B,GAChB4B,EAAEU,WACLV,EAAExD,UAAY,GAGd8E,IACFA,EAAE7E,MAAM2B,GAAK6P,GAajB,OAVI3M,GACFA,EAAErD,QAEJ+B,EAAE/B,QAGW,QAAT4P,GAA4B,IAAVF,GACpB3N,EAAEwB,OAAOmM,GAGJ,CACLO,IAAK5M,GAAK,KACV5C,IAAKsB,IAQT7K,EAAGkG,UAAU8S,OAAS,SAAiB5Q,EAAKsQ,EAAMO,GAGhD,OAFAtS,GAAQyB,EAAImD,UAER1F,KAAK0F,SACA,CACLwN,IAAK,IAAI/Y,EAAG,GACZuJ,IAAK,IAAIvJ,EAAG,IAKM,IAAlB6F,KAAKwB,UAAmC,IAAjBe,EAAIf,UAC7B6E,EAAMrG,KAAKwH,MAAM2L,OAAO5Q,EAAKsQ,GAEhB,QAATA,IACFK,EAAM7M,EAAI6M,IAAI1L,OAGH,QAATqL,IACFnP,EAAM2C,EAAI3C,IAAI8D,MACV4L,GAA6B,IAAjB1P,EAAIlC,UAClBkC,EAAI8E,KAAKjG,IAIN,CACL2Q,IAAKA,EACLxP,IAAKA,IAIa,IAAlB1D,KAAKwB,UAAmC,IAAjBe,EAAIf,UAC7B6E,EAAMrG,KAAKmT,OAAO5Q,EAAIiF,MAAOqL,GAEhB,QAATA,IACFK,EAAM7M,EAAI6M,IAAI1L,OAGT,CACL0L,IAAKA,EACLxP,IAAK2C,EAAI3C,MAI0B,KAAlC1D,KAAKwB,SAAWe,EAAIf,WACvB6E,EAAMrG,KAAKwH,MAAM2L,OAAO5Q,EAAIiF,MAAOqL,GAEtB,QAATA,IACFnP,EAAM2C,EAAI3C,IAAI8D,MACV4L,GAA6B,IAAjB1P,EAAIlC,UAClBkC,EAAI+E,KAAKlG,IAIN,CACL2Q,IAAK7M,EAAI6M,IACTxP,IAAKA,IAOLnB,EAAIjG,OAAS0D,KAAK1D,QAAU0D,KAAK4C,IAAIL,GAAO,EACvC,CACL2Q,IAAK,IAAI/Y,EAAG,GACZuJ,IAAK1D,MAKU,IAAfuC,EAAIjG,OACO,QAATuW,EACK,CACLK,IAAKlT,KAAKqT,KAAK9Q,EAAId,MAAM,IACzBiC,IAAK,MAII,QAATmP,EACK,CACLK,IAAK,KACLxP,IAAK,IAAIvJ,EAAG6F,KAAK2F,KAAKpD,EAAId,MAAM,MAI7B,CACLyR,IAAKlT,KAAKqT,KAAK9Q,EAAId,MAAM,IACzBiC,IAAK,IAAIvJ,EAAG6F,KAAK2F,KAAKpD,EAAId,MAAM,MAI7BzB,KAAK4S,SAASrQ,EAAKsQ,GAlF1B,IAAIK,EAAKxP,EAAK2C,GAsFhBlM,EAAGkG,UAAU6S,IAAM,SAAc3Q,GAC/B,OAAOvC,KAAKmT,OAAO5Q,EAAK,OAAO,GAAO2Q,KAIxC/Y,EAAGkG,UAAUqD,IAAM,SAAcnB,GAC/B,OAAOvC,KAAKmT,OAAO5Q,EAAK,OAAO,GAAOmB,KAGxCvJ,EAAGkG,UAAUiT,KAAO,SAAe/Q,GACjC,OAAOvC,KAAKmT,OAAO5Q,EAAK,OAAO,GAAMmB,KAIvCvJ,EAAGkG,UAAUkT,SAAW,SAAmBhR,GACzC,IAAIiR,EAAKxT,KAAKmT,OAAO5Q,GAGrB,GAAIiR,EAAG9P,IAAIgC,SAAU,OAAO8N,EAAGN,IAE/B,IAAIxP,EAA0B,IAApB8P,EAAGN,IAAI1R,SAAiBgS,EAAG9P,IAAI+E,KAAKlG,GAAOiR,EAAG9P,IAEpD+P,EAAOlR,EAAI4P,MAAM,GACjBuB,EAAKnR,EAAIgE,MAAM,GACf3D,EAAMc,EAAId,IAAI6Q,GAGlB,OAAI7Q,EAAM,GAAY,IAAP8Q,GAAoB,IAAR9Q,EAAkB4Q,EAAGN,IAGrB,IAApBM,EAAGN,IAAI1R,SAAiBgS,EAAGN,IAAIZ,MAAM,GAAKkB,EAAGN,IAAIhM,MAAM,IAGhE/M,EAAGkG,UAAUsF,KAAO,SAAepD,GACjCzB,EAAOyB,GAAO,UAId,IAHA,IAAIkN,GAAK,GAAK,IAAMlN,EAEhBoR,EAAM,EACD9X,EAAImE,KAAK1D,OAAS,EAAGT,GAAK,EAAGA,IACpC8X,GAAOlE,EAAIkE,GAAuB,EAAhB3T,KAAKyB,MAAM5F,KAAW0G,EAG1C,OAAOoR,GAITxZ,EAAGkG,UAAUuF,MAAQ,SAAgBrD,GACnCzB,EAAOyB,GAAO,UAGd,IADA,IAAI4C,EAAQ,EACHtJ,EAAImE,KAAK1D,OAAS,EAAGT,GAAK,EAAGA,IAAK,CACzC,IAAIwH,GAAqB,EAAhBrD,KAAKyB,MAAM5F,IAAkB,SAARsJ,EAC9BnF,KAAKyB,MAAM5F,GAAMwH,EAAId,EAAO,EAC5B4C,EAAQ9B,EAAId,EAGd,OAAOvC,KAAKiD,SAGd9I,EAAGkG,UAAUgT,KAAO,SAAe9Q,GACjC,OAAOvC,KAAKiE,QAAQ2B,MAAMrD,IAG5BpI,EAAGkG,UAAUuT,KAAO,SAAenE,GACjC3O,EAAsB,IAAf2O,EAAEjO,UACTV,GAAQ2O,EAAE/J,UAEV,IAAI2I,EAAIrO,KACJsO,EAAImB,EAAExL,QAGRoK,EADiB,IAAfA,EAAE7M,SACA6M,EAAEiF,KAAK7D,GAEPpB,EAAEpK,QAIR,IAAI4P,EAAI,IAAI1Z,EAAG,GACX2Z,EAAI,IAAI3Z,EAAG,GAGX4Z,EAAI,IAAI5Z,EAAG,GACX6Z,EAAI,IAAI7Z,EAAG,GAEX8Z,EAAI,EAER,MAAO5F,EAAE6F,UAAY5F,EAAE4F,SACrB7F,EAAE7H,OAAO,GACT8H,EAAE9H,OAAO,KACPyN,EAGJ,IAAIE,EAAK7F,EAAErK,QACPmQ,EAAK/F,EAAEpK,QAEX,OAAQoK,EAAE3I,SAAU,CAClB,IAAK,IAAI7J,EAAI,EAAGwY,EAAK,EAAyB,KAArBhG,EAAE5M,MAAM,GAAK4S,IAAaxY,EAAI,KAAMA,EAAGwY,IAAO,GACvE,GAAIxY,EAAI,EAAG,CACTwS,EAAE7H,OAAO3K,GACT,MAAOA,KAAM,GACPgY,EAAES,SAAWR,EAAEQ,WACjBT,EAAErL,KAAK2L,GACPL,EAAErL,KAAK2L,IAGTP,EAAErN,OAAO,GACTsN,EAAEtN,OAAO,GAIb,IAAK,IAAIpD,EAAI,EAAGmR,EAAK,EAAyB,KAArBjG,EAAE7M,MAAM,GAAK8S,IAAanR,EAAI,KAAMA,EAAGmR,IAAO,GACvE,GAAInR,EAAI,EAAG,CACTkL,EAAE9H,OAAOpD,GACT,MAAOA,KAAM,GACP2Q,EAAEO,SAAWN,EAAEM,WACjBP,EAAEvL,KAAK2L,GACPH,EAAEvL,KAAK2L,IAGTL,EAAEvN,OAAO,GACTwN,EAAExN,OAAO,GAIT6H,EAAEzL,IAAI0L,IAAM,GACdD,EAAE5F,KAAK6F,GACPuF,EAAEpL,KAAKsL,GACPD,EAAErL,KAAKuL,KAEP1F,EAAE7F,KAAK4F,GACP0F,EAAEtL,KAAKoL,GACPG,EAAEvL,KAAKqL,IAIX,MAAO,CACL9O,EAAG+O,EACH9O,EAAG+O,EACHQ,IAAKlG,EAAE+C,OAAO4C,KAOlB9Z,EAAGkG,UAAUoU,OAAS,SAAiBhF,GACrC3O,EAAsB,IAAf2O,EAAEjO,UACTV,GAAQ2O,EAAE/J,UAEV,IAAIV,EAAIhF,KACJiF,EAAIwK,EAAExL,QAGRe,EADiB,IAAfA,EAAExD,SACAwD,EAAEsO,KAAK7D,GAEPzK,EAAEf,QAGR,IAuCIoC,EAvCAqO,EAAK,IAAIva,EAAG,GACZwa,EAAK,IAAIxa,EAAG,GAEZya,EAAQ3P,EAAEhB,QAEd,MAAOe,EAAE6P,KAAK,GAAK,GAAK5P,EAAE4P,KAAK,GAAK,EAAG,CACrC,IAAK,IAAIhZ,EAAI,EAAGwY,EAAK,EAAyB,KAArBrP,EAAEvD,MAAM,GAAK4S,IAAaxY,EAAI,KAAMA,EAAGwY,IAAO,GACvE,GAAIxY,EAAI,EAAG,CACTmJ,EAAEwB,OAAO3K,GACT,MAAOA,KAAM,EACP6Y,EAAGJ,SACLI,EAAGlM,KAAKoM,GAGVF,EAAGlO,OAAO,GAId,IAAK,IAAIpD,EAAI,EAAGmR,EAAK,EAAyB,KAArBtP,EAAExD,MAAM,GAAK8S,IAAanR,EAAI,KAAMA,EAAGmR,IAAO,GACvE,GAAInR,EAAI,EAAG,CACT6B,EAAEuB,OAAOpD,GACT,MAAOA,KAAM,EACPuR,EAAGL,SACLK,EAAGnM,KAAKoM,GAGVD,EAAGnO,OAAO,GAIVxB,EAAEpC,IAAIqC,IAAM,GACdD,EAAEyD,KAAKxD,GACPyP,EAAGjM,KAAKkM,KAER1P,EAAEwD,KAAKzD,GACP2P,EAAGlM,KAAKiM,IAeZ,OATErO,EADgB,IAAdrB,EAAE6P,KAAK,GACHH,EAEAC,EAGJtO,EAAIwO,KAAK,GAAK,GAChBxO,EAAImC,KAAKiH,GAGJpJ,GAGTlM,EAAGkG,UAAUmU,IAAM,SAAcjS,GAC/B,GAAIvC,KAAK0F,SAAU,OAAOnD,EAAIyE,MAC9B,GAAIzE,EAAImD,SAAU,OAAO1F,KAAKgH,MAE9B,IAAIhC,EAAIhF,KAAKiE,QACTgB,EAAI1C,EAAI0B,QACZe,EAAExD,SAAW,EACbyD,EAAEzD,SAAW,EAGb,IAAK,IAAImR,EAAQ,EAAG3N,EAAEkP,UAAYjP,EAAEiP,SAAUvB,IAC5C3N,EAAEwB,OAAO,GACTvB,EAAEuB,OAAO,GAGX,EAAG,CACD,MAAOxB,EAAEkP,SACPlP,EAAEwB,OAAO,GAEX,MAAOvB,EAAEiP,SACPjP,EAAEuB,OAAO,GAGX,IAAIvE,EAAI+C,EAAEpC,IAAIqC,GACd,GAAIhD,EAAI,EAAG,CAET,IAAI0E,EAAI3B,EACRA,EAAIC,EACJA,EAAI0B,OACC,GAAU,IAAN1E,GAAyB,IAAdgD,EAAE4P,KAAK,GAC3B,MAGF7P,EAAEyD,KAAKxD,SACA,GAET,OAAOA,EAAEoM,OAAOsB,IAIlBxY,EAAGkG,UAAUyU,KAAO,SAAevS,GACjC,OAAOvC,KAAK4T,KAAKrR,GAAKyC,EAAEsO,KAAK/Q,IAG/BpI,EAAGkG,UAAU6T,OAAS,WACpB,OAA+B,KAAP,EAAhBlU,KAAKyB,MAAM,KAGrBtH,EAAGkG,UAAUiU,MAAQ,WACnB,OAA+B,KAAP,EAAhBtU,KAAKyB,MAAM,KAIrBtH,EAAGkG,UAAUkG,MAAQ,SAAgBhE,GACnC,OAAOvC,KAAKyB,MAAM,GAAKc,GAIzBpI,EAAGkG,UAAU0U,MAAQ,SAAgBpQ,GACnC7D,EAAsB,kBAAR6D,GACd,IAAI1C,EAAI0C,EAAM,GACVwK,GAAKxK,EAAM1C,GAAK,GAChBqE,EAAI,GAAKrE,EAGb,GAAIjC,KAAK1D,QAAU6S,EAGjB,OAFAnP,KAAKkE,QAAQiL,EAAI,GACjBnP,KAAKyB,MAAM0N,IAAM7I,EACVtG,KAKT,IADA,IAAImF,EAAQmB,EACHzK,EAAIsT,EAAa,IAAVhK,GAAetJ,EAAImE,KAAK1D,OAAQT,IAAK,CACnD,IAAIwH,EAAoB,EAAhBrD,KAAKyB,MAAM5F,GACnBwH,GAAK8B,EACLA,EAAQ9B,IAAM,GACdA,GAAK,SACLrD,KAAKyB,MAAM5F,GAAKwH,EAMlB,OAJc,IAAV8B,IACFnF,KAAKyB,MAAM5F,GAAKsJ,EAChBnF,KAAK1D,UAEA0D,MAGT7F,EAAGkG,UAAUqF,OAAS,WACpB,OAAuB,IAAhB1F,KAAK1D,QAAkC,IAAlB0D,KAAKyB,MAAM,IAGzCtH,EAAGkG,UAAUwU,KAAO,SAAetS,GACjC,IAOI8D,EAPA7E,EAAWe,EAAM,EAErB,GAAsB,IAAlBvC,KAAKwB,WAAmBA,EAAU,OAAQ,EAC9C,GAAsB,IAAlBxB,KAAKwB,UAAkBA,EAAU,OAAO,EAK5C,GAHAxB,KAAKiD,QAGDjD,KAAK1D,OAAS,EAChB+J,EAAM,MACD,CACD7E,IACFe,GAAOA,GAGTzB,EAAOyB,GAAO,SAAW,qBAEzB,IAAIc,EAAoB,EAAhBrD,KAAKyB,MAAM,GACnB4E,EAAMhD,IAAMd,EAAM,EAAIc,EAAId,GAAO,EAAI,EAEvC,OAAsB,IAAlBvC,KAAKwB,SAA8B,GAAN6E,EAC1BA,GAOTlM,EAAGkG,UAAUuC,IAAM,SAAcL,GAC/B,GAAsB,IAAlBvC,KAAKwB,UAAmC,IAAjBe,EAAIf,SAAgB,OAAQ,EACvD,GAAsB,IAAlBxB,KAAKwB,UAAmC,IAAjBe,EAAIf,SAAgB,OAAO,EAEtD,IAAI6E,EAAMrG,KAAKgV,KAAKzS,GACpB,OAAsB,IAAlBvC,KAAKwB,SAA8B,GAAN6E,EAC1BA,GAITlM,EAAGkG,UAAU2U,KAAO,SAAezS,GAEjC,GAAIvC,KAAK1D,OAASiG,EAAIjG,OAAQ,OAAO,EACrC,GAAI0D,KAAK1D,OAASiG,EAAIjG,OAAQ,OAAQ,EAGtC,IADA,IAAI+J,EAAM,EACDxK,EAAImE,KAAK1D,OAAS,EAAGT,GAAK,EAAGA,IAAK,CACzC,IAAImJ,EAAoB,EAAhBhF,KAAKyB,MAAM5F,GACfoJ,EAAmB,EAAf1C,EAAId,MAAM5F,GAElB,GAAImJ,IAAMC,EAAV,CACID,EAAIC,EACNoB,GAAO,EACErB,EAAIC,IACboB,EAAM,GAER,OAEF,OAAOA,GAGTlM,EAAGkG,UAAU4U,IAAM,SAAc1S,GAC/B,OAA0B,IAAnBvC,KAAK6U,KAAKtS,IAGnBpI,EAAGkG,UAAU6U,GAAK,SAAa3S,GAC7B,OAAyB,IAAlBvC,KAAK4C,IAAIL,IAGlBpI,EAAGkG,UAAU8U,KAAO,SAAe5S,GACjC,OAAOvC,KAAK6U,KAAKtS,IAAQ,GAG3BpI,EAAGkG,UAAU+U,IAAM,SAAc7S,GAC/B,OAAOvC,KAAK4C,IAAIL,IAAQ,GAG1BpI,EAAGkG,UAAUgV,IAAM,SAAc9S,GAC/B,OAA2B,IAApBvC,KAAK6U,KAAKtS,IAGnBpI,EAAGkG,UAAUlC,GAAK,SAAaoE,GAC7B,OAA0B,IAAnBvC,KAAK4C,IAAIL,IAGlBpI,EAAGkG,UAAUiV,KAAO,SAAe/S,GACjC,OAAOvC,KAAK6U,KAAKtS,IAAQ,GAG3BpI,EAAGkG,UAAUkV,IAAM,SAAchT,GAC/B,OAAOvC,KAAK4C,IAAIL,IAAQ,GAG1BpI,EAAGkG,UAAUmV,IAAM,SAAcjT,GAC/B,OAA0B,IAAnBvC,KAAK6U,KAAKtS,IAGnBpI,EAAGkG,UAAUoV,GAAK,SAAalT,GAC7B,OAAyB,IAAlBvC,KAAK4C,IAAIL,IAOlBpI,EAAGuH,IAAM,SAAca,GACrB,OAAO,IAAImT,EAAInT,IAGjBpI,EAAGkG,UAAUsV,MAAQ,SAAgBC,GAGnC,OAFA9U,GAAQd,KAAK0B,IAAK,yCAClBZ,EAAyB,IAAlBd,KAAKwB,SAAgB,iCACrBoU,EAAIC,UAAU7V,MAAM8V,UAAUF,IAGvCzb,EAAGkG,UAAU0V,QAAU,WAErB,OADAjV,EAAOd,KAAK0B,IAAK,wDACV1B,KAAK0B,IAAIsU,YAAYhW,OAG9B7F,EAAGkG,UAAUyV,UAAY,SAAoBF,GAE3C,OADA5V,KAAK0B,IAAMkU,EACJ5V,MAGT7F,EAAGkG,UAAU4V,SAAW,SAAmBL,GAEzC,OADA9U,GAAQd,KAAK0B,IAAK,yCACX1B,KAAK8V,UAAUF,IAGxBzb,EAAGkG,UAAU6V,OAAS,SAAiB3T,GAErC,OADAzB,EAAOd,KAAK0B,IAAK,sCACV1B,KAAK0B,IAAIgH,IAAI1I,KAAMuC,IAG5BpI,EAAGkG,UAAU8V,QAAU,SAAkB5T,GAEvC,OADAzB,EAAOd,KAAK0B,IAAK,uCACV1B,KAAK0B,IAAI8G,KAAKxI,KAAMuC,IAG7BpI,EAAGkG,UAAU+V,OAAS,SAAiB7T,GAErC,OADAzB,EAAOd,KAAK0B,IAAK,sCACV1B,KAAK0B,IAAIiH,IAAI3I,KAAMuC,IAG5BpI,EAAGkG,UAAUgW,QAAU,SAAkB9T,GAEvC,OADAzB,EAAOd,KAAK0B,IAAK,uCACV1B,KAAK0B,IAAI+G,KAAKzI,KAAMuC,IAG7BpI,EAAGkG,UAAUiW,OAAS,SAAiB/T,GAErC,OADAzB,EAAOd,KAAK0B,IAAK,sCACV1B,KAAK0B,IAAI6U,IAAIvW,KAAMuC,IAG5BpI,EAAGkG,UAAUmW,OAAS,SAAiBjU,GAGrC,OAFAzB,EAAOd,KAAK0B,IAAK,sCACjB1B,KAAK0B,IAAI+U,SAASzW,KAAMuC,GACjBvC,KAAK0B,IAAIY,IAAItC,KAAMuC,IAG5BpI,EAAGkG,UAAUqW,QAAU,SAAkBnU,GAGvC,OAFAzB,EAAOd,KAAK0B,IAAK,sCACjB1B,KAAK0B,IAAI+U,SAASzW,KAAMuC,GACjBvC,KAAK0B,IAAIiL,KAAK3M,KAAMuC,IAG7BpI,EAAGkG,UAAUsW,OAAS,WAGpB,OAFA7V,EAAOd,KAAK0B,IAAK,sCACjB1B,KAAK0B,IAAIkV,SAAS5W,MACXA,KAAK0B,IAAIyP,IAAInR,OAGtB7F,EAAGkG,UAAUwW,QAAU,WAGrB,OAFA/V,EAAOd,KAAK0B,IAAK,uCACjB1B,KAAK0B,IAAIkV,SAAS5W,MACXA,KAAK0B,IAAI0P,KAAKpR,OAIvB7F,EAAGkG,UAAUyW,QAAU,WAGrB,OAFAhW,EAAOd,KAAK0B,IAAK,uCACjB1B,KAAK0B,IAAIkV,SAAS5W,MACXA,KAAK0B,IAAIqV,KAAK/W,OAGvB7F,EAAGkG,UAAU2W,QAAU,WAGrB,OAFAlW,EAAOd,KAAK0B,IAAK,uCACjB1B,KAAK0B,IAAIkV,SAAS5W,MACXA,KAAK0B,IAAIoT,KAAK9U,OAIvB7F,EAAGkG,UAAU4W,OAAS,WAGpB,OAFAnW,EAAOd,KAAK0B,IAAK,sCACjB1B,KAAK0B,IAAIkV,SAAS5W,MACXA,KAAK0B,IAAI8F,IAAIxH,OAGtB7F,EAAGkG,UAAU6W,OAAS,SAAiB3U,GAGrC,OAFAzB,EAAOd,KAAK0B,MAAQa,EAAIb,IAAK,qBAC7B1B,KAAK0B,IAAIkV,SAAS5W,MACXA,KAAK0B,IAAIoC,IAAI9D,KAAMuC,IAI5B,IAAI4U,EAAS,CACXC,KAAM,KACNC,KAAM,KACNC,KAAM,KACNC,OAAQ,MAIV,SAASC,EAAQ9c,EAAM+U,GAErBzP,KAAKtF,KAAOA,EACZsF,KAAKyP,EAAI,IAAItV,EAAGsV,EAAG,IACnBzP,KAAK9C,EAAI8C,KAAKyP,EAAE/K,YAChB1E,KAAKoF,EAAI,IAAIjL,EAAG,GAAGkX,OAAOrR,KAAK9C,GAAGuL,KAAKzI,KAAKyP,GAE5CzP,KAAKyX,IAAMzX,KAAK0X,OA2ClB,SAASC,IACPH,EAAOI,KACL5X,KACA,OACA,2EA+DJ,SAAS6X,IACPL,EAAOI,KACL5X,KACA,OACA,kEAIJ,SAAS8X,IACPN,EAAOI,KACL5X,KACA,OACA,yDAIJ,SAAS+X,IAEPP,EAAOI,KACL5X,KACA,QACA,uEA8CJ,SAAS0V,EAAKxF,GACZ,GAAiB,kBAANA,EAAgB,CACzB,IAAI8H,EAAQ7d,EAAG8d,OAAO/H,GACtBlQ,KAAKkQ,EAAI8H,EAAMvI,EACfzP,KAAKgY,MAAQA,OAEblX,EAAOoP,EAAE+E,IAAI,GAAI,kCACjBjV,KAAKkQ,EAAIA,EACTlQ,KAAKgY,MAAQ,KAkOjB,SAASE,EAAMhI,GACbwF,EAAIkC,KAAK5X,KAAMkQ,GAEflQ,KAAK2S,MAAQ3S,KAAKkQ,EAAExL,YAChB1E,KAAK2S,MAAQ,KAAO,IACtB3S,KAAK2S,OAAS,GAAM3S,KAAK2S,MAAQ,IAGnC3S,KAAKiC,EAAI,IAAI9H,EAAG,GAAGkX,OAAOrR,KAAK2S,OAC/B3S,KAAK0T,GAAK1T,KAAKmY,KAAKnY,KAAKiC,EAAEkP,OAC3BnR,KAAKoY,KAAOpY,KAAKiC,EAAEwS,OAAOzU,KAAKkQ,GAE/BlQ,KAAKqY,KAAOrY,KAAKoY,KAAK9V,IAAItC,KAAKiC,GAAGqQ,MAAM,GAAGY,IAAIlT,KAAKkQ,GACpDlQ,KAAKqY,KAAOrY,KAAKqY,KAAK/E,KAAKtT,KAAKiC,GAChCjC,KAAKqY,KAAOrY,KAAKiC,EAAE0G,IAAI3I,KAAKqY,MAta9Bb,EAAOnX,UAAUqX,KAAO,WACtB,IAAID,EAAM,IAAItd,EAAG,MAEjB,OADAsd,EAAIhW,MAAQ,IAAIlF,MAAM4F,KAAKgB,KAAKnD,KAAK9C,EAAI,KAClCua,GAGTD,EAAOnX,UAAUiY,QAAU,SAAkB/V,GAG3C,IACIgW,EADAtW,EAAIM,EAGR,GACEvC,KAAKlD,MAAMmF,EAAGjC,KAAKyX,KACnBxV,EAAIjC,KAAKwY,MAAMvW,GACfA,EAAIA,EAAEuG,KAAKxI,KAAKyX,KAChBc,EAAOtW,EAAEyC,kBACF6T,EAAOvY,KAAK9C,GAErB,IAAI0F,EAAM2V,EAAOvY,KAAK9C,GAAK,EAAI+E,EAAE+S,KAAKhV,KAAKyP,GAU3C,OATY,IAAR7M,GACFX,EAAER,MAAM,GAAK,EACbQ,EAAE3F,OAAS,GACFsG,EAAM,EACfX,EAAEwG,KAAKzI,KAAKyP,GAEZxN,EAAEgB,QAGGhB,GAGTuV,EAAOnX,UAAUvD,MAAQ,SAAgB2b,EAAO1T,GAC9C0T,EAAMjS,OAAOxG,KAAK9C,EAAG,EAAG6H,IAG1ByS,EAAOnX,UAAUmY,MAAQ,SAAgBjW,GACvC,OAAOA,EAAIoK,KAAK3M,KAAKoF,IASvBnE,EAAS0W,EAAMH,GAEfG,EAAKtX,UAAUvD,MAAQ,SAAgB2b,EAAOC,GAK5C,IAHA,IAAI7G,EAAO,QAEP8G,EAASxW,KAAKC,IAAIqW,EAAMnc,OAAQ,GAC3BT,EAAI,EAAGA,EAAI8c,EAAQ9c,IAC1B6c,EAAOjX,MAAM5F,GAAK4c,EAAMhX,MAAM5F,GAIhC,GAFA6c,EAAOpc,OAASqc,EAEZF,EAAMnc,QAAU,EAGlB,OAFAmc,EAAMhX,MAAM,GAAK,OACjBgX,EAAMnc,OAAS,GAKjB,IAAIsc,EAAOH,EAAMhX,MAAM,GAGvB,IAFAiX,EAAOjX,MAAMiX,EAAOpc,UAAYsc,EAAO/G,EAElChW,EAAI,GAAIA,EAAI4c,EAAMnc,OAAQT,IAAK,CAClC,IAAIgd,EAAwB,EAAjBJ,EAAMhX,MAAM5F,GACvB4c,EAAMhX,MAAM5F,EAAI,KAAQgd,EAAOhH,IAAS,EAAM+G,IAAS,GACvDA,EAAOC,EAETD,KAAU,GACVH,EAAMhX,MAAM5F,EAAI,IAAM+c,EACT,IAATA,GAAcH,EAAMnc,OAAS,GAC/Bmc,EAAMnc,QAAU,GAEhBmc,EAAMnc,QAAU,GAIpBqb,EAAKtX,UAAUmY,MAAQ,SAAgBjW,GAErCA,EAAId,MAAMc,EAAIjG,QAAU,EACxBiG,EAAId,MAAMc,EAAIjG,OAAS,GAAK,EAC5BiG,EAAIjG,QAAU,EAId,IADA,IAAI4I,EAAK,EACArJ,EAAI,EAAGA,EAAI0G,EAAIjG,OAAQT,IAAK,CACnC,IAAIwH,EAAmB,EAAfd,EAAId,MAAM5F,GAClBqJ,GAAU,IAAJ7B,EACNd,EAAId,MAAM5F,GAAU,SAALqJ,EACfA,EAAS,GAAJ7B,GAAa6B,EAAK,SAAa,GAUtC,OANkC,IAA9B3C,EAAId,MAAMc,EAAIjG,OAAS,KACzBiG,EAAIjG,SAC8B,IAA9BiG,EAAId,MAAMc,EAAIjG,OAAS,IACzBiG,EAAIjG,UAGDiG,GASTtB,EAAS4W,EAAML,GAQfvW,EAAS6W,EAAMN,GASfvW,EAAS8W,EAAQP,GAEjBO,EAAO1X,UAAUmY,MAAQ,SAAgBjW,GAGvC,IADA,IAAI4C,EAAQ,EACHtJ,EAAI,EAAGA,EAAI0G,EAAIjG,OAAQT,IAAK,CACnC,IAAIgL,EAA0B,IAAL,EAAftE,EAAId,MAAM5F,IAAiBsJ,EACjCD,EAAU,SAAL2B,EACTA,KAAQ,GAERtE,EAAId,MAAM5F,GAAKqJ,EACfC,EAAQ0B,EAKV,OAHc,IAAV1B,IACF5C,EAAId,MAAMc,EAAIjG,UAAY6I,GAErB5C,GAITpI,EAAG8d,OAAS,SAAgBvd,GAE1B,GAAIyc,EAAOzc,GAAO,OAAOyc,EAAOzc,GAEhC,IAAIsd,EACJ,GAAa,SAATtd,EACFsd,EAAQ,IAAIL,OACP,GAAa,SAATjd,EACTsd,EAAQ,IAAIH,OACP,GAAa,SAATnd,EACTsd,EAAQ,IAAIF,MACP,IAAa,WAATpd,EAGT,MAAM,IAAIO,MAAM,iBAAmBP,GAFnCsd,EAAQ,IAAID,EAMd,OAFAZ,EAAOzc,GAAQsd,EAERA,GAkBTtC,EAAIrV,UAAUuW,SAAW,SAAmB5R,GAC1ClE,EAAsB,IAAfkE,EAAExD,SAAgB,iCACzBV,EAAOkE,EAAEtD,IAAK,oCAGhBgU,EAAIrV,UAAUoW,SAAW,SAAmBzR,EAAGC,GAC7CnE,EAAqC,KAA7BkE,EAAExD,SAAWyD,EAAEzD,UAAiB,iCACxCV,EAAOkE,EAAEtD,KAAOsD,EAAEtD,MAAQuD,EAAEvD,IAC1B,oCAGJgU,EAAIrV,UAAU8X,KAAO,SAAenT,GAClC,OAAIhF,KAAKgY,MAAchY,KAAKgY,MAAMM,QAAQtT,GAAG8Q,UAAU9V,MAChDgF,EAAEsO,KAAKtT,KAAKkQ,GAAG4F,UAAU9V,OAGlC0V,EAAIrV,UAAUmH,IAAM,SAAcxC,GAChC,OAAIA,EAAEU,SACGV,EAAEf,QAGJjE,KAAKkQ,EAAEvH,IAAI3D,GAAG8Q,UAAU9V,OAGjC0V,EAAIrV,UAAUqI,IAAM,SAAc1D,EAAGC,GACnCjF,KAAKyW,SAASzR,EAAGC,GAEjB,IAAIoB,EAAMrB,EAAE0D,IAAIzD,GAIhB,OAHIoB,EAAIzD,IAAI5C,KAAKkQ,IAAM,GACrB7J,EAAIoC,KAAKzI,KAAKkQ,GAET7J,EAAIyP,UAAU9V,OAGvB0V,EAAIrV,UAAUmI,KAAO,SAAexD,EAAGC,GACrCjF,KAAKyW,SAASzR,EAAGC,GAEjB,IAAIoB,EAAMrB,EAAEwD,KAAKvD,GAIjB,OAHIoB,EAAIzD,IAAI5C,KAAKkQ,IAAM,GACrB7J,EAAIoC,KAAKzI,KAAKkQ,GAET7J,GAGTqP,EAAIrV,UAAUsI,IAAM,SAAc3D,EAAGC,GACnCjF,KAAKyW,SAASzR,EAAGC,GAEjB,IAAIoB,EAAMrB,EAAE2D,IAAI1D,GAIhB,OAHIoB,EAAIwO,KAAK,GAAK,GAChBxO,EAAImC,KAAKxI,KAAKkQ,GAET7J,EAAIyP,UAAU9V,OAGvB0V,EAAIrV,UAAUoI,KAAO,SAAezD,EAAGC,GACrCjF,KAAKyW,SAASzR,EAAGC,GAEjB,IAAIoB,EAAMrB,EAAEyD,KAAKxD,GAIjB,OAHIoB,EAAIwO,KAAK,GAAK,GAChBxO,EAAImC,KAAKxI,KAAKkQ,GAET7J,GAGTqP,EAAIrV,UAAUkW,IAAM,SAAcvR,EAAGzC,GAEnC,OADAvC,KAAK4W,SAAS5R,GACPhF,KAAKmY,KAAKnT,EAAEiN,MAAM1P,KAG3BmT,EAAIrV,UAAUsM,KAAO,SAAe3H,EAAGC,GAErC,OADAjF,KAAKyW,SAASzR,EAAGC,GACVjF,KAAKmY,KAAKnT,EAAE2H,KAAK1H,KAG1ByQ,EAAIrV,UAAUiC,IAAM,SAAc0C,EAAGC,GAEnC,OADAjF,KAAKyW,SAASzR,EAAGC,GACVjF,KAAKmY,KAAKnT,EAAE1C,IAAI2C,KAGzByQ,EAAIrV,UAAU+Q,KAAO,SAAepM,GAClC,OAAOhF,KAAK2M,KAAK3H,EAAGA,EAAEf,UAGxByR,EAAIrV,UAAU8Q,IAAM,SAAcnM,GAChC,OAAOhF,KAAKsC,IAAI0C,EAAGA,IAGrB0Q,EAAIrV,UAAU0W,KAAO,SAAe/R,GAClC,GAAIA,EAAEU,SAAU,OAAOV,EAAEf,QAEzB,IAAI6U,EAAO9Y,KAAKkQ,EAAE3J,MAAM,GAIxB,GAHAzF,EAAOgY,EAAO,IAAM,GAGP,IAATA,EAAY,CACd,IAAIhV,EAAM9D,KAAKkQ,EAAExH,IAAI,IAAIvO,EAAG,IAAIqM,OAAO,GACvC,OAAOxG,KAAK8D,IAAIkB,EAAGlB,GAMrB,IAAIwC,EAAItG,KAAKkQ,EAAEsC,KAAK,GAChBrD,EAAI,EACR,OAAQ7I,EAAEZ,UAA2B,IAAfY,EAAEC,MAAM,GAC5B4I,IACA7I,EAAEE,OAAO,GAEX1F,GAAQwF,EAAEZ,UAEV,IAAIqT,EAAM,IAAI5e,EAAG,GAAGwb,MAAM3V,MACtBgZ,EAAOD,EAAI9B,SAIXgC,EAAOjZ,KAAKkQ,EAAEsC,KAAK,GAAGhM,OAAO,GAC7B0S,EAAIlZ,KAAKkQ,EAAExL,YACfwU,EAAI,IAAI/e,EAAG,EAAI+e,EAAIA,GAAGvD,MAAM3V,MAE5B,MAAuC,IAAhCA,KAAK8D,IAAIoV,EAAGD,GAAMrW,IAAIoW,GAC3BE,EAAE/C,QAAQ6C,GAGZ,IAAIxa,EAAIwB,KAAK8D,IAAIoV,EAAG5S,GAChBrE,EAAIjC,KAAK8D,IAAIkB,EAAGsB,EAAEiM,KAAK,GAAG/L,OAAO,IACjCG,EAAI3G,KAAK8D,IAAIkB,EAAGsB,GAChB4J,EAAIf,EACR,MAAsB,IAAfxI,EAAE/D,IAAImW,GAAY,CAEvB,IADA,IAAItB,EAAM9Q,EACD9K,EAAI,EAAoB,IAAjB4b,EAAI7U,IAAImW,GAAYld,IAClC4b,EAAMA,EAAId,SAEZ7V,EAAOjF,EAAIqU,GACX,IAAIjL,EAAIjF,KAAK8D,IAAItF,EAAG,IAAIrE,EAAG,GAAGkX,OAAOnB,EAAIrU,EAAI,IAE7CoG,EAAIA,EAAEuU,OAAOvR,GACbzG,EAAIyG,EAAE0R,SACNhQ,EAAIA,EAAE6P,OAAOhY,GACb0R,EAAIrU,EAGN,OAAOoG,GAGTyT,EAAIrV,UAAUyU,KAAO,SAAe9P,GAClC,IAAImU,EAAMnU,EAAEyP,OAAOzU,KAAKkQ,GACxB,OAAqB,IAAjBiJ,EAAI3X,UACN2X,EAAI3X,SAAW,EACRxB,KAAKmY,KAAKgB,GAAKlC,UAEfjX,KAAKmY,KAAKgB,IAIrBzD,EAAIrV,UAAUyD,IAAM,SAAckB,EAAGzC,GACnC,GAAIA,EAAImD,SAAU,OAAO,IAAIvL,EAAG,GAChC,GAAoB,IAAhBoI,EAAIsS,KAAK,GAAU,OAAO7P,EAAEf,QAEhC,IAAImV,EAAa,EACbC,EAAM,IAAI9c,MAAM,GAAK6c,GACzBC,EAAI,GAAK,IAAIlf,EAAG,GAAGwb,MAAM3V,MACzBqZ,EAAI,GAAKrU,EACT,IAAK,IAAInJ,EAAI,EAAGA,EAAIwd,EAAI/c,OAAQT,IAC9Bwd,EAAIxd,GAAKmE,KAAKsC,IAAI+W,EAAIxd,EAAI,GAAImJ,GAGhC,IAAIqB,EAAMgT,EAAI,GACVC,EAAU,EACVC,EAAa,EACbxX,EAAQQ,EAAImC,YAAc,GAK9B,IAJc,IAAV3C,IACFA,EAAQ,IAGLlG,EAAI0G,EAAIjG,OAAS,EAAGT,GAAK,EAAGA,IAAK,CAEpC,IADA,IAAI8H,EAAOpB,EAAId,MAAM5F,GACZuH,EAAIrB,EAAQ,EAAGqB,GAAK,EAAGA,IAAK,CACnC,IAAIuB,EAAOhB,GAAQP,EAAK,EACpBiD,IAAQgT,EAAI,KACdhT,EAAMrG,KAAKmR,IAAI9K,IAGL,IAAR1B,GAAyB,IAAZ2U,GAKjBA,IAAY,EACZA,GAAW3U,EACX4U,KACIA,IAAeH,GAAqB,IAANvd,GAAiB,IAANuH,KAE7CiD,EAAMrG,KAAKsC,IAAI+D,EAAKgT,EAAIC,IACxBC,EAAa,EACbD,EAAU,IAXRC,EAAa,EAajBxX,EAAQ,GAGV,OAAOsE,GAGTqP,EAAIrV,UAAUwV,UAAY,SAAoBtT,GAC5C,IAAIN,EAAIM,EAAI+Q,KAAKtT,KAAKkQ,GAEtB,OAAOjO,IAAMM,EAAMN,EAAEgC,QAAUhC,GAGjCyT,EAAIrV,UAAU2V,YAAc,SAAsBzT,GAChD,IAAI8D,EAAM9D,EAAI0B,QAEd,OADAoC,EAAI3E,IAAM,KACH2E,GAOTlM,EAAGqf,KAAO,SAAejX,GACvB,OAAO,IAAI2V,EAAK3V,IAmBlBtB,EAASiX,EAAMxC,GAEfwC,EAAK7X,UAAUwV,UAAY,SAAoBtT,GAC7C,OAAOvC,KAAKmY,KAAK5V,EAAI0P,MAAMjS,KAAK2S,SAGlCuF,EAAK7X,UAAU2V,YAAc,SAAsBzT,GACjD,IAAIN,EAAIjC,KAAKmY,KAAK5V,EAAID,IAAItC,KAAKoY,OAE/B,OADAnW,EAAEP,IAAM,KACDO,GAGTiW,EAAK7X,UAAUsM,KAAO,SAAe3H,EAAGC,GACtC,GAAID,EAAEU,UAAYT,EAAES,SAGlB,OAFAV,EAAEvD,MAAM,GAAK,EACbuD,EAAE1I,OAAS,EACJ0I,EAGT,IAAI2B,EAAI3B,EAAE2H,KAAK1H,GACXzG,EAAImI,EAAE0L,MAAMrS,KAAK2S,OAAOrQ,IAAItC,KAAKqY,MAAMjG,OAAOpS,KAAK2S,OAAOrQ,IAAItC,KAAKkQ,GACnEuJ,EAAI9S,EAAE8B,KAAKjK,GAAGgI,OAAOxG,KAAK2S,OAC1BtM,EAAMoT,EAQV,OANIA,EAAE7W,IAAI5C,KAAKkQ,IAAM,EACnB7J,EAAMoT,EAAEhR,KAAKzI,KAAKkQ,GACTuJ,EAAE5E,KAAK,GAAK,IACrBxO,EAAMoT,EAAEjR,KAAKxI,KAAKkQ,IAGb7J,EAAIyP,UAAU9V,OAGvBkY,EAAK7X,UAAUiC,IAAM,SAAc0C,EAAGC,GACpC,GAAID,EAAEU,UAAYT,EAAES,SAAU,OAAO,IAAIvL,EAAG,GAAG2b,UAAU9V,MAEzD,IAAI2G,EAAI3B,EAAE1C,IAAI2C,GACVzG,EAAImI,EAAE0L,MAAMrS,KAAK2S,OAAOrQ,IAAItC,KAAKqY,MAAMjG,OAAOpS,KAAK2S,OAAOrQ,IAAItC,KAAKkQ,GACnEuJ,EAAI9S,EAAE8B,KAAKjK,GAAGgI,OAAOxG,KAAK2S,OAC1BtM,EAAMoT,EAOV,OANIA,EAAE7W,IAAI5C,KAAKkQ,IAAM,EACnB7J,EAAMoT,EAAEhR,KAAKzI,KAAKkQ,GACTuJ,EAAE5E,KAAK,GAAK,IACrBxO,EAAMoT,EAAEjR,KAAKxI,KAAKkQ,IAGb7J,EAAIyP,UAAU9V,OAGvBkY,EAAK7X,UAAUyU,KAAO,SAAe9P,GAEnC,IAAIqB,EAAMrG,KAAKmY,KAAKnT,EAAEyP,OAAOzU,KAAKkQ,GAAG5N,IAAItC,KAAK0T,KAC9C,OAAOrN,EAAIyP,UAAU9V,QAh2GzB,CAk2GoCL,EAAQK,Q,gDCl2G5C,IAAIH,EAAI,EAAQ,QACZC,EAAe,EAAQ,QAkBvBigB,EAAmB,WACnB/f,KAAKC,gBAAkBJ,EAAE0d,eACzBvd,KAAKG,iBAAmBN,EAAEoe,kBAG9B8B,EAAiB1f,UAAY,IAAIP,EAAa,IAC9CigB,EAAiB1f,UAAU5F,YAAcslB,EAEzCA,EAAiB1f,UAAUC,OAAS,SAAU5F,GAC1C,QAASA,EAAK6F,MAAM,mCAGxBZ,EAAOC,QAAUmgB,G,sBCTjB,IAAI7lB,EAAI,EAAQ,QACZC,EAAK,EAAQ,QACbwf,EAAQ,EAAQ,QAGhB0C,EAAkB,SAAU3hB,GAG5B,OAAIA,EAAK4hB,WAAW,QACT,SAAW5hB,EAAK6hB,MAAM,GACb,QAAT7hB,EACA,SACAA,EAAK4hB,WAAW,SAChB,UAAY5hB,EAAK6hB,MAAM,GACd,SAAT7hB,EACA,UACAA,EAAK4hB,WAAW,UAChB,eAAiB5hB,EAAK6hB,MAAM,GACnB,UAAT7hB,EACA,eACAA,EAAK4hB,WAAW,WAChB,gBAAkB5hB,EAAK6hB,MAAM,GACpB,WAAT7hB,EACA,gBAEJA,GAIP8hB,EAAc,SAAUxB,GACxB,IAAIyB,EAAW,eAAeC,KAAK1B,GACnC,OAAOyB,EAAW3gB,SAAS2gB,EAAS,GAAI,IAAM,MAI9CE,EAAmB,SAAU3B,GAC7B,IAAI4B,EAAY,oBAAoBF,KAAK1B,GACzC,OAAO4B,EAAY9gB,SAAS8gB,EAAU,GAAI,IAAM,MAGhDC,EAAe,SAAUC,GACzB,IAAI9B,SAAc8B,EAClB,GAAa,WAAT9B,EACA,OAAIrB,EAAMvc,YAAY0f,GACX,IAAI3iB,EAAG2iB,EAAIrhB,QAAQ,MAAM,IAAK,IAE9B,IAAItB,EAAG2iB,EAAK,IAEpB,GAAa,WAAT9B,EACP,OAAO,IAAI7gB,EAAG2iB,GACX,GAAInD,EAAMhf,YAAYmiB,GACzB,OAAO,IAAI3iB,EAAG2iB,EAAI1hB,SAAS,KACxB,GAAIue,EAAMpf,KAAKuiB,GAClB,OAAOA,EAEP,MAAM,IAAI7hB,MAAM6hB,EAAK,qBAIzBC,EAAgB,SAAU/B,EAAMrd,EAAOif,GAGvC,IAAIzY,EAAM5B,EAIV,GAHAyY,EAAOqB,EAAgBrB,GAGV,UAATA,EAAkB,CAElB,GAAIrd,EAAMlC,QAAQ,OAAO,IAAIa,OAAS,IAAM,EACxC,MAAM,IAAIrB,MAAM,4BAA6B0C,EAAMrB,QAGvD,OAAOqB,EACJ,GAAa,WAATqd,EACP,OAAOrB,EAAMjd,UAAUiB,GACpB,GAAa,SAATqd,EACP,OAAOrd,EAAQ,KAAO,KACnB,GAAIqd,EAAKsB,WAAW,WAAY,CAOnC,GALInY,EADDyY,EACQ,GAEA,IAGPjD,EAAMte,UAAUsC,GAChB,MAAM,IAAI1C,MAAM0C,EAAO,wDAG3B,OAAOgc,EAAM3d,QAAQ2B,EAAM/B,cAAeuI,GAK9C,GAFAA,EAAOqY,EAAYxB,GAEfA,EAAKsB,WAAW,SAAU,CAE1B,IAAInY,EACA,MAAM,IAAIlJ,MAAM,yCAQpB,GAJG2hB,IACCzY,EAAO,IAGPA,EAAO,GAAKA,EAAO,IAAMA,EAAOxG,EAAMlC,QAAQ,OAAO,IAAIa,OAAS,EAClE,MAAM,IAAIrB,MAAM,gBAAkBkJ,EAAM,QAASxG,GAGrD,OAAOgc,EAAMld,SAASkB,EAAc,EAAPwG,GAC1B,GAAI6W,EAAKsB,WAAW,QAAS,CAEhC,GAAKnY,EAAO,GAAOA,EAAO,GAAOA,EAAO,IACpC,MAAM,IAAIlJ,MAAM,eAAekJ,EAAK,SAIxC,GADA5B,EAAMsa,EAAalf,GACf4E,EAAImC,YAAcP,EAClB,MAAM,IAAIlJ,MAAM,gCAAkCkJ,EAAO,OAAS5B,EAAImC,aAG1E,GAAGnC,EAAIpE,GAAG,IAAIhE,EAAG,IACb,MAAM,IAAIc,MAAM,iBAAkBsH,EAAInH,WAAY,gBAGtD,OAAO+I,EAAOwV,EAAM3d,QAAQuG,EAAInH,SAAS,OAAQ+I,EAAK,EAAI,GAAK5B,EAC5D,GAAIyY,EAAKsB,WAAW,OAAQ,CAE/B,GAAKnY,EAAO,GAAOA,EAAO,GAAOA,EAAO,IACpC,MAAM,IAAIlJ,MAAM,cAAckJ,EAAK,SAIvC,GADA5B,EAAMsa,EAAalf,GACf4E,EAAImC,YAAcP,EAClB,MAAM,IAAIlJ,MAAM,+BAAiCkJ,EAAO,OAAS5B,EAAImC,aAGzE,OAAGnC,EAAIpE,GAAG,IAAIhE,EAAG,IACNoI,EAAIpH,OAAOgJ,GAAM/I,SAAS,OAE1B+I,EAAOwV,EAAM3d,QAAQuG,EAAInH,SAAS,OAAQ+I,EAAK,EAAI,GAAK5B,EAKnE,MAAM,IAAItH,MAAM,gCAAkC+f,IAKtDgC,EAA2B,SAAUF,GAGrC,GAAG5iB,EAAEsI,QAAQsa,GACT,MAAM,IAAI7hB,MAAM,kDAGpB,IAAI+f,EACAiC,EAAQL,EADFjf,EAAQ,GAwBlB,GApBIzD,EAAE0E,SAASke,KAASA,EAAII,eAAe,MAAQJ,EAAII,eAAe,MAAQJ,EAAII,eAAe,UAAYJ,EAAII,eAAe,UAC5HlC,EAAO8B,EAAII,eAAe,KAAOJ,EAAInW,EAAImW,EAAI9B,KAC7Crd,EAAQmf,EAAII,eAAe,KAAOJ,EAAIK,EAAIL,EAAInf,QAK9Cqd,EAAOrB,EAAMlb,MAAMqe,GAAK,GACxBnf,EAAQgc,EAAMlb,MAAMqe,GAEf9B,EAAKsB,WAAW,QAAWtB,EAAKsB,WAAW,UAC5CtB,EAAO,WAIVA,EAAKsB,WAAW,SAAUtB,EAAKsB,WAAW,SAA8B,kBAAV3e,GAAuB,WAAWpC,KAAKoC,KACtGA,EAAQ,IAAIxD,EAAGwD,IAIhBzD,EAAEsI,QAAQ7E,GAAQ,CAEjB,GADAif,EAAYD,EAAiB3B,GAC1B4B,GAAajf,EAAMrB,SAAWsgB,EAC7B,MAAM,IAAI3hB,MAAM+f,EAAM,oCAAqCnc,KAAKC,UAAUnB,IAE1Eif,EAAYjf,EAAMrB,OAK1B,OAAIpC,EAAEsI,QAAQ7E,IACVsf,EAAStf,EAAMod,KAAI,SAAUha,GACzB,OAAOgc,EAAc/B,EAAMja,EAAK6b,GAAWxhB,SAAS,OAAOK,QAAQ,KAAK,OAErEwhB,EAAOzgB,KAAK,MAEnBygB,EAASF,EAAc/B,EAAMrd,EAAOif,GAC7BK,EAAO7hB,SAAS,OAAOK,QAAQ,KAAK,MAW/Cme,EAAe,WAGf,IAAIwD,EAAO7gB,MAAM8D,UAAUkc,MAAM3E,KAAK7c,WAElCsiB,EAAUnjB,EAAE6gB,IAAIqC,EAAMJ,GAK1B,OAAOrD,EAAMhe,KAAK,KAAM0hB,EAAQ7gB,KAAK,MAIzCmD,EAAOC,QAAUga,G,qBCpPjB,IAAI/Z,EAAI,EAAQ,QACZgB,EAAa,EAAQ,QAAqBA,WAC1Cf,EAAe,EAAQ,QAYvBkgB,EAAsB,WACtBhgB,KAAKC,gBAAkB,WACnB,IAAImd,EAAO7gB,MAAM8D,UAAUkc,MAAM3E,KAAK7c,WAEtC,OADAqiB,EAAK,GAAOA,EAAK,IAAkB,QAAZA,EAAK,GAAqBvc,EAAWof,sBAAsB7C,EAAK,IAA3C,GACrCvd,EAAE0d,eAAeziB,MAAMkF,KAAMod,IAExCpd,KAAKG,iBAAmBN,EAAEye,qBAG9B0B,EAAoB3f,UAAY,IAAIP,EAAa,IACjDkgB,EAAoB3f,UAAU5F,YAAculB,EAE5CA,EAAoB3f,UAAUC,OAAS,SAAU5F,GAC7C,QAASA,EAAK6F,MAAM,2BAGxBZ,EAAOC,QAAUogB,G,qBCPjB,IAAI9lB,EAAI,EAAQ,QACZyf,EAAQ,EAAQ,QAEhB9Z,EAAI,EAAQ,QAEZmgB,EAAsB,EAAQ,QAC9BjgB,EAAmB,EAAQ,QAC3BmgB,EAAkB,EAAQ,QAC1BH,EAAmB,EAAQ,QAC3Bvf,EAA2B,EAAQ,QACnC2f,EAAqB,EAAQ,QAC7BL,EAAoB,EAAQ,QAE5BR,EAAY,SAAUc,EAAcpF,GACpC,OAAOoF,EAAazf,cAAcqa,IAC9BoF,EAAaC,eAAerF,IAKpC,SAASsF,KAMT,IAAIC,EAAW,SAAUC,GACrBxgB,KAAKygB,OAASD,GAWlBD,EAASlgB,UAAUqgB,aAAe,SAAU1F,GACxC,IAAIoF,EAAepgB,KAAKygB,OAAOE,QAAO,SAAUha,GAC5C,OAAOA,EAAErG,OAAO0a,MACjB,GAEH,IAAKoF,EACD,MAAMnlB,MAAM,0BAA4B+f,GAG5C,OAAOoF,GAKXG,EAASlgB,UAAUugB,YAAc,SAAUJ,EAAOK,GAK9C,IAJA,IAAIC,EAAWD,EAAc9F,KAAI,SAAUqF,EAAcW,GACrD,OAAOX,EAAaY,iBAAiBR,EAAMO,OAGtCllB,EAAI,EAAGA,EAAIilB,EAAQxkB,OAAQT,IAEhCilB,EAAQjlB,IAAMilB,EAAQjlB,EAAI,GAG9B,OAAOilB,EAAQ/F,KAAI,SAAUze,EAAQykB,GAEjC,IAAIC,EAAmBH,EAAcE,GAAOC,iBAAiBR,EAAMO,IACnE,OAAOzkB,EAAS0kB,MAIxBT,EAASlgB,UAAU4gB,kBAAoB,SAAUT,GAC7C,IAAI1b,EAAO9E,KACX,OAAOwgB,EAAMzF,KAAI,SAAUC,GACvB,OAAOlW,EAAK4b,aAAa1F,OAKjCuF,EAASlgB,UAAU6gB,uBAAyB,SAAUV,EAAOK,EAAeM,EAAUC,GAClF,IAAIljB,EAAS,GACT4G,EAAO9E,KAsBX,OApBAwgB,EAAMa,SAAQ,SAAUrG,EAAMnf,GAC1B,GAAIyjB,EAAUuB,EAAchlB,GAAI2kB,EAAM3kB,IAAK,CACvCqC,GAAU2B,EAAE0d,eAAe6D,GAAexkB,SAC1C,IAAI5B,EAAI8J,EAAKwc,kBAAkBd,EAAM3kB,GAAIglB,EAAchlB,GAAIslB,EAAStlB,GAAIulB,GACxEA,GAAiBpmB,EAAEsB,OAAS,OAG5B4B,GAAU4G,EAAKwc,kBAAkBd,EAAM3kB,GAAIglB,EAAchlB,GAAIslB,EAAStlB,GAAIulB,MAMlFZ,EAAMa,SAAQ,SAAUrG,EAAMnf,GAC1B,GAAIyjB,EAAUuB,EAAchlB,GAAI2kB,EAAM3kB,IAAK,CACvC,IAAIb,EAAI8J,EAAKwc,kBAAkBd,EAAM3kB,GAAIglB,EAAchlB,GAAIslB,EAAStlB,GAAIulB,GACxEA,GAAiBpmB,EAAEsB,OAAS,EAC5B4B,GAAUlD,MAGXkD,GAIXqiB,EAASlgB,UAAUihB,kBAAoB,SAAUtG,EAAMoF,EAAcmB,EAASrC,GAC1E,IAAIpa,EAAO9E,KACX,OAAIogB,EAAaC,eAAerF,GACrB,WAEH,IAAIwG,EAAapB,EAAaoB,WAAWxG,GACrCyG,EAAyBrB,EAAaY,iBAAiBQ,GACvDtjB,EAASqjB,EAAQ,GAoBrB,OAlBA,WACI,IAAIG,EAAiB,EACrB,GAAItB,EAAaC,eAAemB,GAC5B,IAAK,IAAI3lB,EAAI,EAAGA,EAAI0lB,EAAQjlB,OAAQT,IAChC6lB,IAAoBH,EAAQ1lB,EAAI,GAAI,IAAM,EAC1CqC,GAAU2B,EAAE0d,eAAe2B,EAASrjB,EAAI4lB,EAA0C,GAAjBC,GAAqB9kB,SALlG,GAWA,WACI,IAAK,IAAIf,EAAI,EAAGA,EAAI0lB,EAAQjlB,OAAS,EAAGT,IAAK,CACzC,IAAI8lB,EAAmBzjB,EAAS,EAChCA,GAAU4G,EAAKwc,kBAAkBE,EAAYpB,EAAcmB,EAAQ1lB,EAAI,GAAIqjB,EAAUyC,IAH7F,GAOOzjB,EAxBJ,GA2BAkiB,EAAawB,cAAc5G,GAC3B,WACH,IAAIwG,EAAapB,EAAaoB,WAAWxG,GACrCyG,EAAyBrB,EAAaY,iBAAiBQ,GACvDtjB,EAAS,GAqBb,OAlBIkiB,EAAaC,eAAemB,IAC5B,WAEI,IADA,IAAIE,EAAiB,EACZ7lB,EAAI,EAAGA,EAAI0lB,EAAQjlB,OAAQT,IAEhC6lB,KAAoBH,EAAQ1lB,EAAI,IAAM,IAAI,IAAM,EAChDqC,GAAU2B,EAAE0d,eAAe2B,EAASrjB,EAAI4lB,EAA0C,GAAjBC,GAAqB9kB,SAL9F,GAUJ,WACI,IAAK,IAAIf,EAAI,EAAGA,EAAI0lB,EAAQjlB,OAAQT,IAAK,CACrC,IAAI8lB,EAAmBzjB,EAAS,EAChCA,GAAU4G,EAAKwc,kBAAkBE,EAAYpB,EAAcmB,EAAQ1lB,GAAIqjB,EAASyC,IAHxF,GAOOzjB,EAxBJ,GA4BJqjB,GAWXhB,EAASlgB,UAAUwhB,wBAA0B,SAAUC,GAKnD,OAJG5nB,EAAE0E,SAASkjB,KACVA,EAAenI,EAAMgB,6BAA6BmH,IAG/CnI,EAAMhe,KAAKmmB,GAAcvF,MAAM,EAAG,KAW7CgE,EAASlgB,UAAU0hB,qBAAuB,SAAUD,GAKhD,OAJG5nB,EAAE0E,SAASkjB,KACVA,EAAenI,EAAMgB,6BAA6BmH,IAG/CnI,EAAMhe,KAAKmmB,IAYtBvB,EAASlgB,UAAU2hB,gBAAkB,SAAUhH,EAAM8C,GACjD,OAAO9d,KAAKiiB,iBAAiB,CAACjH,GAAO,CAAC8C,KAW1CyC,EAASlgB,UAAU4hB,iBAAmB,SAAUzB,EAAOd,GAEhDxlB,EAAE0E,SAAS4hB,IAAUA,EAAM1F,SAC1B0F,EAAQtmB,EAAE6gB,IAAIyF,EAAM1F,QAAQ,SAAUrC,GAClC,OAAOA,EAAMuC,SAIrB,IAAI6F,EAAgB7gB,KAAKihB,kBAAkBT,GAEvCW,EAAWN,EAAc9F,KAAI,SAAUqF,EAAcW,GACrD,OAAOX,EAAaxjB,OAAO8iB,EAAOqB,GAAQP,EAAMO,OAGhDK,EAAgBP,EAAchB,QAAO,SAAUlM,EAAKyM,EAAcW,GAClE,IAAIC,EAAmBZ,EAAaY,iBAAiBR,EAAMO,IACvDmB,EAAqE,GAA3C/f,KAAKub,OAAOsD,EAAmB,IAAM,IAEnE,OAAOrN,GAAO2L,EAAUuB,EAAcE,GAAQP,EAAMO,IAC5C,GACAmB,KACT,GAEH,MAAO,KAAMliB,KAAKkhB,uBAAuBV,EAAOK,EAAeM,EAAUC,IAY7Eb,EAASlgB,UAAU8hB,mBAAqB,SAAUC,EAAe1C,GAC7D,OAAO1f,KAAK6hB,wBAAwBO,GAAiBpiB,KAAKiiB,iBAAiBG,EAAe1C,GAAQjkB,QAAQ,KAAK,KAYnH8kB,EAASlgB,UAAUgiB,gBAAkB,SAAUrH,EAAM3c,GAEjD,IAAKnE,EAAE6E,SAASic,GACZ,MAAM,IAAI/f,MAAM,yCAA0C+f,GAG9D,OAAOhb,KAAKsiB,iBAAiB,CAAC,CAACtH,KAAMA,IAAQ3c,GAAO,IAWxDkiB,EAASlgB,UAAUiiB,iBAAmB,SAAUC,EAASlkB,GACrD,IAAImkB,EAActoB,EAAEsI,QAAQ+f,IAAYroB,EAAE6E,SAASwjB,EAAQ,IACvD/B,EAAQ,EAAgB+B,EAAU,GAElCC,GACAD,EAAQlB,SAAQ,SAAU3I,GACtB8H,EAAMliB,KAAKoa,EAAOsC,SAI1B,IAAI6F,EAAgB7gB,KAAKihB,kBAAkBT,GACvCiC,EAAUziB,KAAK4gB,YAAYJ,EAAOK,GAElCrhB,EAAc,IAAI8gB,EACtB9gB,EAAYkjB,WAAa,EACzB,IAAIC,EAAQ,EAgBZ,OAdAJ,EAAQlB,SAAQ,SAAU3I,EAAQ7c,GAC9B,IAAI+mB,EAAe/B,EAAc8B,GAAOllB,OAAOY,EAAM5C,QAAQ,OAAO,IAAKgnB,EAAQE,GAASnC,EAAMmC,GAAQA,GACxGC,EAAiC,OAAjBA,EAAyB,KAAOA,EAEhDpjB,EAAY3D,GAAK+mB,EAEb1oB,EAAE0E,SAAS8Z,IAAWA,EAAOhe,OAC7B8E,EAAYkZ,EAAOhe,MAAQkoB,GAG/BpjB,EAAYkjB,aACZC,OAGGnjB,GAYX+gB,EAASlgB,UAAUwiB,UAAY,SAAU/H,EAAQX,EAAM2I,GAEnD3I,EAAOA,GAAQ,GAEf,IAAI4I,EAAmB,GACnBC,EAAgB,GAEpBlI,EAAOuG,SAAQ,SAAU5I,EAAO5c,GACxB4c,EAAMwK,QACND,EAAcnnB,GAAK4c,EAEnBsK,EAAiBlnB,GAAK4c,KAI9B,IAAIyK,EAAiB/I,EAAKoC,MAAM,GAC5B4G,EAAcjpB,EAAEsI,QAAQsgB,GAAUA,EAAO/H,KAAI,SAAUzb,GAAS,OAAOA,EAAMid,MAAM,MAAO/f,KAAK,IAAMsmB,EAErGM,EAAmBpjB,KAAKsiB,iBAAiBS,EAAkBG,GAC3DG,EAAgBrjB,KAAKsiB,iBAAiBU,EAAeG,GAGrD3jB,EAAc,IAAI8gB,EAoBtB,OAnBA9gB,EAAYkjB,WAAa,EAEzB5H,EAAOuG,SAAQ,SAAUhb,EAAKxK,GAC1B2D,EAAY3D,GAAmB,WAAbwK,EAAI2U,KAAqB,GAAK,KAE5CoI,EAAiBvnB,KACjB2D,EAAY3D,GAAKunB,EAAiBvnB,IAElCwnB,EAAcxnB,KACd2D,EAAY3D,GAAKwnB,EAAcxnB,IAGhCwK,EAAI3L,OACH8E,EAAY6G,EAAI3L,MAAQ8E,EAAY3D,IAGxC2D,EAAYkjB,gBAGTljB,GAIX,IAAI8jB,EAAQ,IAAI/C,EAAS,CACrB,IAAIP,EACJ,IAAIjgB,EACJ,IAAImgB,EACJ,IAAIH,EACJ,IAAIvf,EACJ,IAAIsf,EACJ,IAAIK,IAGRxgB,EAAOC,QAAU0jB,G,qBCvZjB,IAAIzjB,EAAI,EAAQ,QACZC,EAAe,EAAQ,QAkBvBogB,EAAkB,WAClBlgB,KAAKC,gBAAkBJ,EAAE0d,eACzBvd,KAAKG,iBAAmBN,EAAEge,iBAG9BqC,EAAgB7f,UAAY,IAAIP,EAAa,IAC7CogB,EAAgB7f,UAAU5F,YAAcylB,EAExCA,EAAgB7f,UAAUC,OAAS,SAAU5F,GACzC,QAASA,EAAK6F,MAAM,kCAGxBZ,EAAOC,QAAUsgB,G,kCCJjB,IAAIvG,EAAQ,EAAQ,QAChB4J,EAAY,EAAQ,QAGpBvnB,EAAU,SAAUC,EAAQoC,GAC5B,IAAIH,EAASjC,EACb,MAAOiC,EAAO5B,OAAiB,EAAR+B,EACnBH,EAAS,IAAMA,EAEnB,OAAOA,GAWPslB,EAAkB,SAAUC,GAC5B,IAAI5P,EAAI,IAAI5W,WAAW,GACnBymB,EAAI,IAAIzmB,WAAW,GAKvB,OAHAwmB,EAAOA,EAAK1nB,cACZ0nB,EAAOA,EAAKnmB,OAAO,GAAKmmB,EAAKnmB,OAAO,EAAE,GAE/BmmB,EAAK3mB,MAAM,IAAIie,KAAI,SAAS7d,GAC/B,IAAIF,EAAOE,EAAED,WAAW,GACxB,OAAID,GAAQ6W,GAAK7W,GAAQ0mB,EAEd1mB,EAAO6W,EAAI,GAEX3W,KAEZV,KAAK,KAURmnB,EAAU,SAAUF,GACpB,IACIG,EADAC,EAAYJ,EAGhB,MAAOI,EAAUvnB,OAAS,EACtBsnB,EAAQC,EAAUtH,MAAM,EAAG,GAC3BsH,EAAY/nB,SAAS8nB,EAAO,IAAM,GAAKC,EAAUtH,MAAMqH,EAAMtnB,QAGjE,OAAOR,SAAS+nB,EAAW,IAAM,IAQjCC,EAAO,SAAcL,GACrBzjB,KAAK+jB,MAAQN,GAUjBK,EAAKE,UAAY,SAAUC,GAGvB,GAFAA,EAAK,IAAIH,EAAKG,IAEVA,EAAGC,WACH,MAAM,IAAIjpB,MAAM,2CAGpB,OAAOgpB,EAAGD,aAUdF,EAAKK,OAAS,SAAU7oB,GACpB,OAAOwoB,EAAKM,YAAY9oB,GAASF,YAUrC0oB,EAAKM,YAAc,SAAU9oB,GACzB,IAAIqe,EAAMte,UAAUC,GAChB,MAAM,IAAIL,MAAM,4CAA6CK,GAGjEA,EAAUA,EAAQG,QAAQ,KAAK,IAAIA,QAAQ,KAAK,IAEhD,IAAI4oB,EAAO,IAAId,EAAUjoB,EAAS,IAC9BgpB,EAASD,EAAKjpB,SAAS,IACvBmpB,EAASvoB,EAAQsoB,EAAQ,IAC7B,OAAOR,EAAKU,SAASD,EAAOxoB,gBAYhC+nB,EAAKU,SAAW,SAAUC,GACtB,IAAIC,EAAc,KAEdb,EAAYF,EAAQH,EAAgBkB,EAAc,KAAOD,IACzDE,GAAc,KAAO,GAAKd,IAAYtH,OAAO,GAEjD,OAAO,IAAIuH,EAAKY,EAAcC,EAAaF,IAU/CX,EAAKc,eAAiB,SAAUC,GAC5B,OAAOf,EAAKU,SAAS,MAAQK,EAAQC,YAAcD,EAAQE,aAU/DjB,EAAKkB,QAAU,SAAUvB,GACrB,IAAI5nB,EAAI,IAAIioB,EAAKL,GACjB,OAAO5nB,EAAEmpB,WASblB,EAAKzjB,UAAU2kB,QAAU,WACrB,MAAO,gDAAgDzpB,KAAKyE,KAAK+jB,QACpB,IAAzCJ,EAAQH,EAAgBxjB,KAAK+jB,SASrCD,EAAKzjB,UAAU6jB,SAAW,WACtB,OAA6B,KAAtBlkB,KAAK+jB,MAAMznB,QAAuC,KAAtB0D,KAAK+jB,MAAMznB,QASlDwnB,EAAKzjB,UAAU4kB,WAAa,WACxB,OAA6B,KAAtBjlB,KAAK+jB,MAAMznB,QAUtBwnB,EAAKzjB,UAAU6kB,SAAW,WACtB,OAAOllB,KAAK+jB,MAAMzmB,OAAO,EAAG,IAUhCwmB,EAAKzjB,UAAUykB,YAAc,WACzB,OAAO9kB,KAAKilB,aAAejlB,KAAK+jB,MAAMzmB,OAAO,EAAG,GAAK,IAUzDwmB,EAAKzjB,UAAU8kB,OAAS,WACpB,OAAOnlB,KAAKilB,aAAejlB,KAAK+jB,MAAMzmB,OAAO,IAAM,IASvDwmB,EAAKzjB,UAAU2jB,UAAY,WACvB,GAAIhkB,KAAKkkB,WAAY,CACjB,IAAII,EAAStkB,KAAK+jB,MAAMzmB,OAAO,GAC3B+mB,EAAO,IAAId,EAAUe,EAAQ,IACjC,OAAO3K,EAAM8B,kBAAkB4I,EAAKjpB,SAAS,GAAI,KAGrD,MAAO,IAGX0oB,EAAKzjB,UAAUjF,SAAW,WACtB,OAAO4E,KAAK+jB,OAGhBpkB,EAAOC,QAAUkkB,G,kCChPjB,IAAI5pB,EAAI,EAAQ,QACZyf,EAAQ,EAAQ,QAChBmK,EAAO,EAAQ,QASfsB,EAA2B,SAAUvqB,GACrC,OAAO8e,EAAM/e,KAAKC,GAAQO,SAAS,KAGnCiqB,EAA0B,SAAUC,GACpC,MAAuB,WAAhBA,GAA4C,YAAhBA,GAA6C,aAAhBA,GAGhEC,EAAmC,SAAUD,GAC7C,OAAItlB,WAAyBuf,IAAhB+F,GAA6C,OAAhBA,EAGtB,YAAhBA,GAA6C,aAAhBA,EACtB,MAEJE,EAA0BF,GALtBtlB,KAAKylB,cAQhBD,EAA4B,SAAUF,GACtC,QAAoB/F,IAAhB+F,EAEG,OAAID,EAAwBC,GACxBA,EAEH3L,EAAMvc,YAAYkoB,GAAkBprB,EAAE6E,SAASumB,GAAgBA,EAAY1pB,cAAgB0pB,EAAe3L,EAAM7b,YAAYwnB,IAUpII,EAAoB,SAAUb,GAM9B,GAJIA,EAAQc,KACRd,EAAQc,GAAK1F,EAAsB4E,EAAQc,KAG3Cd,EAAQ1K,MAAQ0K,EAAQpM,MACxB,MAAM,IAAIxd,MAAM,mIAQpB,IALK4pB,EAAQ1K,MAAQ0K,EAAQpM,QACzBoM,EAAQ1K,KAAO0K,EAAQpM,aAChBoM,EAAQpM,OAGhBoM,EAAQ1K,OAASR,EAAMza,MAAM2lB,EAAQ1K,MACpC,MAAM,IAAIlf,MAAM,4CAcpB,OAVI4pB,EAAQe,KAAOf,EAAQgB,YACvBhB,EAAQe,IAAMf,EAAQe,KAAOf,EAAQgB,UAGzC,CAAC,WAAY,MAAO,QAAS,SAASlF,QAAO,SAAUmF,GACnD,YAAwBvG,IAAjBsF,EAAQiB,MAChBzE,SAAQ,SAASyE,GAChBjB,EAAQiB,GAAOnM,EAAM7b,YAAY+mB,EAAQiB,OAGtCjB,GAUPkB,EAAqB,SAAUlB,GAE/BA,EAAUa,EAAkBb,GAE5B,IAAImB,EAAOnB,EAAQmB,OAAShmB,KAAOA,KAAKimB,eAAiB,MAOzD,OALID,IACAnB,EAAQmB,KAAO/F,EAAsB+F,IAIlCnB,GAUPqB,EAA4B,SAAUrB,GAKtC,GAHAA,EAAUa,EAAkBb,IAGvB3qB,EAAE+E,SAAS4lB,EAAQmB,QAAU9rB,EAAE0E,SAASimB,EAAQmB,MAAO,CAGxD,GAFAnB,EAAQmB,KAAOnB,EAAQmB,OAAShmB,KAAOA,KAAKimB,eAAiB,OAExDpB,EAAQmB,OAAS9rB,EAAE+E,SAAS4lB,EAAQmB,MACrC,MAAM,IAAI/qB,MAAM,uDAGpB4pB,EAAQmB,KAAO/F,EAAsB4E,EAAQmB,MAGjD,OAAOnB,GAUPsB,EAAqB,SAAUhM,GAC/B,OAAQR,EAAMvc,YAAY+c,GAASA,EAAOR,EAAMjd,UAAUyd,IAU1DiM,EAA6B,SAAUC,GAoBvC,OAnBsB,OAAnBA,EAAGf,cACFe,EAAGf,YAAc3L,EAAMjc,YAAY2oB,EAAGf,cACf,OAAxBe,EAAGC,mBACFD,EAAGC,iBAAmB3M,EAAMjc,YAAY2oB,EAAGC,mBAC/CD,EAAGE,MAAQ5M,EAAMjc,YAAY2oB,EAAGE,OAChCF,EAAGT,IAAMjM,EAAMjc,YAAY2oB,EAAGT,KAC9BS,EAAGG,SAAWpB,EAAyBiB,EAAGG,UAC1CH,EAAG1oB,MAAQynB,EAAyBiB,EAAG1oB,OAEpC0oB,EAAGV,IAAMhM,EAAMte,UAAUgrB,EAAGV,IAC3BU,EAAGV,GAAKhM,EAAM8B,kBAAkB4K,EAAGV,IAEnCU,EAAGV,GAAK,KAGTU,EAAGL,OACFK,EAAGL,KAAOrM,EAAM8B,kBAAkB4K,EAAGL,OAGlCK,GAUPI,EAAoC,SAAUC,GAC9C,GAAsB,kBAAZA,EACN,MAAM,IAAIzrB,MAAM,gCAAiCyrB,GAsBrD,OAnB2B,OAAxBA,EAAQpB,cACPoB,EAAQpB,YAAc3L,EAAMjc,YAAYgpB,EAAQpB,cACpB,OAA7BoB,EAAQJ,mBACPI,EAAQJ,iBAAmB3M,EAAMjc,YAAYgpB,EAAQJ,mBACzDI,EAAQC,kBAAoBhN,EAAMjc,YAAYgpB,EAAQC,mBACtDD,EAAQE,QAAUjN,EAAMjc,YAAYgpB,EAAQE,SAEzC1sB,EAAEsI,QAAQkkB,EAAQG,QACjBH,EAAQG,KAAOH,EAAQG,KAAK9L,IAAI+L,IAGjCJ,EAAQK,kBACPL,EAAQK,gBAAkBpN,EAAM8B,kBAAkBiL,EAAQK,kBAGjC,qBAAnBL,EAAQM,SACdN,EAAQM,OAASC,QAAQnrB,SAAS4qB,EAAQM,UAGvCN,GAUPQ,EAAuB,SAAStD,GAyBhC,OAtBAA,EAAMiC,SAAWlM,EAAMjc,YAAYkmB,EAAMiC,UACzCjC,EAAMgD,QAAUjN,EAAMjc,YAAYkmB,EAAMgD,SACxChD,EAAMzf,KAAOwV,EAAMjc,YAAYkmB,EAAMzf,MACrCyf,EAAMuD,UAAYxN,EAAMjc,YAAYkmB,EAAMuD,WACrB,OAAjBvD,EAAM/oB,SACN+oB,EAAM/oB,OAAS8e,EAAMjc,YAAYkmB,EAAM/oB,SAExC+oB,EAAMwD,aACLxD,EAAMwD,WAAahC,EAAyBxB,EAAMwD,aACnDxD,EAAMyD,kBACLzD,EAAMyD,gBAAkBjC,EAAyBxB,EAAMyD,kBAEvDntB,EAAEsI,QAAQohB,EAAM0D,eAChB1D,EAAM0D,aAAajG,SAAQ,SAASkG,GAChC,IAAIrtB,EAAE6E,SAASwoB,GACX,OAAOnB,EAA2BmB,MAI1C3D,EAAM4D,QACN5D,EAAM4D,MAAQ7N,EAAM8B,kBAAkBmI,EAAM4D,QAEzC5D,GAUP6D,EAAoB,SAAS5C,GAC7B,IAAI6C,EAAU,SAAS/pB,GAEnB,OAAa,OAAVA,GAAmC,qBAAVA,EACjB,MAEXA,EAAQJ,OAAOI,GAEY,IAAxBA,EAAMqB,QAAQ,MACNrB,EAEAgc,EAAMqC,SAASre,KAiB9B,OAbAknB,EAAQ/B,OAAS+B,EAAQ/B,QAAU,GACnC+B,EAAQ/B,OAAS+B,EAAQ/B,OAAO/H,KAAI,SAASzb,GACzC,OAAQpF,EAAEsI,QAAQlD,GAAUA,EAAMyb,IAAI2M,GAAWA,EAAQpoB,MAG7DooB,EAAU,KAEN7C,EAAQvpB,UACRupB,EAAQvpB,QAAWpB,EAAEsI,QAAQqiB,EAAQvpB,SAAYupB,EAAQvpB,QAAQyf,KAAI,SAAU4M,GAC3E,OAAO1H,EAAsB0H,MAC5B1H,EAAsB4E,EAAQvpB,UAGhCupB,GAUPiC,EAAqB,SAASc,GAG9B,GAA4B,kBAAlBA,EAAIC,WACoB,kBAAxBD,EAAIE,iBACa,kBAAjBF,EAAIG,SAAuB,CACjC,IAAIC,EAAQrO,EAAMhe,KAAKisB,EAAIC,UAAUpsB,QAAQ,KAAK,IAAMmsB,EAAIE,gBAAgBrsB,QAAQ,KAAK,IAAMmsB,EAAIG,SAAStsB,QAAQ,KAAK,KACzHmsB,EAAIK,GAAK,OAAQD,EAAMvsB,QAAQ,KAAK,IAAI6B,OAAO,EAAE,QAC1CsqB,EAAIK,KACXL,EAAIK,GAAK,MAcb,OAXwB,OAApBL,EAAItC,cACJsC,EAAItC,YAAc3L,EAAMjc,YAAYkqB,EAAItC,cACf,OAAzBsC,EAAItB,mBACJsB,EAAItB,iBAAmB3M,EAAMjc,YAAYkqB,EAAItB,mBAC5B,OAAjBsB,EAAIG,WACJH,EAAIG,SAAWpO,EAAMjc,YAAYkqB,EAAIG,WAErCH,EAAItsB,UACJssB,EAAItsB,QAAUqe,EAAM8B,kBAAkBmM,EAAItsB,UAGvCssB,GAUPM,EAAqB,SAASC,GAsB9B,OAlBIA,EAAKC,MACLD,EAAKC,IAAMzO,EAAM7b,YAAYqqB,EAAKC,MAClCD,EAAKE,cACLF,EAAKE,YAAc1O,EAAM7b,YAAYqqB,EAAKE,cAC1CF,EAAKG,WACLH,EAAKG,SAAW3O,EAAM7b,YAAYqqB,EAAKG,WAGtCpuB,EAAEsI,QAAQ2lB,EAAKrF,UAChBqF,EAAKrF,OAASqF,EAAKrF,OAAS,CAACqF,EAAKrF,QAAU,IAIhDqF,EAAKrF,OAASqF,EAAKrF,OAAO/H,KAAI,SAASzb,GAEnC,OAAgC,IAAxBA,EAAMN,QAAQ,MAAeM,EAAQqa,EAAMqC,SAAS1c,MAGzD6oB,GAUPI,EAAsB,SAASJ,GAqB/B,OAnBAA,EAAKK,OAAS7O,EAAMjc,YAAYyqB,EAAKK,QACrCL,EAAKM,KAAO9O,EAAMjc,YAAYyqB,EAAKM,MACnCN,EAAKC,IAAMzO,EAAMjc,YAAYyqB,EAAKC,KAClCD,EAAKO,WAAa/O,EAAMjc,YAAYyqB,EAAKO,YASpCP,EAAKrF,SACNqF,EAAKrF,OAAS,IAElBqF,EAAKrF,OAASqF,EAAKrF,OAAO/H,KAAI,SAASzb,GACnC,OAAOqa,EAAMmC,OAAOxc,MAGjB6oB,GAGPlI,EAAwB,SAAU3kB,GAClC,IAAImoB,EAAO,IAAIK,EAAKxoB,GACpB,GAAImoB,EAAKuB,WAAavB,EAAKS,WACvB,OAAOT,EAAKO,YAAYpoB,cACrB,GAAI+d,EAAMte,UAAUC,GACvB,MAAO,KAAOA,EAAQM,cAAcH,QAAQ,KAAK,IAErD,MAAM,IAAIR,MAAM,qBAAsBK,EAAS,qHAI/CqtB,EAAyB,SAASzqB,GAUlC,OARAA,EAAO0qB,cAAgBjP,EAAMjc,YAAYQ,EAAO0qB,eAChD1qB,EAAO2qB,aAAelP,EAAMjc,YAAYQ,EAAO2qB,cAC/C3qB,EAAO4qB,aAAenP,EAAMjc,YAAYQ,EAAO4qB,cAC3C5qB,EAAO6qB,cACP7qB,EAAO6qB,YAAcpP,EAAMjc,YAAYQ,EAAO6qB,aAC9C7qB,EAAO8qB,aAAerP,EAAMjc,YAAYQ,EAAO8qB,eAG5C9qB,GAGXyB,EAAOC,QAAU,CACb2lB,iCAAkCA,EAClCC,0BAA2BA,EAC3BO,mBAAoBA,EACpBG,0BAA2BA,EAC3BjG,sBAAuBA,EACvBiI,mBAAoBA,EACpBT,kBAAmBA,EACnBtB,mBAAoBA,EACpBf,yBAA0BA,EAC1BgB,2BAA4BA,EAC5BK,kCAAmCA,EACnCS,qBAAsBA,EACtBJ,mBAAoBA,EACpByB,oBAAqBA,EACrBI,uBAAwBA,I,qBCzZ5B,IAAIzuB,EAAI,EAAQ,QACZwf,EAAY,EAAQ,QACpBC,EAAQ,EAAQ,QAChBC,EAAe,EAAQ,SACvBC,EAAY,EAAQ,QAcpBC,EAAa,SAAUC,EAAOC,EAASC,EAAQC,GAyC/C,OArCGhgB,EAAE0E,SAASmb,IAAYA,aAAiB9e,QAAW8e,EAAMI,QACrDjgB,EAAE0E,SAASmb,EAAMI,OAASjgB,EAAEsI,QAAQuX,EAAMI,SACzCJ,EAAMI,KAAOtb,KAAKC,UAAUib,EAAMI,KAAM,KAAM,IAGlDJ,EAAQA,EAAMK,QAAS,KAAML,EAAMI,MAGpCjgB,EAAE6E,SAASgb,KACVA,EAAQ,IAAI9e,MAAM8e,IAGlB7f,EAAEmgB,WAAWH,IACbA,EAASH,GAET7f,EAAEmgB,WAAWJ,MAGTD,GACC9f,EAAEmgB,WAAWL,EAAQM,YACtBN,EAAQM,UAAU,SAAShe,QAAWpC,EAAEmgB,WAAWH,KACnDF,EAAQO,OAAM,eAGlBC,YAAW,WACPP,EAAOF,KACR,IAGJC,GAAW9f,EAAEmgB,WAAWL,EAAQS,OAE/BD,YAAW,WACPR,EAAQS,KAAK,QAASV,GACtBC,EAAQU,uBACT,GAGAV,GAUPW,EAA+B,SAAUC,GACzC,GAAI1gB,EAAE0E,SAASgc,IAASA,EAAKlgB,OAAoC,IAA5BkgB,EAAKlgB,KAAKsE,QAAQ,KACnD,OAAO4b,EAAKlgB,KAGhB,IAAImgB,EAAWD,EAAKE,OAAOC,KAAI,SAASlf,GAAG,OAAOA,EAAEmf,QAASxe,KAAK,KAClE,OAAOoe,EAAKlgB,KAAO,IAAMmgB,EAAW,KAYpCI,EAAa,SAASpe,GACtB,IAAK8c,EAAMvc,YAAYP,GACnB,MAAM,IAAI5B,MAAM,6CAEpB,IAAI0B,EAAM,GACNd,EAAI,EAAGwB,EAAIR,EAAIP,OAInB,IAH4B,OAAxBO,EAAIqe,UAAU,EAAG,KACjBrf,EAAI,GAEDA,EAAIwB,EAAGxB,GAAG,EAAG,CAChB,IAAImB,EAAOlB,SAASe,EAAIS,OAAOzB,EAAG,GAAI,IACtCc,GAAOY,OAAOC,aAAaR,GAG/B,OAAOL,GAUPwe,EAAa,SAASxe,GACtB,IAAIA,EACA,MAAO,OAEX,IADA,IAAIE,EAAM,GACFhB,EAAI,EAAGA,EAAIc,EAAIL,OAAQT,IAAK,CAChC,IAAImB,EAAOL,EAAIM,WAAWpB,GACtBqB,EAAIF,EAAK5B,SAAS,IACtByB,GAAOK,EAAEZ,OAAS,EAAI,IAAMY,EAAIA,EAGpC,MAAO,KAAOL,GAadue,EAAe,SAAUC,GAEzB,GADAA,EAAOA,EAAOA,EAAKzf,cAAgB,SAC9B8d,EAAU4B,QAAQD,GACnB,MAAM,IAAIpgB,MAAM,cAAeogB,EAAM,8DAAgExc,KAAKC,UAAU4a,EAAU4B,QAAS,KAAM,IAEjJ,OAAOD,GAwBPE,EAAU,SAAS1gB,EAAQwgB,GAG3B,GAFAA,EAAOD,EAAaC,IAEhB1B,EAAMpf,KAAKM,KAAYX,EAAE6E,SAASlE,GAClC,MAAM,IAAII,MAAM,kFAGpB,OAAO0e,EAAMpf,KAAKM,GAAU6e,EAAU6B,QAAQ1gB,EAAQwgB,GAAQ3B,EAAU6B,QAAQ1gB,EAAQwgB,GAAMjgB,SAAS,KAyBvGogB,EAAQ,SAAS3gB,EAAQwgB,GAGzB,GAFAA,EAAOD,EAAaC,IAEhB1B,EAAMpf,KAAKM,KAAYX,EAAE6E,SAASlE,GAClC,MAAM,IAAII,MAAM,kFAGpB,OAAO0e,EAAMpf,KAAKM,GAAU6e,EAAU8B,MAAM3gB,EAAQwgB,GAAQ3B,EAAU8B,MAAM3gB,EAAQwgB,GAAMjgB,SAAS,KAanGqgB,EAAoB,SAAUngB,GAC9B,GAAuB,qBAAZA,EAAyB,MAAO,GAE3C,IAAI,uBAAuBC,KAAKD,GAC5B,MAAM,IAAIL,MAAM,kBAAmBK,EAAS,sCAIhDA,EAAUA,EAAQM,cAAcH,QAAQ,OAAO,IAI/C,IAHA,IAAIC,EAAcie,EAAMhe,KAAKL,GAASG,QAAQ,OAAO,IACjDigB,EAAkB,KAEb7f,EAAI,EAAGA,EAAIP,EAAQgB,OAAQT,IAE5BC,SAASJ,EAAYG,GAAI,IAAM,EAC/B6f,GAAmBpgB,EAAQO,GAAGE,cAE9B2f,GAAmBpgB,EAAQO,GAGnC,OAAO6f,GAKX/b,EAAOC,QAAU,CACbka,WAAYA,EACZa,6BAA8BA,EAG9Bd,UAAWA,EACX3f,EAAGA,EACHC,GAAIwf,EAAMxf,GACVI,KAAMof,EAAMpf,KACZI,YAAagf,EAAMhf,YACnBuE,MAAOya,EAAMza,MACb9B,YAAauc,EAAMvc,YACnBzB,KAAMge,EAAMhe,KACZ8D,UAAWka,EAAMhe,KACjBie,aAAcA,EACdve,UAAWse,EAAMte,UACjBG,qBAAsBme,EAAMne,qBAC5BigB,kBAAmBA,EACnBhd,MAAOkb,EAAMlb,MACb7D,KAAM+e,EAAM/e,KAEZwD,WAAYub,EAAMvb,WAClBG,WAAYob,EAAMpb,WAElBV,kBAAmB8b,EAAM9b,kBAEzBH,YAAaic,EAAMjc,YACnBie,UAAWhC,EAAMjc,YAEjBI,YAAa6b,EAAM7b,YACnB8d,YAAajC,EAAM7b,YAEnBX,UAAWwc,EAAMxc,UACjB0e,YAAalC,EAAMxc,UACnB2e,OAAQnC,EAAMxc,UAEdT,UAAWid,EAAMjd,UACjBqf,YAAapC,EAAMjd,UACnBsf,SAAUrC,EAAMjd,UAEhBue,WAAYA,EACZgB,QAAShB,EACTE,WAAYA,EACZe,UAAWf,EAEXG,QAAS5B,EAAU4B,QACnBE,MAAOA,EACPD,QAASA,EAETY,QAASxC,EAAM3d,QACfA,QAAS2d,EAAM3d,QACfogB,SAAUzC,EAAMld,SAChBA,SAAUkd,EAAMld,SAChBvB,iBAAkBye,EAAMze,mB,qBC7T5B,IAAI2E,EAAI,EAAQ,QACZyd,EAAgB,EAAQ,QAKxBxd,EAAe,SAAUmpB,GACzBjpB,KAAKC,gBAAkBgpB,EAAOC,eAC9BlpB,KAAKG,iBAAmB8oB,EAAOE,iBAUnCrpB,EAAaO,UAAUC,OAAS,SAAU5F,GACtC,KAAM,8CAAgDA,GAU1DoF,EAAaO,UAAU2gB,iBAAmB,SAAUtmB,GAEhD,OAAQsF,KAAKopB,YAAY1uB,IAAS,CAAC,QAC9BqgB,KAAI,SAAUC,GAEX,OAAOlf,SAASkf,EAAKuB,MAAM,GAAI,GAAI,KAAO,KAE7CsD,QAAO,SAAUwJ,EAAU/P,GACxB,OAAO+P,EAAW/P,IAEnB,KAaXxZ,EAAaO,UAAUggB,eAAiB,SAAU3lB,GAC9C,IAAI0uB,EAAcppB,KAAKopB,YAAY1uB,GACnC,QAAS0uB,IAAgBA,EAAYA,EAAY9sB,OAAS,GAAGiE,MAAM,eAavET,EAAaO,UAAUuhB,cAAgB,SAAUlnB,GAC7C,IAAI0uB,EAAcppB,KAAKopB,YAAY1uB,GACnC,QAAS0uB,KAAiBA,EAAYA,EAAY9sB,OAAS,GAAGiE,MAAM,eAiBxET,EAAaO,UAAUipB,kBAAoB,SAAU5uB,GACjD,IAAI0uB,EAAcppB,KAAKopB,YAAY1uB,GACnC,OAAI0uB,EACMttB,SAASstB,EAAYA,EAAY9sB,OAAS,GAAGiE,MAAM,eAAiB,GAEvE,GAgBXT,EAAaO,UAAUmhB,WAAa,SAAU9mB,GAE1C,IAAI0uB,EAAcppB,KAAKopB,YAAY1uB,GACnC,OAAK0uB,EAIE1uB,EAAK4C,OAAO,EAAG5C,EAAK4B,OAAS8sB,EAAYA,EAAY9sB,OAAS,GAAGA,QAH7D5B,GAcfoF,EAAaO,UAAUM,cAAgB,WACnC,OAAO,GAcXb,EAAaO,UAAU+oB,YAAc,SAAU1uB,GAE3C,OAAOA,EAAK6F,MAAM,kBAWtBT,EAAaO,UAAUzD,OAAS,SAAUe,EAAOjD,GAC7C,IAAIoK,EAAO9E,KACX,OAAIA,KAAKqgB,eAAe3lB,GAEb,WACH,IAAI4B,EAASqB,EAAMrB,OACfklB,EAAa1c,EAAK0c,WAAW9mB,GAE7BwD,EAAS,GAOb,OANAA,EAAOI,KAAKuB,EAAE0d,eAAejhB,GAAQM,UAErCe,EAAM0jB,SAAQ,SAAUlE,GACpBjf,EAAOI,KAAKwG,EAAKlI,OAAOugB,EAAGqE,OAGxBtjB,EAXJ,GAcA8B,KAAK4hB,cAAclnB,GAEnB,WAKH,IAJA,IAAI4B,EAASwI,EAAKwkB,kBAAkB5uB,GAChC8mB,EAAa1c,EAAK0c,WAAW9mB,GAE7BwD,EAAS,GACJrC,EAAI,EAAGA,EAAIS,EAAQT,IACxBqC,EAAOI,KAAKwG,EAAKlI,OAAOe,EAAM9B,GAAI2lB,IAGtC,OAAOtjB,EATJ,GAcJ8B,KAAKC,gBAAgBtC,EAAOjD,GAAMkC,UAY7CkD,EAAaO,UAAU5C,OAAS,SAAUY,EAAO6gB,EAAQxkB,GACrD,IAAIoK,EAAO9E,KAEX,GAAIA,KAAKqgB,eAAe3lB,GAEpB,OAAO,WAUH,IATA,IAAI6uB,EAAcztB,SAAS,KAAOuC,EAAMf,OAAgB,EAAT4hB,EAAY,KACvD5iB,EAASR,SAAS,KAAOuC,EAAMf,OAAqB,EAAdisB,EAAiB,KACvDC,EAAaD,EAAc,GAE3B/H,EAAa1c,EAAK0c,WAAW9mB,GAC7B+mB,EAAyB3c,EAAKkc,iBAAiBQ,GAC/CiI,EAAiF,GAAjDtnB,KAAKub,OAAO+D,EAAyB,IAAM,IAC3EvjB,EAAS,GAEJrC,EAAI,EAAGA,EAAIS,EAASmtB,EAA+B5tB,GAAK4tB,EAC7DvrB,EAAOI,KAAKwG,EAAKrH,OAAOY,EAAOmrB,EAAa3tB,EAAG2lB,IAGnD,OAAOtjB,EAdJ,GAiBJ,GAAI8B,KAAK4hB,cAAclnB,GAE1B,OAAO,WASH,IARA,IAAI4B,EAASwI,EAAKwkB,kBAAkB5uB,GAChC8uB,EAAatK,EAEbsC,EAAa1c,EAAK0c,WAAW9mB,GAC7B+mB,EAAyB3c,EAAKkc,iBAAiBQ,GAC/CiI,EAAiF,GAAjDtnB,KAAKub,OAAO+D,EAAyB,IAAM,IAC3EvjB,EAAS,GAEJrC,EAAI,EAAGA,EAAIS,EAASmtB,EAA+B5tB,GAAK4tB,EAC7DvrB,EAAOI,KAAKwG,EAAKrH,OAAOY,EAAOmrB,EAAa3tB,EAAG2lB,IAGnD,OAAOtjB,EAbJ,GAeJ,GAAI8B,KAAKW,cAAcjG,GAE1B,OAAO,WACH,IAAI0mB,EAAgBtlB,SAAS,KAAOuC,EAAMf,OAAgB,EAAT4hB,EAAY,KACzD5iB,EAASR,SAAS,KAAOuC,EAAMf,OAAuB,EAAhB8jB,EAAmB,KACzDsI,EAAgBvnB,KAAKub,OAAOphB,EAAS,IAAM,IAC3CwhB,EAAQ,IAAIR,EAAcjf,EAAMf,OAAuB,EAAhB8jB,EAA0C,IAArB,EAAIsI,IAAsB,EAAGrrB,GAC7F,OAAOyG,EAAK3E,iBAAiB2d,EAAOpjB,GALjC,GASX,IAAI4B,EAAS0D,KAAKghB,iBAAiBtmB,GAC/BojB,EAAQ,IAAIR,EAAcjf,EAAMf,OAAgB,EAAT4hB,EAAqB,EAAT5iB,QAAaijB,EAAWlhB,GAC/E,OAAO2B,KAAKG,iBAAiB2d,EAAOpjB,IAGxCiF,EAAOC,QAAUE,G,qBC9PjB,IAAID,EAAI,EAAQ,QACZC,EAAe,EAAQ,QAEvBqgB,EAAqB,WACrBngB,KAAKC,gBAAkBJ,EAAE8d,kBACzB3d,KAAKG,iBAAmBN,EAAEwe,oBAG9B8B,EAAmB9f,UAAY,IAAIP,EAAa,IAChDqgB,EAAmB9f,UAAU5F,YAAc0lB,EAE3CA,EAAmB9f,UAAUC,OAAS,SAAU5F,GAC5C,QAASA,EAAK6F,MAAM,4BAGxB4f,EAAmB9f,UAAUM,cAAgB,WACzC,OAAO,GAGXhB,EAAOC,QAAUugB","file":"js/chunk-78770a4e.c58554e0.js","sourcesContent":["/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file utils.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n\nvar _ = require('underscore');\nvar BN = require('bn.js');\nvar numberToBN = require('number-to-bn');\nvar utf8 = require('utf8');\nvar Hash = require(\"eth-lib/lib/hash\");\n\n\n/**\n * Returns true if object is BN, otherwise false\n *\n * @method isBN\n * @param {Object} object\n * @return {Boolean}\n */\nvar isBN = function (object) {\n    return object instanceof BN ||\n        (object && object.constructor && object.constructor.name === 'BN');\n};\n\n/**\n * Returns true if object is BigNumber, otherwise false\n *\n * @method isBigNumber\n * @param {Object} object\n * @return {Boolean}\n */\nvar isBigNumber = function (object) {\n    return object && object.constructor && object.constructor.name === 'BigNumber';\n};\n\n/**\n * Takes an input and transforms it into an BN\n *\n * @method toBN\n * @param {Number|String|BN} number, string, HEX string or BN\n * @return {BN} BN\n */\nvar toBN = function(number){\n    try {\n        return numberToBN.apply(null, arguments);\n    } catch(e) {\n        throw new Error(e + ' Given value: \"'+ number +'\"');\n    }\n};\n\n\n/**\n * Takes and input transforms it into BN and if it is negative value, into two's complement\n *\n * @method toTwosComplement\n * @param {Number|String|BN} number\n * @return {String}\n */\nvar toTwosComplement = function (number) {\n    return '0x'+ toBN(number).toTwos(256).toString(16, 64);\n};\n\n/**\n * Checks if the given string is an address\n *\n * @method isAddress\n * @param {String} address the given HEX address\n * @return {Boolean}\n */\nvar isAddress = function (address) {\n    // check if it has the basic requirements of an address\n    if (!/^(0x)?[0-9a-f]{40}$/i.test(address)) {\n        return false;\n        // If it's ALL lowercase or ALL upppercase\n    } else if (/^(0x|0X)?[0-9a-f]{40}$/.test(address) || /^(0x|0X)?[0-9A-F]{40}$/.test(address)) {\n        return true;\n        // Otherwise check each case\n    } else {\n        return checkAddressChecksum(address);\n    }\n};\n\n\n\n/**\n * Checks if the given string is a checksummed address\n *\n * @method checkAddressChecksum\n * @param {String} address the given HEX address\n * @return {Boolean}\n */\nvar checkAddressChecksum = function (address) {\n    // Check each case\n    address = address.replace(/^0x/i,'');\n    var addressHash = sha3(address.toLowerCase()).replace(/^0x/i,'');\n\n    for (var i = 0; i < 40; i++ ) {\n        // the nth letter should be uppercase if the nth digit of casemap is 1\n        if ((parseInt(addressHash[i], 16) > 7 && address[i].toUpperCase() !== address[i]) || (parseInt(addressHash[i], 16) <= 7 && address[i].toLowerCase() !== address[i])) {\n            return false;\n        }\n    }\n    return true;\n};\n\n/**\n * Should be called to pad string to expected length\n *\n * @method leftPad\n * @param {String} string to be padded\n * @param {Number} chars that result string should have\n * @param {String} sign, by default 0\n * @returns {String} right aligned string\n */\nvar leftPad = function (string, chars, sign) {\n    var hasPrefix = /^0x/i.test(string) || typeof string === 'number';\n    string = string.toString(16).replace(/^0x/i,'');\n\n    var padding = (chars - string.length + 1 >= 0) ? chars - string.length + 1 : 0;\n\n    return (hasPrefix ? '0x' : '') + new Array(padding).join(sign ? sign : \"0\") + string;\n};\n\n/**\n * Should be called to pad string to expected length\n *\n * @method rightPad\n * @param {String} string to be padded\n * @param {Number} chars that result string should have\n * @param {String} sign, by default 0\n * @returns {String} right aligned string\n */\nvar rightPad = function (string, chars, sign) {\n    var hasPrefix = /^0x/i.test(string) || typeof string === 'number';\n    string = string.toString(16).replace(/^0x/i,'');\n\n    var padding = (chars - string.length + 1 >= 0) ? chars - string.length + 1 : 0;\n\n    return (hasPrefix ? '0x' : '') + string + (new Array(padding).join(sign ? sign : \"0\"));\n};\n\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n *\n * @method utf8ToHex\n * @param {String} str\n * @returns {String} hex representation of input string\n */\nvar utf8ToHex = function(str) {\n    str = utf8.encode(str);\n    var hex = \"\";\n\n    // remove \\u0000 padding from either side\n    str = str.replace(/^(?:\\u0000)*/,'');\n    str = str.split(\"\").reverse().join(\"\");\n    str = str.replace(/^(?:\\u0000)*/,'');\n    str = str.split(\"\").reverse().join(\"\");\n\n    for(var i = 0; i < str.length; i++) {\n        var code = str.charCodeAt(i);\n        // if (code !== 0) {\n        var n = code.toString(16);\n        hex += n.length < 2 ? '0' + n : n;\n        // }\n    }\n\n    return \"0x\" + hex;\n};\n\n/**\n * Should be called to get utf8 from it's hex representation\n *\n * @method hexToUtf8\n * @param {String} hex\n * @returns {String} ascii string representation of hex value\n */\nvar hexToUtf8 = function(hex) {\n    if (!isHexStrict(hex))\n        throw new Error('The parameter \"'+ hex +'\" must be a valid HEX string.');\n\n    var str = \"\";\n    var code = 0;\n    hex = hex.replace(/^0x/i,'');\n\n    // remove 00 padding from either side\n    hex = hex.replace(/^(?:00)*/,'');\n    hex = hex.split(\"\").reverse().join(\"\");\n    hex = hex.replace(/^(?:00)*/,'');\n    hex = hex.split(\"\").reverse().join(\"\");\n\n    var l = hex.length;\n\n    for (var i=0; i < l; i+=2) {\n        code = parseInt(hex.substr(i, 2), 16);\n        // if (code !== 0) {\n        str += String.fromCharCode(code);\n        // }\n    }\n\n    return utf8.decode(str);\n};\n\n\n/**\n * Converts value to it's number representation\n *\n * @method hexToNumber\n * @param {String|Number|BN} value\n * @return {String}\n */\nvar hexToNumber = function (value) {\n    if (!value) {\n        return value;\n    }\n\n    return toBN(value).toNumber();\n};\n\n/**\n * Converts value to it's decimal representation in string\n *\n * @method hexToNumberString\n * @param {String|Number|BN} value\n * @return {String}\n */\nvar hexToNumberString = function (value) {\n    if (!value) return value;\n\n    return toBN(value).toString(10);\n};\n\n\n/**\n * Converts value to it's hex representation\n *\n * @method numberToHex\n * @param {String|Number|BN} value\n * @return {String}\n */\nvar numberToHex = function (value) {\n    if (_.isNull(value) || _.isUndefined(value)) {\n        return value;\n    }\n\n    if (!isFinite(value) && !isHexStrict(value)) {\n        throw new Error('Given input \"'+value+'\" is not a number.');\n    }\n\n    var number = toBN(value);\n    var result = number.toString(16);\n\n    return number.lt(new BN(0)) ? '-0x' + result.substr(1) : '0x' + result;\n};\n\n\n/**\n * Convert a byte array to a hex string\n *\n * Note: Implementation from crypto-js\n *\n * @method bytesToHex\n * @param {Array} bytes\n * @return {String} the hex string\n */\nvar bytesToHex = function(bytes) {\n    for (var hex = [], i = 0; i < bytes.length; i++) {\n        /* jshint ignore:start */\n        hex.push((bytes[i] >>> 4).toString(16));\n        hex.push((bytes[i] & 0xF).toString(16));\n        /* jshint ignore:end */\n    }\n    return '0x'+ hex.join(\"\");\n};\n\n/**\n * Convert a hex string to a byte array\n *\n * Note: Implementation from crypto-js\n *\n * @method hexToBytes\n * @param {string} hex\n * @return {Array} the byte array\n */\nvar hexToBytes = function(hex) {\n    hex = hex.toString(16);\n\n    if (!isHexStrict(hex)) {\n        throw new Error('Given value \"'+ hex +'\" is not a valid hex string.');\n    }\n\n    hex = hex.replace(/^0x/i,'');\n\n    for (var bytes = [], c = 0; c < hex.length; c += 2)\n        bytes.push(parseInt(hex.substr(c, 2), 16));\n    return bytes;\n};\n\n/**\n * Auto converts any given value into it's hex representation.\n *\n * And even stringifys objects before.\n *\n * @method toHex\n * @param {String|Number|BN|Object} value\n * @param {Boolean} returnType\n * @return {String}\n */\nvar toHex = function (value, returnType) {\n    /*jshint maxcomplexity: false */\n\n    if (isAddress(value)) {\n        return returnType ? 'address' : '0x'+ value.toLowerCase().replace(/^0x/i,'');\n    }\n\n    if (_.isBoolean(value)) {\n        return returnType ? 'bool' : value ? '0x01' : '0x00';\n    }\n\n\n    if (_.isObject(value) && !isBigNumber(value) && !isBN(value)) {\n        return returnType ? 'string' : utf8ToHex(JSON.stringify(value));\n    }\n\n    // if its a negative number, pass it through numberToHex\n    if (_.isString(value)) {\n        if (value.indexOf('-0x') === 0 || value.indexOf('-0X') === 0) {\n            return returnType ? 'int256' : numberToHex(value);\n        } else if(value.indexOf('0x') === 0 || value.indexOf('0X') === 0) {\n            return returnType ? 'bytes' : value;\n        } else if (!isFinite(value)) {\n            return returnType ? 'string' : utf8ToHex(value);\n        }\n    }\n\n    return returnType ? (value < 0 ? 'int256' : 'uint256') : numberToHex(value);\n};\n\n\n/**\n * Check if string is HEX, requires a 0x in front\n *\n * @method isHexStrict\n * @param {String} hex to be checked\n * @returns {Boolean}\n */\nvar isHexStrict = function (hex) {\n    return ((_.isString(hex) || _.isNumber(hex)) && /^(-)?0x[0-9a-f]*$/i.test(hex));\n};\n\n/**\n * Check if string is HEX\n *\n * @method isHex\n * @param {String} hex to be checked\n * @returns {Boolean}\n */\nvar isHex = function (hex) {\n    return ((_.isString(hex) || _.isNumber(hex)) && /^(-0x|0x)?[0-9a-f]*$/i.test(hex));\n};\n\n\n/**\n * Returns true if given string is a valid Ethereum block header bloom.\n *\n * TODO UNDOCUMENTED\n *\n * @method isBloom\n * @param {String} hex encoded bloom filter\n * @return {Boolean}\n */\nvar isBloom = function (bloom) {\n    if (!/^(0x)?[0-9a-f]{512}$/i.test(bloom)) {\n        return false;\n    } else if (/^(0x)?[0-9a-f]{512}$/.test(bloom) || /^(0x)?[0-9A-F]{512}$/.test(bloom)) {\n        return true;\n    }\n    return false;\n};\n\n/**\n * Returns true if given string is a valid log topic.\n *\n * TODO UNDOCUMENTED\n *\n * @method isTopic\n * @param {String} hex encoded topic\n * @return {Boolean}\n */\nvar isTopic = function (topic) {\n    if (!/^(0x)?[0-9a-f]{64}$/i.test(topic)) {\n        return false;\n    } else if (/^(0x)?[0-9a-f]{64}$/.test(topic) || /^(0x)?[0-9A-F]{64}$/.test(topic)) {\n        return true;\n    }\n    return false;\n};\n\n\n/**\n * Hashes values to a sha3 hash using keccak 256\n *\n * To hash a HEX string the hex must have 0x in front.\n *\n * @method sha3\n * @return {String} the sha3 string\n */\nvar SHA3_NULL_S = '0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470';\n\nvar sha3 = function (value) {\n    if (isHexStrict(value) && /^0x/i.test((value).toString())) {\n        value = hexToBytes(value);\n    }\n\n    var returnValue = Hash.keccak256(value); // jshint ignore:line\n\n    if(returnValue === SHA3_NULL_S) {\n        return null;\n    } else {\n        return returnValue;\n    }\n};\n// expose the under the hood keccak256\nsha3._Hash = Hash;\n\n\nmodule.exports = {\n    BN: BN,\n    isBN: isBN,\n    isBigNumber: isBigNumber,\n    toBN: toBN,\n    isAddress: isAddress,\n    isBloom: isBloom, // TODO UNDOCUMENTED\n    isTopic: isTopic, // TODO UNDOCUMENTED\n    checkAddressChecksum: checkAddressChecksum,\n    utf8ToHex: utf8ToHex,\n    hexToUtf8: hexToUtf8,\n    hexToNumber: hexToNumber,\n    hexToNumberString: hexToNumberString,\n    numberToHex: numberToHex,\n    toHex: toHex,\n    hexToBytes: hexToBytes,\n    bytesToHex: bytesToHex,\n    isHex: isHex,\n    isHexStrict: isHexStrict,\n    leftPad: leftPad,\n    rightPad: rightPad,\n    toTwosComplement: toTwosComplement,\n    sha3: sha3\n};\n","var f = require('../formatters');\nvar SolidityType = require('../type');\n\n/**\n * SolidityTypeBool is a protoype that represents bool type\n * It matches:\n * bool\n * bool[]\n * bool[4]\n * bool[][]\n * bool[3][]\n * bool[][6][], ...\n */\nvar SolidityTypeBool = function () {\n    this._inputFormatter = f.formatInputBool;\n    this._outputFormatter = f.formatOutputBool;\n};\n\nSolidityTypeBool.prototype = new SolidityType({});\nSolidityTypeBool.prototype.constructor = SolidityTypeBool;\n\nSolidityTypeBool.prototype.isType = function (name) {\n    return !!name.match(/^bool(\\[([0-9]*)\\])*$/);\n};\n\nmodule.exports = SolidityTypeBool;\n","var f = require('../formatters');\nvar SolidityType = require('../type');\n\nvar SolidityTypeDynamicBytes = function () {\n    this._inputFormatter = f.formatInputDynamicBytes;\n    this._outputFormatter = f.formatOutputDynamicBytes;\n};\n\nSolidityTypeDynamicBytes.prototype = new SolidityType({});\nSolidityTypeDynamicBytes.prototype.constructor = SolidityTypeDynamicBytes;\n\nSolidityTypeDynamicBytes.prototype.isType = function (name) {\n    return !!name.match(/^bytes(\\[([0-9]*)\\])*$/);\n};\n\nSolidityTypeDynamicBytes.prototype.isDynamicType = function () {\n    return true;\n};\n\nmodule.exports = SolidityTypeDynamicBytes;\n","/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file index.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n\n\"use strict\";\n\nvar errors = require('./errors');\nvar formatters = require('./formatters');\n\nmodule.exports = {\n    errors: errors,\n    formatters: formatters\n};\n\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buf' + 'fer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      r.strip();\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file utils.js\n * @author Marek Kotewicz <marek@parity.io>\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n\n\nvar _ = require('underscore');\nvar ethjsUnit = require('ethjs-unit');\nvar utils = require('./utils.js');\nvar soliditySha3 = require('./soliditySha3.js');\nvar randomHex = require('randomhex');\n\n\n\n/**\n * Fires an error in an event emitter and callback and returns the eventemitter\n *\n * @method _fireError\n * @param {Object} error a string, a error, or an object with {message, data}\n * @param {Object} emitter\n * @param {Function} reject\n * @param {Function} callback\n * @return {Object} the emitter\n */\nvar _fireError = function (error, emitter, reject, callback) {\n    /*jshint maxcomplexity: 10 */\n\n    // add data if given\n    if(_.isObject(error) && !(error instanceof Error) &&  error.data) {\n        if(_.isObject(error.data) || _.isArray(error.data)) {\n            error.data = JSON.stringify(error.data, null, 2);\n        }\n\n        error = error.message +\"\\n\"+ error.data;\n    }\n\n    if(_.isString(error)) {\n        error = new Error(error);\n    }\n\n    if (_.isFunction(callback)) {\n        callback(error);\n    }\n    if (_.isFunction(reject)) {\n        // suppress uncatched error if an error listener is present\n        // OR suppress uncatched error if an callback listener is present\n        if (emitter &&\n            (_.isFunction(emitter.listeners) &&\n            emitter.listeners('error').length) || _.isFunction(callback)) {\n            emitter.catch(function(){});\n        }\n        // reject later, to be able to return emitter\n        setTimeout(function () {\n            reject(error);\n        }, 1);\n    }\n\n    if(emitter && _.isFunction(emitter.emit)) {\n        // emit later, to be able to return emitter\n        setTimeout(function () {\n            emitter.emit('error', error);\n            emitter.removeAllListeners();\n        }, 1);\n    }\n\n    return emitter;\n};\n\n/**\n * Should be used to create full function/event name from json abi\n *\n * @method _jsonInterfaceMethodToString\n * @param {Object} json\n * @return {String} full function/event name\n */\nvar _jsonInterfaceMethodToString = function (json) {\n    if (_.isObject(json) && json.name && json.name.indexOf('(') !== -1) {\n        return json.name;\n    }\n\n    var typeName = json.inputs.map(function(i){return i.type; }).join(',');\n    return json.name + '(' + typeName + ')';\n};\n\n\n\n/**\n * Should be called to get ascii from it's hex representation\n *\n * @method hexToAscii\n * @param {String} hex\n * @returns {String} ascii string representation of hex value\n */\nvar hexToAscii = function(hex) {\n    if (!utils.isHexStrict(hex))\n        throw new Error('The parameter must be a valid HEX string.');\n\n    var str = \"\";\n    var i = 0, l = hex.length;\n    if (hex.substring(0, 2) === '0x') {\n        i = 2;\n    }\n    for (; i < l; i+=2) {\n        var code = parseInt(hex.substr(i, 2), 16);\n        str += String.fromCharCode(code);\n    }\n\n    return str;\n};\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @method asciiToHex\n * @param {String} str\n * @returns {String} hex representation of input string\n */\nvar asciiToHex = function(str) {\n    if(!str)\n        return \"0x00\";\n    var hex = \"\";\n    for(var i = 0; i < str.length; i++) {\n        var code = str.charCodeAt(i);\n        var n = code.toString(16);\n        hex += n.length < 2 ? '0' + n : n;\n    }\n\n    return \"0x\" + hex;\n};\n\n\n\n/**\n * Returns value of unit in Wei\n *\n * @method getUnitValue\n * @param {String} unit the unit to convert to, default ether\n * @returns {BN} value of the unit (in Wei)\n * @throws error if the unit is not correct:w\n */\nvar getUnitValue = function (unit) {\n    unit = unit ? unit.toLowerCase() : 'ether';\n    if (!ethjsUnit.unitMap[unit]) {\n        throw new Error('This unit \"'+ unit +'\" doesn\\'t exist, please use the one of the following units' + JSON.stringify(ethjsUnit.unitMap, null, 2));\n    }\n    return unit;\n};\n\n/**\n * Takes a number of wei and converts it to any other ether unit.\n *\n * Possible units are:\n *   SI Short   SI Full        Effigy       Other\n * - kwei       femtoether     babbage\n * - mwei       picoether      lovelace\n * - gwei       nanoether      shannon      nano\n * - --         microether     szabo        micro\n * - --         milliether     finney       milli\n * - ether      --             --\n * - kether                    --           grand\n * - mether\n * - gether\n * - tether\n *\n * @method fromWei\n * @param {Number|String} number can be a number, number string or a HEX of a decimal\n * @param {String} unit the unit to convert to, default ether\n * @return {String|Object} When given a BN object it returns one as well, otherwise a number\n */\nvar fromWei = function(number, unit) {\n    unit = getUnitValue(unit);\n\n    if(!utils.isBN(number) && !_.isString(number)) {\n        throw new Error('Please pass numbers as strings or BigNumber objects to avoid precision errors.');\n    }\n\n    return utils.isBN(number) ? ethjsUnit.fromWei(number, unit) : ethjsUnit.fromWei(number, unit).toString(10);\n};\n\n/**\n * Takes a number of a unit and converts it to wei.\n *\n * Possible units are:\n *   SI Short   SI Full        Effigy       Other\n * - kwei       femtoether     babbage\n * - mwei       picoether      lovelace\n * - gwei       nanoether      shannon      nano\n * - --         microether     szabo        micro\n * - --         microether     szabo        micro\n * - --         milliether     finney       milli\n * - ether      --             --\n * - kether                    --           grand\n * - mether\n * - gether\n * - tether\n *\n * @method toWei\n * @param {Number|String|BN} number can be a number, number string or a HEX of a decimal\n * @param {String} unit the unit to convert from, default ether\n * @return {String|Object} When given a BN object it returns one as well, otherwise a number\n */\nvar toWei = function(number, unit) {\n    unit = getUnitValue(unit);\n\n    if(!utils.isBN(number) && !_.isString(number)) {\n        throw new Error('Please pass numbers as strings or BigNumber objects to avoid precision errors.');\n    }\n\n    return utils.isBN(number) ? ethjsUnit.toWei(number, unit) : ethjsUnit.toWei(number, unit).toString(10);\n};\n\n\n\n\n/**\n * Converts to a checksum address\n *\n * @method toChecksumAddress\n * @param {String} address the given HEX address\n * @return {String}\n */\nvar toChecksumAddress = function (address) {\n    if (typeof address === 'undefined') return '';\n\n    if(!/^(0x)?[0-9a-f]{40}$/i.test(address))\n        throw new Error('Given address \"'+ address +'\" is not a valid Ethereum address.');\n\n\n\n    address = address.toLowerCase().replace(/^0x/i,'');\n    var addressHash = utils.sha3(address).replace(/^0x/i,'');\n    var checksumAddress = '0x';\n\n    for (var i = 0; i < address.length; i++ ) {\n        // If ith character is 9 to f then make it uppercase\n        if (parseInt(addressHash[i], 16) > 7) {\n            checksumAddress += address[i].toUpperCase();\n        } else {\n            checksumAddress += address[i];\n        }\n    }\n    return checksumAddress;\n};\n\n\n\nmodule.exports = {\n    _fireError: _fireError,\n    _jsonInterfaceMethodToString: _jsonInterfaceMethodToString,\n    // extractDisplayName: extractDisplayName,\n    // extractTypeName: extractTypeName,\n    randomHex: randomHex,\n    _: _,\n    BN: utils.BN,\n    isBN: utils.isBN,\n    isBigNumber: utils.isBigNumber,\n    isHex: utils.isHex,\n    isHexStrict: utils.isHexStrict,\n    sha3: utils.sha3,\n    keccak256: utils.sha3,\n    soliditySha3: soliditySha3,\n    isAddress: utils.isAddress,\n    checkAddressChecksum: utils.checkAddressChecksum,\n    toChecksumAddress: toChecksumAddress,\n    toHex: utils.toHex,\n    toBN: utils.toBN,\n\n    bytesToHex: utils.bytesToHex,\n    hexToBytes: utils.hexToBytes,\n\n    hexToNumberString: utils.hexToNumberString,\n\n    hexToNumber: utils.hexToNumber,\n    toDecimal: utils.hexToNumber, // alias\n\n    numberToHex: utils.numberToHex,\n    fromDecimal: utils.numberToHex, // alias\n\n    hexToUtf8: utils.hexToUtf8,\n    hexToString: utils.hexToUtf8,\n    toUtf8: utils.hexToUtf8,\n\n    utf8ToHex: utils.utf8ToHex,\n    stringToHex: utils.utf8ToHex,\n    fromUtf8: utils.utf8ToHex,\n\n    hexToAscii: hexToAscii,\n    toAscii: hexToAscii,\n    asciiToHex: asciiToHex,\n    fromAscii: asciiToHex,\n\n    unitMap: ethjsUnit.unitMap,\n    toWei: toWei,\n    fromWei: fromWei,\n\n    padLeft: utils.leftPad,\n    leftPad: utils.leftPad,\n    padRight: utils.rightPad,\n    rightPad: utils.rightPad,\n    toTwosComplement: utils.toTwosComplement\n};\n\n","/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file soliditySha3.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n\nvar _ = require('underscore');\nvar BN = require('bn.js');\nvar utils = require('./utils.js');\n\n\nvar _elementaryName = function (name) {\n    /*jshint maxcomplexity:false */\n\n    if (name.startsWith('int[')) {\n        return 'int256' + name.slice(3);\n    } else if (name === 'int') {\n        return 'int256';\n    } else if (name.startsWith('uint[')) {\n        return 'uint256' + name.slice(4);\n    } else if (name === 'uint') {\n        return 'uint256';\n    } else if (name.startsWith('fixed[')) {\n        return 'fixed128x128' + name.slice(5);\n    } else if (name === 'fixed') {\n        return 'fixed128x128';\n    } else if (name.startsWith('ufixed[')) {\n        return 'ufixed128x128' + name.slice(6);\n    } else if (name === 'ufixed') {\n        return 'ufixed128x128';\n    }\n    return name;\n};\n\n// Parse N from type<N>\nvar _parseTypeN = function (type) {\n    var typesize = /^\\D+(\\d+).*$/.exec(type);\n    return typesize ? parseInt(typesize[1], 10) : null;\n};\n\n// Parse N from type[<N>]\nvar _parseTypeNArray = function (type) {\n    var arraySize = /^\\D+\\d*\\[(\\d+)\\]$/.exec(type);\n    return arraySize ? parseInt(arraySize[1], 10) : null;\n};\n\nvar _parseNumber = function (arg) {\n    var type = typeof arg;\n    if (type === 'string') {\n        if (utils.isHexStrict(arg)) {\n            return new BN(arg.replace(/0x/i,''), 16);\n        } else {\n            return new BN(arg, 10);\n        }\n    } else if (type === 'number') {\n        return new BN(arg);\n    } else if (utils.isBigNumber(arg)) {\n        return new BN(arg.toString(10));\n    } else if (utils.isBN(arg)) {\n        return arg;\n    } else {\n        throw new Error(arg +' is not a number');\n    }\n};\n\nvar _solidityPack = function (type, value, arraySize) {\n    /*jshint maxcomplexity:false */\n\n    var size, num;\n    type = _elementaryName(type);\n\n\n    if (type === 'bytes') {\n\n        if (value.replace(/^0x/i,'').length % 2 !== 0) {\n            throw new Error('Invalid bytes characters '+ value.length);\n        }\n\n        return value;\n    } else if (type === 'string') {\n        return utils.utf8ToHex(value);\n    } else if (type === 'bool') {\n        return value ? '01' : '00';\n    } else if (type.startsWith('address')) {\n        if(arraySize) {\n            size = 64;\n        } else {\n            size = 40;\n        }\n\n        if(!utils.isAddress(value)) {\n            throw new Error(value +' is not a valid address, or the checksum is invalid.');\n        }\n\n        return utils.leftPad(value.toLowerCase(), size);\n    }\n\n    size = _parseTypeN(type);\n\n    if (type.startsWith('bytes')) {\n\n        if(!size) {\n            throw new Error('bytes[] not yet supported in solidity');\n        }\n\n        // must be 32 byte slices when in an array\n        if(arraySize) {\n            size = 32;\n        }\n\n        if (size < 1 || size > 32 || size < value.replace(/^0x/i,'').length / 2 ) {\n            throw new Error('Invalid bytes' + size +' for '+ value);\n        }\n\n        return utils.rightPad(value, size * 2);\n    } else if (type.startsWith('uint')) {\n\n        if ((size % 8) || (size < 8) || (size > 256)) {\n            throw new Error('Invalid uint'+size+' size');\n        }\n\n        num = _parseNumber(value);\n        if (num.bitLength() > size) {\n            throw new Error('Supplied uint exceeds width: ' + size + ' vs ' + num.bitLength());\n        }\n\n        if(num.lt(new BN(0))) {\n            throw new Error('Supplied uint '+ num.toString() +' is negative');\n        }\n\n        return size ? utils.leftPad(num.toString('hex'), size/8 * 2) : num;\n    } else if (type.startsWith('int')) {\n\n        if ((size % 8) || (size < 8) || (size > 256)) {\n            throw new Error('Invalid int'+size+' size');\n        }\n\n        num = _parseNumber(value);\n        if (num.bitLength() > size) {\n            throw new Error('Supplied int exceeds width: ' + size + ' vs ' + num.bitLength());\n        }\n\n        if(num.lt(new BN(0))) {\n            return num.toTwos(size).toString('hex');\n        } else {\n            return size ? utils.leftPad(num.toString('hex'), size/8 * 2) : num;\n        }\n\n    } else {\n        // FIXME: support all other types\n        throw new Error('Unsupported or invalid type: ' + type);\n    }\n};\n\n\nvar _processSoliditySha3Args = function (arg) {\n    /*jshint maxcomplexity:false */\n\n    if(_.isArray(arg)) {\n        throw new Error('Autodetection of array types is not supported.');\n    }\n\n    var type, value = '';\n    var hexArg, arraySize;\n\n    // if type is given\n    if (_.isObject(arg) && (arg.hasOwnProperty('v') || arg.hasOwnProperty('t') || arg.hasOwnProperty('value') || arg.hasOwnProperty('type'))) {\n        type = arg.hasOwnProperty('t') ? arg.t : arg.type;\n        value = arg.hasOwnProperty('v') ? arg.v : arg.value;\n\n    // otherwise try to guess the type\n    } else {\n\n        type = utils.toHex(arg, true);\n        value = utils.toHex(arg);\n\n        if (!type.startsWith('int') && !type.startsWith('uint')) {\n            type = 'bytes';\n        }\n    }\n\n    if ((type.startsWith('int') || type.startsWith('uint')) &&  typeof value === 'string' && !/^(-)?0x/i.test(value)) {\n        value = new BN(value);\n    }\n\n    // get the array size\n    if(_.isArray(value)) {\n        arraySize = _parseTypeNArray(type);\n        if(arraySize && value.length !== arraySize) {\n            throw new Error(type +' is not matching the given array '+ JSON.stringify(value));\n        } else {\n            arraySize = value.length;\n        }\n    }\n\n\n    if (_.isArray(value)) {\n        hexArg = value.map(function (val) {\n            return _solidityPack(type, val, arraySize).toString('hex').replace('0x','');\n        });\n        return hexArg.join('');\n    } else {\n        hexArg = _solidityPack(type, value, arraySize);\n        return hexArg.toString('hex').replace('0x','');\n    }\n\n};\n\n/**\n * Hashes solidity values to a sha3 hash using keccak 256\n *\n * @method soliditySha3\n * @return {Object} the sha3\n */\nvar soliditySha3 = function () {\n    /*jshint maxcomplexity:false */\n\n    var args = Array.prototype.slice.call(arguments);\n\n    var hexArgs = _.map(args, _processSoliditySha3Args);\n\n    // console.log(args, hexArgs);\n    // console.log('0x'+ hexArgs.join(''));\n\n    return utils.sha3('0x'+ hexArgs.join(''));\n};\n\n\nmodule.exports = soliditySha3;\n","/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file formatters.js\n * @author Marek Kotewicz <marek@parity.io>\n * @author Fabian Vogelsteller <fabian@frozeman.de>\n * @date 2017\n */\n\nvar _ = require('underscore');\nvar utils = require('web3-utils');\nvar BN = require('bn.js');\nvar SolidityParam = require('./param');\n\n\n\n/**\n * Formats input value to byte representation of int\n * If value is negative, return it's two's complement\n * If the value is floating point, round it down\n *\n * @method formatInputInt\n * @param {String|Number|BN} value that needs to be formatted\n * @returns {SolidityParam}\n */\nvar formatInputInt = function (value) {\n    if(_.isNumber(value)) {\n        value = Math.trunc(value);\n    }\n    return new SolidityParam(utils.toTwosComplement(value).replace('0x',''));\n};\n\n/**\n * Formats input bytes\n *\n * @method formatInputBytes\n * @param {String} value\n * @returns {SolidityParam}\n */\nvar formatInputBytes = function (value) {\n    if(!utils.isHexStrict(value)) {\n        throw new Error('Given parameter is not bytes: \"'+ value + '\"');\n    }\n\n    var result = value.replace(/^0x/i,'');\n\n    if(result.length % 2 !== 0) {\n        throw new Error('Given parameter bytes has an invalid length: \"'+ value + '\"');\n    }\n\n    if (result.length > 64) {\n        throw new Error('Given parameter bytes is too long: \"' + value + '\"');\n    }\n\n    var l = Math.floor((result.length + 63) / 64);\n    result = utils.padRight(result, l * 64);\n    return new SolidityParam(result);\n};\n\n/**\n * Formats input bytes\n *\n * @method formatDynamicInputBytes\n * @param {String} value\n * @returns {SolidityParam}\n */\nvar formatInputDynamicBytes = function (value) {\n    if(!utils.isHexStrict(value)) {\n        throw new Error('Given parameter is not bytes: \"'+ value + '\"');\n    }\n\n    var result = value.replace(/^0x/i,'');\n\n    if(result.length % 2 !== 0) {\n        throw new Error('Given parameter bytes has an invalid length: \"'+ value + '\"');\n    }\n\n    var length = result.length / 2;\n    var l = Math.floor((result.length + 63) / 64);\n    result = utils.padRight(result, l * 64);\n    return new SolidityParam(formatInputInt(length).value + result);\n};\n\n/**\n * Formats input value to byte representation of string\n *\n * @method formatInputString\n * @param {String}\n * @returns {SolidityParam}\n */\nvar formatInputString = function (value) {\n    if(!_.isString(value)) {\n        throw new Error('Given parameter is not a valid string: ' + value);\n    }\n\n    var result = utils.utf8ToHex(value).replace(/^0x/i,'');\n    var length = result.length / 2;\n    var l = Math.floor((result.length + 63) / 64);\n    result = utils.padRight(result, l * 64);\n    return new SolidityParam(formatInputInt(length).value + result);\n};\n\n/**\n * Formats input value to byte representation of bool\n *\n * @method formatInputBool\n * @param {Boolean}\n * @returns {SolidityParam}\n */\nvar formatInputBool = function (value) {\n    var result = '000000000000000000000000000000000000000000000000000000000000000' + (value ?  '1' : '0');\n    return new SolidityParam(result);\n};\n\n\n/**\n * Check if input value is negative\n *\n * @method signedIsNegative\n * @param {String} value is hex format\n * @returns {Boolean} true if it is negative, otherwise false\n */\nvar signedIsNegative = function (value) {\n    return (new BN(value.substr(0, 1), 16).toString(2).substr(0, 1)) === '1';\n};\n\n/**\n * Formats right-aligned output bytes to int\n *\n * @method formatOutputInt\n * @param {SolidityParam} param\n * @returns {BN} right-aligned output bytes formatted to big number\n */\nvar formatOutputInt = function (param) {\n    var value = param.staticPart();\n\n    if(!value && !param.rawValue) {\n        throw new Error('Couldn\\'t decode '+ name +' from ABI: 0x'+ param.rawValue);\n    }\n\n    // check if it's negative number\n    // it it is, return two's complement\n    if (signedIsNegative(value)) {\n        return new BN(value, 16).fromTwos(256).toString(10);\n    }\n    return new BN(value, 16).toString(10);\n};\n\n/**\n * Formats right-aligned output bytes to uint\n *\n * @method formatOutputUInt\n * @param {SolidityParam} param\n * @returns {BN} right-aligned output bytes formatted to uint\n */\nvar formatOutputUInt = function (param, name) {\n    var value = param.staticPart();\n\n    if(!value && !param.rawValue) {\n        throw new Error('Couldn\\'t decode '+ name +' from ABI: 0x'+ param.rawValue);\n    }\n\n    return new BN(value, 16).toString(10);\n};\n\n\n\n/**\n * Should be used to format output bool\n *\n * @method formatOutputBool\n * @param {SolidityParam} param\n * @param {String} name type name\n * @returns {Boolean} right-aligned input bytes formatted to bool\n */\nvar formatOutputBool = function (param, name) {\n    var value = param.staticPart();\n\n    if(!value && !param.rawValue) {\n        throw new Error('Couldn\\'t decode '+ name +' from ABI: 0x'+ param.rawValue);\n    }\n\n    return (value === '0000000000000000000000000000000000000000000000000000000000000001');\n};\n\n/**\n * Should be used to format output bytes\n *\n * @method formatOutputBytes\n * @param {SolidityParam} param left-aligned hex representation of string\n * @param {String} name type name\n * @returns {String} hex string\n */\nvar formatOutputBytes = function (param, name) {\n    var matches = name.match(/^bytes([0-9]*)/);\n    var size = parseInt(matches[1]);\n\n    if(param.staticPart().slice(0, 2 * size).length !== size * 2) {\n        throw new Error('Couldn\\'t decode '+ name +' from ABI: 0x'+ param.rawValue + ' The size doesn\\'t match.');\n    }\n\n    return '0x' + param.staticPart().slice(0, 2 * size);\n};\n\n/**\n * Should be used to format output bytes\n *\n * @method formatOutputDynamicBytes\n * @param {SolidityParam} param left-aligned hex representation of string\n * @param {String} name type name\n * @returns {String} hex string\n */\nvar formatOutputDynamicBytes = function (param, name) {\n    var hex = param.dynamicPart().slice(0, 64);\n\n    if (!hex) {\n        throw new Error('Couldn\\'t decode '+ name +' from ABI: 0x'+ param.rawValue);\n    }\n\n    var length = (new BN(hex, 16)).toNumber() * 2;\n    return '0x' + param.dynamicPart().substr(64, length);\n};\n\n/**\n * Should be used to format output string\n *\n * @method formatOutputString\n * @param {SolidityParam} left-aligned hex representation of string\n * @returns {String} ascii string\n */\nvar formatOutputString = function (param) {\n    var hex = param.dynamicPart().slice(0, 64);\n\n    if(!hex) {\n        throw new Error('ERROR: The returned value is not a convertible string:'+ hex);\n    }\n\n    var length = (new BN(hex, 16)).toNumber() * 2;\n    return length ? utils.hexToUtf8('0x'+ param.dynamicPart().substr(64, length).replace(/^0x/i, '')) : '';\n};\n\n/**\n * Should be used to format output address\n *\n * @method formatOutputAddress\n * @param {SolidityParam} param right-aligned input bytes\n * @param {String} name type name\n * @returns {String} address\n */\nvar formatOutputAddress = function (param, name) {\n    var value = param.staticPart();\n\n    if (!value) {\n        throw new Error('Couldn\\'t decode '+ name +' from ABI: 0x'+ param.rawValue);\n    }\n\n    return utils.toChecksumAddress(\"0x\" + value.slice(value.length - 40, value.length));\n};\n\nmodule.exports = {\n    formatInputInt: formatInputInt,\n    formatInputBytes: formatInputBytes,\n    formatInputDynamicBytes: formatInputDynamicBytes,\n    formatInputString: formatInputString,\n    formatInputBool: formatInputBool,\n    formatOutputInt: formatOutputInt,\n    formatOutputUInt: formatOutputUInt,\n    formatOutputBool: formatOutputBool,\n    formatOutputBytes: formatOutputBytes,\n    formatOutputDynamicBytes: formatOutputDynamicBytes,\n    formatOutputString: formatOutputString,\n    formatOutputAddress: formatOutputAddress,\n    toTwosComplement: utils.toTwosComplement\n};\n","/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file utils.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n\nvar _ = require('underscore');\nvar BN = require('bn.js');\nvar numberToBN = require('number-to-bn');\nvar utf8 = require('utf8');\nvar Hash = require(\"eth-lib/lib/hash\");\n\n\n/**\n * Returns true if object is BN, otherwise false\n *\n * @method isBN\n * @param {Object} object\n * @return {Boolean}\n */\nvar isBN = function (object) {\n    return object instanceof BN ||\n        (object && object.constructor && object.constructor.name === 'BN');\n};\n\n/**\n * Returns true if object is BigNumber, otherwise false\n *\n * @method isBigNumber\n * @param {Object} object\n * @return {Boolean}\n */\nvar isBigNumber = function (object) {\n    return object && object.constructor && object.constructor.name === 'BigNumber';\n};\n\n/**\n * Takes an input and transforms it into an BN\n *\n * @method toBN\n * @param {Number|String|BN} number, string, HEX string or BN\n * @return {BN} BN\n */\nvar toBN = function(number){\n    try {\n        return numberToBN.apply(null, arguments);\n    } catch(e) {\n        throw new Error(e + ' Given value: \"'+ number +'\"');\n    }\n};\n\n\n/**\n * Takes and input transforms it into BN and if it is negative value, into two's complement\n *\n * @method toTwosComplement\n * @param {Number|String|BN} number\n * @return {String}\n */\nvar toTwosComplement = function (number) {\n    return '0x'+ toBN(number).toTwos(256).toString(16, 64);\n};\n\n/**\n * Checks if the given string is an address\n *\n * @method isAddress\n * @param {String} address the given HEX address\n * @return {Boolean}\n */\nvar isAddress = function (address) {\n    // check if it has the basic requirements of an address\n    if (!/^(0x)?[0-9a-f]{40}$/i.test(address)) {\n        return false;\n        // If it's ALL lowercase or ALL upppercase\n    } else if (/^(0x|0X)?[0-9a-f]{40}$/.test(address) || /^(0x|0X)?[0-9A-F]{40}$/.test(address)) {\n        return true;\n        // Otherwise check each case\n    } else {\n        return checkAddressChecksum(address);\n    }\n};\n\n\n\n/**\n * Checks if the given string is a checksummed address\n *\n * @method checkAddressChecksum\n * @param {String} address the given HEX address\n * @return {Boolean}\n */\nvar checkAddressChecksum = function (address) {\n    // Check each case\n    address = address.replace(/^0x/i,'');\n    var addressHash = sha3(address.toLowerCase()).replace(/^0x/i,'');\n\n    for (var i = 0; i < 40; i++ ) {\n        // the nth letter should be uppercase if the nth digit of casemap is 1\n        if ((parseInt(addressHash[i], 16) > 7 && address[i].toUpperCase() !== address[i]) || (parseInt(addressHash[i], 16) <= 7 && address[i].toLowerCase() !== address[i])) {\n            return false;\n        }\n    }\n    return true;\n};\n\n/**\n * Should be called to pad string to expected length\n *\n * @method leftPad\n * @param {String} string to be padded\n * @param {Number} chars that result string should have\n * @param {String} sign, by default 0\n * @returns {String} right aligned string\n */\nvar leftPad = function (string, chars, sign) {\n    var hasPrefix = /^0x/i.test(string) || typeof string === 'number';\n    string = string.toString(16).replace(/^0x/i,'');\n\n    var padding = (chars - string.length + 1 >= 0) ? chars - string.length + 1 : 0;\n\n    return (hasPrefix ? '0x' : '') + new Array(padding).join(sign ? sign : \"0\") + string;\n};\n\n/**\n * Should be called to pad string to expected length\n *\n * @method rightPad\n * @param {String} string to be padded\n * @param {Number} chars that result string should have\n * @param {String} sign, by default 0\n * @returns {String} right aligned string\n */\nvar rightPad = function (string, chars, sign) {\n    var hasPrefix = /^0x/i.test(string) || typeof string === 'number';\n    string = string.toString(16).replace(/^0x/i,'');\n\n    var padding = (chars - string.length + 1 >= 0) ? chars - string.length + 1 : 0;\n\n    return (hasPrefix ? '0x' : '') + string + (new Array(padding).join(sign ? sign : \"0\"));\n};\n\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n *\n * @method utf8ToHex\n * @param {String} str\n * @returns {String} hex representation of input string\n */\nvar utf8ToHex = function(str) {\n    str = utf8.encode(str);\n    var hex = \"\";\n\n    // remove \\u0000 padding from either side\n    str = str.replace(/^(?:\\u0000)*/,'');\n    str = str.split(\"\").reverse().join(\"\");\n    str = str.replace(/^(?:\\u0000)*/,'');\n    str = str.split(\"\").reverse().join(\"\");\n\n    for(var i = 0; i < str.length; i++) {\n        var code = str.charCodeAt(i);\n        // if (code !== 0) {\n        var n = code.toString(16);\n        hex += n.length < 2 ? '0' + n : n;\n        // }\n    }\n\n    return \"0x\" + hex;\n};\n\n/**\n * Should be called to get utf8 from it's hex representation\n *\n * @method hexToUtf8\n * @param {String} hex\n * @returns {String} ascii string representation of hex value\n */\nvar hexToUtf8 = function(hex) {\n    if (!isHexStrict(hex))\n        throw new Error('The parameter \"'+ hex +'\" must be a valid HEX string.');\n\n    var str = \"\";\n    var code = 0;\n    hex = hex.replace(/^0x/i,'');\n\n    // remove 00 padding from either side\n    hex = hex.replace(/^(?:00)*/,'');\n    hex = hex.split(\"\").reverse().join(\"\");\n    hex = hex.replace(/^(?:00)*/,'');\n    hex = hex.split(\"\").reverse().join(\"\");\n\n    var l = hex.length;\n\n    for (var i=0; i < l; i+=2) {\n        code = parseInt(hex.substr(i, 2), 16);\n        // if (code !== 0) {\n        str += String.fromCharCode(code);\n        // }\n    }\n\n    return utf8.decode(str);\n};\n\n\n/**\n * Converts value to it's number representation\n *\n * @method hexToNumber\n * @param {String|Number|BN} value\n * @return {String}\n */\nvar hexToNumber = function (value) {\n    if (!value) {\n        return value;\n    }\n\n    return toBN(value).toNumber();\n};\n\n/**\n * Converts value to it's decimal representation in string\n *\n * @method hexToNumberString\n * @param {String|Number|BN} value\n * @return {String}\n */\nvar hexToNumberString = function (value) {\n    if (!value) return value;\n\n    return toBN(value).toString(10);\n};\n\n\n/**\n * Converts value to it's hex representation\n *\n * @method numberToHex\n * @param {String|Number|BN} value\n * @return {String}\n */\nvar numberToHex = function (value) {\n    if (_.isNull(value) || _.isUndefined(value)) {\n        return value;\n    }\n\n    if (!isFinite(value) && !isHexStrict(value)) {\n        throw new Error('Given input \"'+value+'\" is not a number.');\n    }\n\n    var number = toBN(value);\n    var result = number.toString(16);\n\n    return number.lt(new BN(0)) ? '-0x' + result.substr(1) : '0x' + result;\n};\n\n\n/**\n * Convert a byte array to a hex string\n *\n * Note: Implementation from crypto-js\n *\n * @method bytesToHex\n * @param {Array} bytes\n * @return {String} the hex string\n */\nvar bytesToHex = function(bytes) {\n    for (var hex = [], i = 0; i < bytes.length; i++) {\n        /* jshint ignore:start */\n        hex.push((bytes[i] >>> 4).toString(16));\n        hex.push((bytes[i] & 0xF).toString(16));\n        /* jshint ignore:end */\n    }\n    return '0x'+ hex.join(\"\");\n};\n\n/**\n * Convert a hex string to a byte array\n *\n * Note: Implementation from crypto-js\n *\n * @method hexToBytes\n * @param {string} hex\n * @return {Array} the byte array\n */\nvar hexToBytes = function(hex) {\n    hex = hex.toString(16);\n\n    if (!isHexStrict(hex)) {\n        throw new Error('Given value \"'+ hex +'\" is not a valid hex string.');\n    }\n\n    hex = hex.replace(/^0x/i,'');\n\n    for (var bytes = [], c = 0; c < hex.length; c += 2)\n        bytes.push(parseInt(hex.substr(c, 2), 16));\n    return bytes;\n};\n\n/**\n * Auto converts any given value into it's hex representation.\n *\n * And even stringifys objects before.\n *\n * @method toHex\n * @param {String|Number|BN|Object} value\n * @param {Boolean} returnType\n * @return {String}\n */\nvar toHex = function (value, returnType) {\n    /*jshint maxcomplexity: false */\n\n    if (isAddress(value)) {\n        return returnType ? 'address' : '0x'+ value.toLowerCase().replace(/^0x/i,'');\n    }\n\n    if (_.isBoolean(value)) {\n        return returnType ? 'bool' : value ? '0x01' : '0x00';\n    }\n\n\n    if (_.isObject(value) && !isBigNumber(value) && !isBN(value)) {\n        return returnType ? 'string' : utf8ToHex(JSON.stringify(value));\n    }\n\n    // if its a negative number, pass it through numberToHex\n    if (_.isString(value)) {\n        if (value.indexOf('-0x') === 0 || value.indexOf('-0X') === 0) {\n            return returnType ? 'int256' : numberToHex(value);\n        } else if(value.indexOf('0x') === 0 || value.indexOf('0X') === 0) {\n            return returnType ? 'bytes' : value;\n        } else if (!isFinite(value)) {\n            return returnType ? 'string' : utf8ToHex(value);\n        }\n    }\n\n    return returnType ? (value < 0 ? 'int256' : 'uint256') : numberToHex(value);\n};\n\n\n/**\n * Check if string is HEX, requires a 0x in front\n *\n * @method isHexStrict\n * @param {String} hex to be checked\n * @returns {Boolean}\n */\nvar isHexStrict = function (hex) {\n    return ((_.isString(hex) || _.isNumber(hex)) && /^(-)?0x[0-9a-f]*$/i.test(hex));\n};\n\n/**\n * Check if string is HEX\n *\n * @method isHex\n * @param {String} hex to be checked\n * @returns {Boolean}\n */\nvar isHex = function (hex) {\n    return ((_.isString(hex) || _.isNumber(hex)) && /^(-0x|0x)?[0-9a-f]*$/i.test(hex));\n};\n\n\n/**\n * Returns true if given string is a valid Ethereum block header bloom.\n *\n * TODO UNDOCUMENTED\n *\n * @method isBloom\n * @param {String} hex encoded bloom filter\n * @return {Boolean}\n */\nvar isBloom = function (bloom) {\n    if (!/^(0x)?[0-9a-f]{512}$/i.test(bloom)) {\n        return false;\n    } else if (/^(0x)?[0-9a-f]{512}$/.test(bloom) || /^(0x)?[0-9A-F]{512}$/.test(bloom)) {\n        return true;\n    }\n    return false;\n};\n\n/**\n * Returns true if given string is a valid log topic.\n *\n * TODO UNDOCUMENTED\n *\n * @method isTopic\n * @param {String} hex encoded topic\n * @return {Boolean}\n */\nvar isTopic = function (topic) {\n    if (!/^(0x)?[0-9a-f]{64}$/i.test(topic)) {\n        return false;\n    } else if (/^(0x)?[0-9a-f]{64}$/.test(topic) || /^(0x)?[0-9A-F]{64}$/.test(topic)) {\n        return true;\n    }\n    return false;\n};\n\n\n/**\n * Hashes values to a sha3 hash using keccak 256\n *\n * To hash a HEX string the hex must have 0x in front.\n *\n * @method sha3\n * @return {String} the sha3 string\n */\nvar SHA3_NULL_S = '0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470';\n\nvar sha3 = function (value) {\n    if (isHexStrict(value) && /^0x/i.test((value).toString())) {\n        value = hexToBytes(value);\n    }\n\n    var returnValue = Hash.keccak256(value); // jshint ignore:line\n\n    if(returnValue === SHA3_NULL_S) {\n        return null;\n    } else {\n        return returnValue;\n    }\n};\n// expose the under the hood keccak256\nsha3._Hash = Hash;\n\n\nmodule.exports = {\n    BN: BN,\n    isBN: isBN,\n    isBigNumber: isBigNumber,\n    toBN: toBN,\n    isAddress: isAddress,\n    isBloom: isBloom, // TODO UNDOCUMENTED\n    isTopic: isTopic, // TODO UNDOCUMENTED\n    checkAddressChecksum: checkAddressChecksum,\n    utf8ToHex: utf8ToHex,\n    hexToUtf8: hexToUtf8,\n    hexToNumber: hexToNumber,\n    hexToNumberString: hexToNumberString,\n    numberToHex: numberToHex,\n    toHex: toHex,\n    hexToBytes: hexToBytes,\n    bytesToHex: bytesToHex,\n    isHex: isHex,\n    isHexStrict: isHexStrict,\n    leftPad: leftPad,\n    rightPad: rightPad,\n    toTwosComplement: toTwosComplement,\n    sha3: sha3\n};\n","/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file errors.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @author Marek Kotewicz <marek@parity.io>\n * @date 2017\n */\n\n\"use strict\";\n\nmodule.exports = {\n    ErrorResponse: function (result) {\n        var message = !!result && !!result.error && !!result.error.message ? result.error.message : JSON.stringify(result);\n        return new Error('Returned error: ' + message);\n    },\n    InvalidNumberOfParams: function (got, expected, method) {\n        return new Error('Invalid number of parameters for \"'+ method +'\". Got '+ got +' expected '+ expected +'!');\n    },\n    InvalidConnection: function (host){\n        return new Error('CONNECTION ERROR: Couldn\\'t connect to node '+ host +'.');\n    },\n    InvalidProvider: function () {\n        return new Error('Provider not set or invalid');\n    },\n    InvalidResponse: function (result){\n        var message = !!result && !!result.error && !!result.error.message ? result.error.message : 'Invalid JSON RPC response: ' + JSON.stringify(result);\n        return new Error(message);\n    },\n    ConnectionTimeout: function (ms){\n        return new Error('CONNECTION TIMEOUT: timeout of ' + ms + ' ms achived');\n    }\n};\n","/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file param.js\n * @author Marek Kotewicz <marek@parity.io>\n * @date 2015\n */\n\nvar formatters = require('./formatters.js');\n\n/**\n * SolidityParam object prototype.\n * Should be used when encoding, decoding solidity bytes\n */\nvar SolidityParam = function (value, offset, rawValue) {\n    this.value = value || '';\n    this.offset = offset; // offset in bytes\n    this.rawValue = rawValue; // used for debugging\n};\n\n/**\n * This method should be used to get length of params's dynamic part\n *\n * @method dynamicPartLength\n * @returns {Number} length of dynamic part (in bytes)\n */\nSolidityParam.prototype.dynamicPartLength = function () {\n    return this.dynamicPart().length / 2;\n};\n\n/**\n * This method should be used to create copy of solidity param with different offset\n *\n * @method withOffset\n * @param {Number} offset length in bytes\n * @returns {SolidityParam} new solidity param with applied offset\n */\nSolidityParam.prototype.withOffset = function (offset) {\n    return new SolidityParam(this.value, offset);\n};\n\n/**\n * This method should be used to combine solidity params together\n * eg. when appending an array\n *\n * @method combine\n * @param {SolidityParam} param with which we should combine\n * @param {SolidityParam} result of combination\n */\nSolidityParam.prototype.combine = function (param) {\n    return new SolidityParam(this.value + param.value);\n};\n\n/**\n * This method should be called to check if param has dynamic size.\n * If it has, it returns true, otherwise false\n *\n * @method isDynamic\n * @returns {Boolean}\n */\nSolidityParam.prototype.isDynamic = function () {\n    return this.offset !== undefined;\n};\n\n/**\n * This method should be called to transform offset to bytes\n *\n * @method offsetAsBytes\n * @returns {String} bytes representation of offset\n */\nSolidityParam.prototype.offsetAsBytes = function () {\n    return !this.isDynamic() ? '' : formatters.toTwosComplement(this.offset).replace('0x','');\n};\n\n/**\n * This method should be called to get static part of param\n *\n * @method staticPart\n * @returns {String} offset if it is a dynamic param, otherwise value\n */\nSolidityParam.prototype.staticPart = function () {\n    if (!this.isDynamic()) {\n        return this.value;\n    }\n    return this.offsetAsBytes();\n};\n\n/**\n * This method should be called to get dynamic part of param\n *\n * @method dynamicPart\n * @returns {String} returns a value if it is a dynamic param, otherwise empty string\n */\nSolidityParam.prototype.dynamicPart = function () {\n    return this.isDynamic() ? this.value : '';\n};\n\n/**\n * This method should be called to encode param\n *\n * @method encode\n * @returns {String}\n */\nSolidityParam.prototype.encode = function () {\n    return this.staticPart() + this.dynamicPart();\n};\n\n/**\n * This method should be called to encode array of params\n *\n * @method encodeList\n * @param {Array[SolidityParam]} params\n * @returns {String}\n */\nSolidityParam.encodeList = function (params) {\n\n    // updating offsets\n    var totalOffset = params.length * 32;\n    var offsetParams = params.map(function (param) {\n        if (!param.isDynamic()) {\n            return param;\n        }\n        var offset = totalOffset;\n        totalOffset += param.dynamicPartLength();\n        return param.withOffset(offset);\n    });\n\n    // encode everything!\n    return offsetParams.reduce(function (result, param) {\n        return result + param.dynamicPart();\n    }, offsetParams.reduce(function (result, param) {\n        return result + param.staticPart();\n    }, ''));\n};\n\n\n\nmodule.exports = SolidityParam;\n\n","var f = require('../formatters');\nvar SolidityType = require('../type');\n\n/**\n * SolidityTypeBytes is a prototype that represents the bytes type.\n * It matches:\n * bytes\n * bytes[]\n * bytes[4]\n * bytes[][]\n * bytes[3][]\n * bytes[][6][], ...\n * bytes32\n * bytes8[4]\n * bytes[3][]\n */\nvar SolidityTypeBytes = function () {\n    this._inputFormatter = f.formatInputBytes;\n    this._outputFormatter = f.formatOutputBytes;\n};\n\nSolidityTypeBytes.prototype = new SolidityType({});\nSolidityTypeBytes.prototype.constructor = SolidityTypeBytes;\n\nSolidityTypeBytes.prototype.isType = function (name) {\n    return !!name.match(/^bytes([0-9]{1,})(\\[([0-9]*)\\])*$/);\n};\n\nmodule.exports = SolidityTypeBytes;\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buf' + 'fer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      r.strip();\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","var f = require('../formatters');\nvar SolidityType = require('../type');\n\n/**\n * SolidityTypeUInt is a protoype that represents uint type\n * It matches:\n * uint\n * uint[]\n * uint[4]\n * uint[][]\n * uint[3][]\n * uint[][6][], ...\n * uint32\n * uint64[]\n * uint8[4]\n * uint256[][]\n * uint[3][]\n * uint64[][6][], ...\n */\nvar SolidityTypeUInt = function () {\n    this._inputFormatter = f.formatInputInt;\n    this._outputFormatter = f.formatOutputUInt;\n};\n\nSolidityTypeUInt.prototype = new SolidityType({});\nSolidityTypeUInt.prototype.constructor = SolidityTypeUInt;\n\nSolidityTypeUInt.prototype.isType = function (name) {\n    return !!name.match(/^uint([0-9]*)?(\\[([0-9]*)\\])*$/);\n};\n\nmodule.exports = SolidityTypeUInt;\n","/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file soliditySha3.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n\nvar _ = require('underscore');\nvar BN = require('bn.js');\nvar utils = require('./utils.js');\n\n\nvar _elementaryName = function (name) {\n    /*jshint maxcomplexity:false */\n\n    if (name.startsWith('int[')) {\n        return 'int256' + name.slice(3);\n    } else if (name === 'int') {\n        return 'int256';\n    } else if (name.startsWith('uint[')) {\n        return 'uint256' + name.slice(4);\n    } else if (name === 'uint') {\n        return 'uint256';\n    } else if (name.startsWith('fixed[')) {\n        return 'fixed128x128' + name.slice(5);\n    } else if (name === 'fixed') {\n        return 'fixed128x128';\n    } else if (name.startsWith('ufixed[')) {\n        return 'ufixed128x128' + name.slice(6);\n    } else if (name === 'ufixed') {\n        return 'ufixed128x128';\n    }\n    return name;\n};\n\n// Parse N from type<N>\nvar _parseTypeN = function (type) {\n    var typesize = /^\\D+(\\d+).*$/.exec(type);\n    return typesize ? parseInt(typesize[1], 10) : null;\n};\n\n// Parse N from type[<N>]\nvar _parseTypeNArray = function (type) {\n    var arraySize = /^\\D+\\d*\\[(\\d+)\\]$/.exec(type);\n    return arraySize ? parseInt(arraySize[1], 10) : null;\n};\n\nvar _parseNumber = function (arg) {\n    var type = typeof arg;\n    if (type === 'string') {\n        if (utils.isHexStrict(arg)) {\n            return new BN(arg.replace(/0x/i,''), 16);\n        } else {\n            return new BN(arg, 10);\n        }\n    } else if (type === 'number') {\n        return new BN(arg);\n    } else if (utils.isBigNumber(arg)) {\n        return new BN(arg.toString(10));\n    } else if (utils.isBN(arg)) {\n        return arg;\n    } else {\n        throw new Error(arg +' is not a number');\n    }\n};\n\nvar _solidityPack = function (type, value, arraySize) {\n    /*jshint maxcomplexity:false */\n\n    var size, num;\n    type = _elementaryName(type);\n\n\n    if (type === 'bytes') {\n\n        if (value.replace(/^0x/i,'').length % 2 !== 0) {\n            throw new Error('Invalid bytes characters '+ value.length);\n        }\n\n        return value;\n    } else if (type === 'string') {\n        return utils.utf8ToHex(value);\n    } else if (type === 'bool') {\n        return value ? '01' : '00';\n    } else if (type.startsWith('address')) {\n        if(arraySize) {\n            size = 64;\n        } else {\n            size = 40;\n        }\n\n        if(!utils.isAddress(value)) {\n            throw new Error(value +' is not a valid address, or the checksum is invalid.');\n        }\n\n        return utils.leftPad(value.toLowerCase(), size);\n    }\n\n    size = _parseTypeN(type);\n\n    if (type.startsWith('bytes')) {\n\n        if(!size) {\n            throw new Error('bytes[] not yet supported in solidity');\n        }\n\n        // must be 32 byte slices when in an array\n        if(arraySize) {\n            size = 32;\n        }\n\n        if (size < 1 || size > 32 || size < value.replace(/^0x/i,'').length / 2 ) {\n            throw new Error('Invalid bytes' + size +' for '+ value);\n        }\n\n        return utils.rightPad(value, size * 2);\n    } else if (type.startsWith('uint')) {\n\n        if ((size % 8) || (size < 8) || (size > 256)) {\n            throw new Error('Invalid uint'+size+' size');\n        }\n\n        num = _parseNumber(value);\n        if (num.bitLength() > size) {\n            throw new Error('Supplied uint exceeds width: ' + size + ' vs ' + num.bitLength());\n        }\n\n        if(num.lt(new BN(0))) {\n            throw new Error('Supplied uint '+ num.toString() +' is negative');\n        }\n\n        return size ? utils.leftPad(num.toString('hex'), size/8 * 2) : num;\n    } else if (type.startsWith('int')) {\n\n        if ((size % 8) || (size < 8) || (size > 256)) {\n            throw new Error('Invalid int'+size+' size');\n        }\n\n        num = _parseNumber(value);\n        if (num.bitLength() > size) {\n            throw new Error('Supplied int exceeds width: ' + size + ' vs ' + num.bitLength());\n        }\n\n        if(num.lt(new BN(0))) {\n            return num.toTwos(size).toString('hex');\n        } else {\n            return size ? utils.leftPad(num.toString('hex'), size/8 * 2) : num;\n        }\n\n    } else {\n        // FIXME: support all other types\n        throw new Error('Unsupported or invalid type: ' + type);\n    }\n};\n\n\nvar _processSoliditySha3Args = function (arg) {\n    /*jshint maxcomplexity:false */\n\n    if(_.isArray(arg)) {\n        throw new Error('Autodetection of array types is not supported.');\n    }\n\n    var type, value = '';\n    var hexArg, arraySize;\n\n    // if type is given\n    if (_.isObject(arg) && (arg.hasOwnProperty('v') || arg.hasOwnProperty('t') || arg.hasOwnProperty('value') || arg.hasOwnProperty('type'))) {\n        type = arg.hasOwnProperty('t') ? arg.t : arg.type;\n        value = arg.hasOwnProperty('v') ? arg.v : arg.value;\n\n    // otherwise try to guess the type\n    } else {\n\n        type = utils.toHex(arg, true);\n        value = utils.toHex(arg);\n\n        if (!type.startsWith('int') && !type.startsWith('uint')) {\n            type = 'bytes';\n        }\n    }\n\n    if ((type.startsWith('int') || type.startsWith('uint')) &&  typeof value === 'string' && !/^(-)?0x/i.test(value)) {\n        value = new BN(value);\n    }\n\n    // get the array size\n    if(_.isArray(value)) {\n        arraySize = _parseTypeNArray(type);\n        if(arraySize && value.length !== arraySize) {\n            throw new Error(type +' is not matching the given array '+ JSON.stringify(value));\n        } else {\n            arraySize = value.length;\n        }\n    }\n\n\n    if (_.isArray(value)) {\n        hexArg = value.map(function (val) {\n            return _solidityPack(type, val, arraySize).toString('hex').replace('0x','');\n        });\n        return hexArg.join('');\n    } else {\n        hexArg = _solidityPack(type, value, arraySize);\n        return hexArg.toString('hex').replace('0x','');\n    }\n\n};\n\n/**\n * Hashes solidity values to a sha3 hash using keccak 256\n *\n * @method soliditySha3\n * @return {Object} the sha3\n */\nvar soliditySha3 = function () {\n    /*jshint maxcomplexity:false */\n\n    var args = Array.prototype.slice.call(arguments);\n\n    var hexArgs = _.map(args, _processSoliditySha3Args);\n\n    // console.log(args, hexArgs);\n    // console.log('0x'+ hexArgs.join(''));\n\n    return utils.sha3('0x'+ hexArgs.join(''));\n};\n\n\nmodule.exports = soliditySha3;\n","var f = require('../formatters');\nvar formatters = require('web3-core-helpers').formatters;\nvar SolidityType = require('../type');\n\n/**\n * SolidityTypeAddress is a protoype that represents address type\n * It matches:\n * address\n * address[]\n * address[4]\n * address[][]\n * address[3][]\n * address[][6][], ...\n */\nvar SolidityTypeAddress = function () {\n    this._inputFormatter = function(){\n        var args = Array.prototype.slice.call(arguments);\n        args[0] = (!args[0] || args[0] === '0x0') ? '' : formatters.inputAddressFormatter(args[0]);\n        return f.formatInputInt.apply(this, args);\n    };\n    this._outputFormatter = f.formatOutputAddress;\n};\n\nSolidityTypeAddress.prototype = new SolidityType({});\nSolidityTypeAddress.prototype.constructor = SolidityTypeAddress;\n\nSolidityTypeAddress.prototype.isType = function (name) {\n    return !!name.match(/address(\\[([0-9]*)\\])?/);\n};\n\nmodule.exports = SolidityTypeAddress;\n","/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file index.js\n * @author Marek Kotewicz <marek@parity.io>\n * @author Fabian Vogelsteller <fabian@frozeman.de>\n * @date 2017\n */\n\nvar _ = require('underscore');\nvar utils = require('web3-utils');\n\nvar f = require('./formatters');\n\nvar SolidityTypeAddress = require('./types/address');\nvar SolidityTypeBool = require('./types/bool');\nvar SolidityTypeInt = require('./types/int');\nvar SolidityTypeUInt = require('./types/uint');\nvar SolidityTypeDynamicBytes = require('./types/dynamicbytes');\nvar SolidityTypeString = require('./types/string');\nvar SolidityTypeBytes = require('./types/bytes');\n\nvar isDynamic = function (solidityType, type) {\n    return solidityType.isDynamicType(type) ||\n        solidityType.isDynamicArray(type);\n};\n\n\n// result method\nfunction Result() {}\n\n\n/**\n * ABICoder prototype should be used to encode/decode solidity params of any type\n */\nvar ABICoder = function (types) {\n    this._types = types;\n};\n\n/**\n * This method should be used to transform type to SolidityType\n *\n * @method _requireType\n * @param {String} type\n * @returns {SolidityType}\n * @throws {Error} throws if no matching type is found\n */\nABICoder.prototype._requireType = function (type) {\n    var solidityType = this._types.filter(function (t) {\n        return t.isType(type);\n    })[0];\n\n    if (!solidityType) {\n        throw Error('Invalid solidity type: ' + type);\n    }\n\n    return solidityType;\n};\n\n\n\nABICoder.prototype._getOffsets = function (types, solidityTypes) {\n    var lengths =  solidityTypes.map(function (solidityType, index) {\n        return solidityType.staticPartLength(types[index]);\n    });\n\n    for (var i = 1; i < lengths.length; i++) {\n        // sum with length of previous element\n        lengths[i] += lengths[i - 1];\n    }\n\n    return lengths.map(function (length, index) {\n        // remove the current length, so the length is sum of previous elements\n        var staticPartLength = solidityTypes[index].staticPartLength(types[index]);\n        return length - staticPartLength;\n    });\n};\n\nABICoder.prototype._getSolidityTypes = function (types) {\n    var self = this;\n    return types.map(function (type) {\n        return self._requireType(type);\n    });\n};\n\n\nABICoder.prototype._encodeMultiWithOffset = function (types, solidityTypes, encodeds, dynamicOffset) {\n    var result = \"\";\n    var self = this;\n\n    types.forEach(function (type, i) {\n        if (isDynamic(solidityTypes[i], types[i])) {\n            result += f.formatInputInt(dynamicOffset).encode();\n            var e = self._encodeWithOffset(types[i], solidityTypes[i], encodeds[i], dynamicOffset);\n            dynamicOffset += e.length / 2;\n        } else {\n            // don't add length to dynamicOffset. it's already counted\n            result += self._encodeWithOffset(types[i], solidityTypes[i], encodeds[i], dynamicOffset);\n        }\n\n        // TODO: figure out nested arrays\n    });\n\n    types.forEach(function (type, i) {\n        if (isDynamic(solidityTypes[i], types[i])) {\n            var e = self._encodeWithOffset(types[i], solidityTypes[i], encodeds[i], dynamicOffset);\n            dynamicOffset += e.length / 2;\n            result += e;\n        }\n    });\n    return result;\n};\n\n// TODO: refactor whole encoding!\nABICoder.prototype._encodeWithOffset = function (type, solidityType, encoded, offset) {\n    var self = this;\n    if (solidityType.isDynamicArray(type)) {\n        return (function () {\n            // offset was already set\n            var nestedName = solidityType.nestedName(type);\n            var nestedStaticPartLength = solidityType.staticPartLength(nestedName);\n            var result = encoded[0];\n\n            (function () {\n                var previousLength = 2; // in int\n                if (solidityType.isDynamicArray(nestedName)) {\n                    for (var i = 1; i < encoded.length; i++) {\n                        previousLength += +(encoded[i - 1])[0] || 0;\n                        result += f.formatInputInt(offset + i * nestedStaticPartLength + previousLength * 32).encode();\n                    }\n                }\n            })();\n\n            // first element is length, skip it\n            (function () {\n                for (var i = 0; i < encoded.length - 1; i++) {\n                    var additionalOffset = result / 2;\n                    result += self._encodeWithOffset(nestedName, solidityType, encoded[i + 1], offset +  additionalOffset);\n                }\n            })();\n\n            return result;\n        })();\n\n    } else if (solidityType.isStaticArray(type)) {\n        return (function () {\n            var nestedName = solidityType.nestedName(type);\n            var nestedStaticPartLength = solidityType.staticPartLength(nestedName);\n            var result = \"\";\n\n\n            if (solidityType.isDynamicArray(nestedName)) {\n                (function () {\n                    var previousLength = 0; // in int\n                    for (var i = 0; i < encoded.length; i++) {\n                        // calculate length of previous item\n                        previousLength += +(encoded[i - 1] || [])[0] || 0;\n                        result += f.formatInputInt(offset + i * nestedStaticPartLength + previousLength * 32).encode();\n                    }\n                })();\n            }\n\n            (function () {\n                for (var i = 0; i < encoded.length; i++) {\n                    var additionalOffset = result / 2;\n                    result += self._encodeWithOffset(nestedName, solidityType, encoded[i], offset + additionalOffset);\n                }\n            })();\n\n            return result;\n        })();\n    }\n\n    return encoded;\n};\n\n\n/**\n * Encodes the function name to its ABI representation, which are the first 4 bytes of the sha3 of the function name including  types.\n *\n * @method encodeFunctionSignature\n * @param {String|Object} functionName\n * @return {String} encoded function name\n */\nABICoder.prototype.encodeFunctionSignature = function (functionName) {\n    if(_.isObject(functionName)) {\n        functionName = utils._jsonInterfaceMethodToString(functionName);\n    }\n\n    return utils.sha3(functionName).slice(0, 10);\n};\n\n\n/**\n * Encodes the function name to its ABI representation, which are the first 4 bytes of the sha3 of the function name including  types.\n *\n * @method encodeEventSignature\n * @param {String|Object} functionName\n * @return {String} encoded function name\n */\nABICoder.prototype.encodeEventSignature = function (functionName) {\n    if(_.isObject(functionName)) {\n        functionName = utils._jsonInterfaceMethodToString(functionName);\n    }\n\n    return utils.sha3(functionName);\n};\n\n\n/**\n * Should be used to encode plain param\n *\n * @method encodeParameter\n * @param {String} type\n * @param {Object} param\n * @return {String} encoded plain param\n */\nABICoder.prototype.encodeParameter = function (type, param) {\n    return this.encodeParameters([type], [param]);\n};\n\n/**\n * Should be used to encode list of params\n *\n * @method encodeParameters\n * @param {Array} types\n * @param {Array} params\n * @return {String} encoded list of params\n */\nABICoder.prototype.encodeParameters = function (types, params) {\n    // given a json interface\n    if(_.isObject(types) && types.inputs) {\n        types = _.map(types.inputs, function (input) {\n            return input.type;\n        });\n    }\n\n    var solidityTypes = this._getSolidityTypes(types);\n\n    var encodeds = solidityTypes.map(function (solidityType, index) {\n        return solidityType.encode(params[index], types[index]);\n    });\n\n    var dynamicOffset = solidityTypes.reduce(function (acc, solidityType, index) {\n        var staticPartLength = solidityType.staticPartLength(types[index]);\n        var roundedStaticPartLength = Math.floor((staticPartLength + 31) / 32) * 32;\n\n        return acc + (isDynamic(solidityTypes[index], types[index]) ?\n                32 :\n                roundedStaticPartLength);\n    }, 0);\n\n    return '0x'+ this._encodeMultiWithOffset(types, solidityTypes, encodeds, dynamicOffset);\n};\n\n\n/**\n * Encodes a function call from its json interface and parameters.\n *\n * @method encodeFunctionCall\n * @param {Array} jsonInterface\n * @param {Array} params\n * @return {String} The encoded ABI for this function call\n */\nABICoder.prototype.encodeFunctionCall = function (jsonInterface, params) {\n    return this.encodeFunctionSignature(jsonInterface) + this.encodeParameters(jsonInterface, params).replace('0x','');\n};\n\n\n/**\n * Should be used to decode bytes to plain param\n *\n * @method decodeParameter\n * @param {String} type\n * @param {String} bytes\n * @return {Object} plain param\n */\nABICoder.prototype.decodeParameter = function (type, bytes) {\n\n    if (!_.isString(type)) {\n        throw new Error('Given parameter type is not a string: '+ type);\n    }\n\n    return this.decodeParameters([{type: type}], bytes)[0];\n};\n\n/**\n * Should be used to decode list of params\n *\n * @method decodeParameter\n * @param {Array} outputs\n * @param {String} bytes\n * @return {Array} array of plain params\n */\nABICoder.prototype.decodeParameters = function (outputs, bytes) {\n    var isTypeArray = _.isArray(outputs) && _.isString(outputs[0]);\n    var types = (isTypeArray) ? outputs : [];\n\n    if(!isTypeArray) {\n        outputs.forEach(function (output) {\n            types.push(output.type);\n        });\n    }\n\n    var solidityTypes = this._getSolidityTypes(types);\n    var offsets = this._getOffsets(types, solidityTypes);\n\n    var returnValue = new Result();\n    returnValue.__length__ = 0;\n    var count = 0;\n\n    outputs.forEach(function (output, i) {\n        var decodedValue = solidityTypes[count].decode(bytes.replace(/^0x/i,''), offsets[count],  types[count], count);\n        decodedValue = (decodedValue === '0x') ? null : decodedValue;\n\n        returnValue[i] = decodedValue;\n\n        if (_.isObject(output) && output.name) {\n            returnValue[output.name] = decodedValue;\n        }\n\n        returnValue.__length__++;\n        count++;\n    });\n\n    return returnValue;\n};\n\n/**\n * Decodes events non- and indexed parameters.\n *\n * @method decodeLog\n * @param {Object} inputs\n * @param {String} data\n * * @param {Array} topics\n * @return {Array} array of plain params\n */\nABICoder.prototype.decodeLog = function (inputs, data, topics) {\n\n    data = data || '';\n\n    var notIndexedInputs = [];\n    var indexedInputs = [];\n\n    inputs.forEach(function (input, i) {\n        if (input.indexed) {\n            indexedInputs[i] = input;\n        } else {\n            notIndexedInputs[i] = input;\n        }\n    });\n\n    var nonIndexedData = data.slice(2);\n    var indexedData = _.isArray(topics) ? topics.map(function (topic) { return topic.slice(2); }).join('') : topics;\n\n    var notIndexedParams = this.decodeParameters(notIndexedInputs, nonIndexedData);\n    var indexedParams = this.decodeParameters(indexedInputs, indexedData);\n\n\n    var returnValue = new Result();\n    returnValue.__length__ = 0;\n\n    inputs.forEach(function (res, i) {\n        returnValue[i] = (res.type === 'string') ? '' : null;\n\n        if (notIndexedParams[i]) {\n            returnValue[i] = notIndexedParams[i];\n        }\n        if (indexedParams[i]) {\n            returnValue[i] = indexedParams[i];\n        }\n\n        if(res.name) {\n            returnValue[res.name] = returnValue[i];\n        }\n\n        returnValue.__length__++;\n    });\n\n    return returnValue;\n};\n\n\nvar coder = new ABICoder([\n    new SolidityTypeAddress(),\n    new SolidityTypeBool(),\n    new SolidityTypeInt(),\n    new SolidityTypeUInt(),\n    new SolidityTypeDynamicBytes(),\n    new SolidityTypeBytes(),\n    new SolidityTypeString()\n]);\n\nmodule.exports = coder;\n","var f = require('../formatters');\nvar SolidityType = require('../type');\n\n/**\n * SolidityTypeInt is a protoype that represents int type\n * It matches:\n * int\n * int[]\n * int[4]\n * int[][]\n * int[3][]\n * int[][6][], ...\n * int32\n * int64[]\n * int8[4]\n * int256[][]\n * int[3][]\n * int64[][6][], ...\n */\nvar SolidityTypeInt = function () {\n    this._inputFormatter = f.formatInputInt;\n    this._outputFormatter = f.formatOutputInt;\n};\n\nSolidityTypeInt.prototype = new SolidityType({});\nSolidityTypeInt.prototype.constructor = SolidityTypeInt;\n\nSolidityTypeInt.prototype.isType = function (name) {\n    return !!name.match(/^int([0-9]*)?(\\[([0-9]*)\\])*$/);\n};\n\nmodule.exports = SolidityTypeInt;\n","/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file iban.js\n *\n * Details: https://github.com/ethereum/wiki/wiki/ICAP:-Inter-exchange-Client-Address-Protocol\n *\n * @author Marek Kotewicz <marek@parity.io>\n * @date 2015\n */\n\n\"use strict\";\n\nvar utils = require('web3-utils');\nvar BigNumber = require('bn.js');\n\n\nvar leftPad = function (string, bytes) {\n    var result = string;\n    while (result.length < bytes * 2) {\n        result = '0' + result;\n    }\n    return result;\n};\n\n/**\n * Prepare an IBAN for mod 97 computation by moving the first 4 chars to the end and transforming the letters to\n * numbers (A = 10, B = 11, ..., Z = 35), as specified in ISO13616.\n *\n * @method iso13616Prepare\n * @param {String} iban the IBAN\n * @returns {String} the prepared IBAN\n */\nvar iso13616Prepare = function (iban) {\n    var A = 'A'.charCodeAt(0);\n    var Z = 'Z'.charCodeAt(0);\n\n    iban = iban.toUpperCase();\n    iban = iban.substr(4) + iban.substr(0,4);\n\n    return iban.split('').map(function(n){\n        var code = n.charCodeAt(0);\n        if (code >= A && code <= Z){\n            // A = 10, B = 11, ... Z = 35\n            return code - A + 10;\n        } else {\n            return n;\n        }\n    }).join('');\n};\n\n/**\n * Calculates the MOD 97 10 of the passed IBAN as specified in ISO7064.\n *\n * @method mod9710\n * @param {String} iban\n * @returns {Number}\n */\nvar mod9710 = function (iban) {\n    var remainder = iban,\n        block;\n\n    while (remainder.length > 2){\n        block = remainder.slice(0, 9);\n        remainder = parseInt(block, 10) % 97 + remainder.slice(block.length);\n    }\n\n    return parseInt(remainder, 10) % 97;\n};\n\n/**\n * This prototype should be used to create iban object from iban correct string\n *\n * @param {String} iban\n */\nvar Iban = function Iban(iban) {\n    this._iban = iban;\n};\n\n/**\n * This method should be used to create an ethereum address from a direct iban address\n *\n * @method toAddress\n * @param {String} iban address\n * @return {String} the ethereum address\n */\nIban.toAddress = function (ib) {\n    ib = new Iban(ib);\n\n    if(!ib.isDirect()) {\n        throw new Error('IBAN is indirect and can\\'t be converted');\n    }\n\n    return ib.toAddress();\n};\n\n/**\n * This method should be used to create iban address from an ethereum address\n *\n * @method toIban\n * @param {String} address\n * @return {String} the IBAN address\n */\nIban.toIban = function (address) {\n    return Iban.fromAddress(address).toString();\n};\n\n/**\n * This method should be used to create iban object from an ethereum address\n *\n * @method fromAddress\n * @param {String} address\n * @return {Iban} the IBAN object\n */\nIban.fromAddress = function (address) {\n    if(!utils.isAddress(address)){\n        throw new Error('Provided address is not a valid address: '+ address);\n    }\n\n    address = address.replace('0x','').replace('0X','');\n\n    var asBn = new BigNumber(address, 16);\n    var base36 = asBn.toString(36);\n    var padded = leftPad(base36, 15);\n    return Iban.fromBban(padded.toUpperCase());\n};\n\n/**\n * Convert the passed BBAN to an IBAN for this country specification.\n * Please note that <i>\"generation of the IBAN shall be the exclusive responsibility of the bank/branch servicing the account\"</i>.\n * This method implements the preferred algorithm described in http://en.wikipedia.org/wiki/International_Bank_Account_Number#Generating_IBAN_check_digits\n *\n * @method fromBban\n * @param {String} bban the BBAN to convert to IBAN\n * @returns {Iban} the IBAN object\n */\nIban.fromBban = function (bban) {\n    var countryCode = 'XE';\n\n    var remainder = mod9710(iso13616Prepare(countryCode + '00' + bban));\n    var checkDigit = ('0' + (98 - remainder)).slice(-2);\n\n    return new Iban(countryCode + checkDigit + bban);\n};\n\n/**\n * Should be used to create IBAN object for given institution and identifier\n *\n * @method createIndirect\n * @param {Object} options, required options are \"institution\" and \"identifier\"\n * @return {Iban} the IBAN object\n */\nIban.createIndirect = function (options) {\n    return Iban.fromBban('ETH' + options.institution + options.identifier);\n};\n\n/**\n * This method should be used to check if given string is valid iban object\n *\n * @method isValid\n * @param {String} iban string\n * @return {Boolean} true if it is valid IBAN\n */\nIban.isValid = function (iban) {\n    var i = new Iban(iban);\n    return i.isValid();\n};\n\n/**\n * Should be called to check if iban is correct\n *\n * @method isValid\n * @returns {Boolean} true if it is, otherwise false\n */\nIban.prototype.isValid = function () {\n    return /^XE[0-9]{2}(ETH[0-9A-Z]{13}|[0-9A-Z]{30,31})$/.test(this._iban) &&\n        mod9710(iso13616Prepare(this._iban)) === 1;\n};\n\n/**\n * Should be called to check if iban number is direct\n *\n * @method isDirect\n * @returns {Boolean} true if it is, otherwise false\n */\nIban.prototype.isDirect = function () {\n    return this._iban.length === 34 || this._iban.length === 35;\n};\n\n/**\n * Should be called to check if iban number if indirect\n *\n * @method isIndirect\n * @returns {Boolean} true if it is, otherwise false\n */\nIban.prototype.isIndirect = function () {\n    return this._iban.length === 20;\n};\n\n/**\n * Should be called to get iban checksum\n * Uses the mod-97-10 checksumming protocol (ISO/IEC 7064:2003)\n *\n * @method checksum\n * @returns {String} checksum\n */\nIban.prototype.checksum = function () {\n    return this._iban.substr(2, 2);\n};\n\n/**\n * Should be called to get institution identifier\n * eg. XREG\n *\n * @method institution\n * @returns {String} institution identifier\n */\nIban.prototype.institution = function () {\n    return this.isIndirect() ? this._iban.substr(7, 4) : '';\n};\n\n/**\n * Should be called to get client identifier within institution\n * eg. GAVOFYORK\n *\n * @method client\n * @returns {String} client identifier\n */\nIban.prototype.client = function () {\n    return this.isIndirect() ? this._iban.substr(11) : '';\n};\n\n/**\n * Should be called to get client direct address\n *\n * @method toAddress\n * @returns {String} ethereum address\n */\nIban.prototype.toAddress = function () {\n    if (this.isDirect()) {\n        var base36 = this._iban.substr(4);\n        var asBn = new BigNumber(base36, 36);\n        return utils.toChecksumAddress(asBn.toString(16, 20));\n    }\n\n    return '';\n};\n\nIban.prototype.toString = function () {\n    return this._iban;\n};\n\nmodule.exports = Iban;\n","/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file formatters.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @author Marek Kotewicz <marek@parity.io>\n * @date 2017\n */\n\n\"use strict\";\n\n\nvar _ = require('underscore');\nvar utils = require('web3-utils');\nvar Iban = require('web3-eth-iban');\n\n/**\n * Should the format output to a big number\n *\n * @method outputBigNumberFormatter\n * @param {String|Number|BigNumber} number\n * @returns {BigNumber} object\n */\nvar outputBigNumberFormatter = function (number) {\n    return utils.toBN(number).toString(10);\n};\n\nvar isPredefinedBlockNumber = function (blockNumber) {\n    return blockNumber === 'latest' || blockNumber === 'pending' || blockNumber === 'earliest';\n};\n\nvar inputDefaultBlockNumberFormatter = function (blockNumber) {\n    if (this && (blockNumber === undefined || blockNumber === null)) {\n        return this.defaultBlock;\n    }\n    if (blockNumber === 'genesis' || blockNumber === 'earliest') {\n        return '0x0';\n    }\n    return inputBlockNumberFormatter(blockNumber);\n};\n\nvar inputBlockNumberFormatter = function (blockNumber) {\n    if (blockNumber === undefined) {\n        return undefined;\n    } else if (isPredefinedBlockNumber(blockNumber)) {\n        return blockNumber;\n    }\n    return (utils.isHexStrict(blockNumber)) ? ((_.isString(blockNumber)) ? blockNumber.toLowerCase() : blockNumber) : utils.numberToHex(blockNumber);\n};\n\n/**\n * Formats the input of a transaction and converts all values to HEX\n *\n * @method _txInputFormatter\n * @param {Object} transaction options\n * @returns object\n */\nvar _txInputFormatter = function (options){\n\n    if (options.to) { // it might be contract creation\n        options.to = inputAddressFormatter(options.to);\n    }\n\n    if (options.data && options.input) {\n        throw new Error('You can\\'t have \"data\" and \"input\" as properties of transactions at the same time, please use either \"data\" or \"input\" instead.');\n    }\n\n    if (!options.data && options.input) {\n        options.data = options.input;\n        delete options.input;\n    }\n\n    if(options.data && !utils.isHex(options.data)) {\n        throw new Error('The data field must be HEX encoded data.');\n    }\n\n    // allow both\n    if (options.gas || options.gasLimit) {\n        options.gas = options.gas || options.gasLimit;\n    }\n\n    ['gasPrice', 'gas', 'value', 'nonce'].filter(function (key) {\n        return options[key] !== undefined;\n    }).forEach(function(key){\n        options[key] = utils.numberToHex(options[key]);\n    });\n\n    return options;\n};\n\n/**\n * Formats the input of a transaction and converts all values to HEX\n *\n * @method inputCallFormatter\n * @param {Object} transaction options\n * @returns object\n*/\nvar inputCallFormatter = function (options){\n\n    options = _txInputFormatter(options);\n\n    var from = options.from || (this ? this.defaultAccount : null);\n\n    if (from) {\n        options.from = inputAddressFormatter(from);\n    }\n\n\n    return options;\n};\n\n/**\n * Formats the input of a transaction and converts all values to HEX\n *\n * @method inputTransactionFormatter\n * @param {Object} options\n * @returns object\n*/\nvar inputTransactionFormatter = function (options) {\n\n    options = _txInputFormatter(options);\n\n    // check from, only if not number, or object\n    if (!_.isNumber(options.from) && !_.isObject(options.from)) {\n        options.from = options.from || (this ? this.defaultAccount : null);\n\n        if (!options.from && !_.isNumber(options.from)) {\n            throw new Error('The send transactions \"from\" field must be defined!');\n        }\n\n        options.from = inputAddressFormatter(options.from);\n    }\n\n    return options;\n};\n\n/**\n * Hex encodes the data passed to eth_sign and personal_sign\n *\n * @method inputSignFormatter\n * @param {String} data\n * @returns {String}\n */\nvar inputSignFormatter = function (data) {\n    return (utils.isHexStrict(data)) ? data : utils.utf8ToHex(data);\n};\n\n/**\n * Formats the output of a transaction to its proper values\n *\n * @method outputTransactionFormatter\n * @param {Object} tx\n * @returns {Object}\n*/\nvar outputTransactionFormatter = function (tx){\n    if(tx.blockNumber !== null)\n        tx.blockNumber = utils.hexToNumber(tx.blockNumber);\n    if(tx.transactionIndex !== null)\n        tx.transactionIndex = utils.hexToNumber(tx.transactionIndex);\n    tx.nonce = utils.hexToNumber(tx.nonce);\n    tx.gas = utils.hexToNumber(tx.gas);\n    tx.gasPrice = outputBigNumberFormatter(tx.gasPrice);\n    tx.value = outputBigNumberFormatter(tx.value);\n\n    if(tx.to && utils.isAddress(tx.to)) { // tx.to could be `0x0` or `null` while contract creation\n        tx.to = utils.toChecksumAddress(tx.to);\n    } else {\n        tx.to = null; // set to `null` if invalid address\n    }\n\n    if(tx.from) {\n        tx.from = utils.toChecksumAddress(tx.from);\n    }\n\n    return tx;\n};\n\n/**\n * Formats the output of a transaction receipt to its proper values\n *\n * @method outputTransactionReceiptFormatter\n * @param {Object} receipt\n * @returns {Object}\n*/\nvar outputTransactionReceiptFormatter = function (receipt){\n    if(typeof receipt !== 'object') {\n        throw new Error('Received receipt is invalid: '+ receipt);\n    }\n\n    if(receipt.blockNumber !== null)\n        receipt.blockNumber = utils.hexToNumber(receipt.blockNumber);\n    if(receipt.transactionIndex !== null)\n        receipt.transactionIndex = utils.hexToNumber(receipt.transactionIndex);\n    receipt.cumulativeGasUsed = utils.hexToNumber(receipt.cumulativeGasUsed);\n    receipt.gasUsed = utils.hexToNumber(receipt.gasUsed);\n\n    if(_.isArray(receipt.logs)) {\n        receipt.logs = receipt.logs.map(outputLogFormatter);\n    }\n\n    if(receipt.contractAddress) {\n        receipt.contractAddress = utils.toChecksumAddress(receipt.contractAddress);\n    }\n\n    if(typeof receipt.status !== 'undefined') {\n        receipt.status = Boolean(parseInt(receipt.status));\n    }\n\n    return receipt;\n};\n\n/**\n * Formats the output of a block to its proper values\n *\n * @method outputBlockFormatter\n * @param {Object} block\n * @returns {Object}\n*/\nvar outputBlockFormatter = function(block) {\n\n    // transform to number\n    block.gasLimit = utils.hexToNumber(block.gasLimit);\n    block.gasUsed = utils.hexToNumber(block.gasUsed);\n    block.size = utils.hexToNumber(block.size);\n    block.timestamp = utils.hexToNumber(block.timestamp);\n    if (block.number !== null)\n        block.number = utils.hexToNumber(block.number);\n\n    if(block.difficulty)\n        block.difficulty = outputBigNumberFormatter(block.difficulty);\n    if(block.totalDifficulty)\n        block.totalDifficulty = outputBigNumberFormatter(block.totalDifficulty);\n\n    if (_.isArray(block.transactions)) {\n        block.transactions.forEach(function(item){\n            if(!_.isString(item))\n                return outputTransactionFormatter(item);\n        });\n    }\n\n    if (block.miner)\n        block.miner = utils.toChecksumAddress(block.miner);\n\n    return block;\n};\n\n/**\n * Formats the input of a log\n *\n * @method inputLogFormatter\n * @param {Object} log object\n * @returns {Object} log\n*/\nvar inputLogFormatter = function(options) {\n    var toTopic = function(value){\n\n        if(value === null || typeof value === 'undefined')\n            return null;\n\n        value = String(value);\n\n        if(value.indexOf('0x') === 0)\n            return value;\n        else\n            return utils.fromUtf8(value);\n    };\n\n    // make sure topics, get converted to hex\n    options.topics = options.topics || [];\n    options.topics = options.topics.map(function(topic){\n        return (_.isArray(topic)) ? topic.map(toTopic) : toTopic(topic);\n    });\n\n    toTopic = null;\n\n    if (options.address) {\n        options.address = (_.isArray(options.address)) ? options.address.map(function (addr) {\n            return inputAddressFormatter(addr);\n        }) : inputAddressFormatter(options.address);\n    }\n\n    return options;\n};\n\n/**\n * Formats the output of a log\n *\n * @method outputLogFormatter\n * @param {Object} log object\n * @returns {Object} log\n*/\nvar outputLogFormatter = function(log) {\n\n    // generate a custom log id\n    if(typeof log.blockHash === 'string' &&\n       typeof log.transactionHash === 'string' &&\n       typeof log.logIndex === 'string') {\n        var shaId = utils.sha3(log.blockHash.replace('0x','') + log.transactionHash.replace('0x','') + log.logIndex.replace('0x',''));\n        log.id = 'log_'+ shaId.replace('0x','').substr(0,8);\n    } else if(!log.id) {\n        log.id = null;\n    }\n\n    if (log.blockNumber !== null)\n        log.blockNumber = utils.hexToNumber(log.blockNumber);\n    if (log.transactionIndex !== null)\n        log.transactionIndex = utils.hexToNumber(log.transactionIndex);\n    if (log.logIndex !== null)\n        log.logIndex = utils.hexToNumber(log.logIndex);\n\n    if (log.address) {\n        log.address = utils.toChecksumAddress(log.address);\n    }\n\n    return log;\n};\n\n/**\n * Formats the input of a whisper post and converts all values to HEX\n *\n * @method inputPostFormatter\n * @param {Object} transaction object\n * @returns {Object}\n*/\nvar inputPostFormatter = function(post) {\n\n    // post.payload = utils.toHex(post.payload);\n\n    if (post.ttl)\n        post.ttl = utils.numberToHex(post.ttl);\n    if (post.workToProve)\n        post.workToProve = utils.numberToHex(post.workToProve);\n    if (post.priority)\n        post.priority = utils.numberToHex(post.priority);\n\n    // fallback\n    if (!_.isArray(post.topics)) {\n        post.topics = post.topics ? [post.topics] : [];\n    }\n\n    // format the following options\n    post.topics = post.topics.map(function(topic){\n        // convert only if not hex\n        return (topic.indexOf('0x') === 0) ? topic : utils.fromUtf8(topic);\n    });\n\n    return post;\n};\n\n/**\n * Formats the output of a received post message\n *\n * @method outputPostFormatter\n * @param {Object}\n * @returns {Object}\n */\nvar outputPostFormatter = function(post){\n\n    post.expiry = utils.hexToNumber(post.expiry);\n    post.sent = utils.hexToNumber(post.sent);\n    post.ttl = utils.hexToNumber(post.ttl);\n    post.workProved = utils.hexToNumber(post.workProved);\n    // post.payloadRaw = post.payload;\n    // post.payload = utils.hexToAscii(post.payload);\n\n    // if (utils.isJson(post.payload)) {\n    //     post.payload = JSON.parse(post.payload);\n    // }\n\n    // format the following options\n    if (!post.topics) {\n        post.topics = [];\n    }\n    post.topics = post.topics.map(function(topic){\n        return utils.toUtf8(topic);\n    });\n\n    return post;\n};\n\nvar inputAddressFormatter = function (address) {\n    var iban = new Iban(address);\n    if (iban.isValid() && iban.isDirect()) {\n        return iban.toAddress().toLowerCase();\n    } else if (utils.isAddress(address)) {\n        return '0x' + address.toLowerCase().replace('0x','');\n    }\n    throw new Error('Provided address \"'+ address +'\" is invalid, the capitalization checksum test failed, or its an indrect IBAN address which can\\'t be converted.');\n};\n\n\nvar outputSyncingFormatter = function(result) {\n\n    result.startingBlock = utils.hexToNumber(result.startingBlock);\n    result.currentBlock = utils.hexToNumber(result.currentBlock);\n    result.highestBlock = utils.hexToNumber(result.highestBlock);\n    if (result.knownStates) {\n        result.knownStates = utils.hexToNumber(result.knownStates);\n        result.pulledStates = utils.hexToNumber(result.pulledStates);\n    }\n\n    return result;\n};\n\nmodule.exports = {\n    inputDefaultBlockNumberFormatter: inputDefaultBlockNumberFormatter,\n    inputBlockNumberFormatter: inputBlockNumberFormatter,\n    inputCallFormatter: inputCallFormatter,\n    inputTransactionFormatter: inputTransactionFormatter,\n    inputAddressFormatter: inputAddressFormatter,\n    inputPostFormatter: inputPostFormatter,\n    inputLogFormatter: inputLogFormatter,\n    inputSignFormatter: inputSignFormatter,\n    outputBigNumberFormatter: outputBigNumberFormatter,\n    outputTransactionFormatter: outputTransactionFormatter,\n    outputTransactionReceiptFormatter: outputTransactionReceiptFormatter,\n    outputBlockFormatter: outputBlockFormatter,\n    outputLogFormatter: outputLogFormatter,\n    outputPostFormatter: outputPostFormatter,\n    outputSyncingFormatter: outputSyncingFormatter\n};\n\n","/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file utils.js\n * @author Marek Kotewicz <marek@parity.io>\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n\n\nvar _ = require('underscore');\nvar ethjsUnit = require('ethjs-unit');\nvar utils = require('./utils.js');\nvar soliditySha3 = require('./soliditySha3.js');\nvar randomHex = require('randomhex');\n\n\n\n/**\n * Fires an error in an event emitter and callback and returns the eventemitter\n *\n * @method _fireError\n * @param {Object} error a string, a error, or an object with {message, data}\n * @param {Object} emitter\n * @param {Function} reject\n * @param {Function} callback\n * @return {Object} the emitter\n */\nvar _fireError = function (error, emitter, reject, callback) {\n    /*jshint maxcomplexity: 10 */\n\n    // add data if given\n    if(_.isObject(error) && !(error instanceof Error) &&  error.data) {\n        if(_.isObject(error.data) || _.isArray(error.data)) {\n            error.data = JSON.stringify(error.data, null, 2);\n        }\n\n        error = error.message +\"\\n\"+ error.data;\n    }\n\n    if(_.isString(error)) {\n        error = new Error(error);\n    }\n\n    if (_.isFunction(callback)) {\n        callback(error);\n    }\n    if (_.isFunction(reject)) {\n        // suppress uncatched error if an error listener is present\n        // OR suppress uncatched error if an callback listener is present\n        if (emitter &&\n            (_.isFunction(emitter.listeners) &&\n            emitter.listeners('error').length) || _.isFunction(callback)) {\n            emitter.catch(function(){});\n        }\n        // reject later, to be able to return emitter\n        setTimeout(function () {\n            reject(error);\n        }, 1);\n    }\n\n    if(emitter && _.isFunction(emitter.emit)) {\n        // emit later, to be able to return emitter\n        setTimeout(function () {\n            emitter.emit('error', error);\n            emitter.removeAllListeners();\n        }, 1);\n    }\n\n    return emitter;\n};\n\n/**\n * Should be used to create full function/event name from json abi\n *\n * @method _jsonInterfaceMethodToString\n * @param {Object} json\n * @return {String} full function/event name\n */\nvar _jsonInterfaceMethodToString = function (json) {\n    if (_.isObject(json) && json.name && json.name.indexOf('(') !== -1) {\n        return json.name;\n    }\n\n    var typeName = json.inputs.map(function(i){return i.type; }).join(',');\n    return json.name + '(' + typeName + ')';\n};\n\n\n\n/**\n * Should be called to get ascii from it's hex representation\n *\n * @method hexToAscii\n * @param {String} hex\n * @returns {String} ascii string representation of hex value\n */\nvar hexToAscii = function(hex) {\n    if (!utils.isHexStrict(hex))\n        throw new Error('The parameter must be a valid HEX string.');\n\n    var str = \"\";\n    var i = 0, l = hex.length;\n    if (hex.substring(0, 2) === '0x') {\n        i = 2;\n    }\n    for (; i < l; i+=2) {\n        var code = parseInt(hex.substr(i, 2), 16);\n        str += String.fromCharCode(code);\n    }\n\n    return str;\n};\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @method asciiToHex\n * @param {String} str\n * @returns {String} hex representation of input string\n */\nvar asciiToHex = function(str) {\n    if(!str)\n        return \"0x00\";\n    var hex = \"\";\n    for(var i = 0; i < str.length; i++) {\n        var code = str.charCodeAt(i);\n        var n = code.toString(16);\n        hex += n.length < 2 ? '0' + n : n;\n    }\n\n    return \"0x\" + hex;\n};\n\n\n\n/**\n * Returns value of unit in Wei\n *\n * @method getUnitValue\n * @param {String} unit the unit to convert to, default ether\n * @returns {BN} value of the unit (in Wei)\n * @throws error if the unit is not correct:w\n */\nvar getUnitValue = function (unit) {\n    unit = unit ? unit.toLowerCase() : 'ether';\n    if (!ethjsUnit.unitMap[unit]) {\n        throw new Error('This unit \"'+ unit +'\" doesn\\'t exist, please use the one of the following units' + JSON.stringify(ethjsUnit.unitMap, null, 2));\n    }\n    return unit;\n};\n\n/**\n * Takes a number of wei and converts it to any other ether unit.\n *\n * Possible units are:\n *   SI Short   SI Full        Effigy       Other\n * - kwei       femtoether     babbage\n * - mwei       picoether      lovelace\n * - gwei       nanoether      shannon      nano\n * - --         microether     szabo        micro\n * - --         milliether     finney       milli\n * - ether      --             --\n * - kether                    --           grand\n * - mether\n * - gether\n * - tether\n *\n * @method fromWei\n * @param {Number|String} number can be a number, number string or a HEX of a decimal\n * @param {String} unit the unit to convert to, default ether\n * @return {String|Object} When given a BN object it returns one as well, otherwise a number\n */\nvar fromWei = function(number, unit) {\n    unit = getUnitValue(unit);\n\n    if(!utils.isBN(number) && !_.isString(number)) {\n        throw new Error('Please pass numbers as strings or BigNumber objects to avoid precision errors.');\n    }\n\n    return utils.isBN(number) ? ethjsUnit.fromWei(number, unit) : ethjsUnit.fromWei(number, unit).toString(10);\n};\n\n/**\n * Takes a number of a unit and converts it to wei.\n *\n * Possible units are:\n *   SI Short   SI Full        Effigy       Other\n * - kwei       femtoether     babbage\n * - mwei       picoether      lovelace\n * - gwei       nanoether      shannon      nano\n * - --         microether     szabo        micro\n * - --         microether     szabo        micro\n * - --         milliether     finney       milli\n * - ether      --             --\n * - kether                    --           grand\n * - mether\n * - gether\n * - tether\n *\n * @method toWei\n * @param {Number|String|BN} number can be a number, number string or a HEX of a decimal\n * @param {String} unit the unit to convert from, default ether\n * @return {String|Object} When given a BN object it returns one as well, otherwise a number\n */\nvar toWei = function(number, unit) {\n    unit = getUnitValue(unit);\n\n    if(!utils.isBN(number) && !_.isString(number)) {\n        throw new Error('Please pass numbers as strings or BigNumber objects to avoid precision errors.');\n    }\n\n    return utils.isBN(number) ? ethjsUnit.toWei(number, unit) : ethjsUnit.toWei(number, unit).toString(10);\n};\n\n\n\n\n/**\n * Converts to a checksum address\n *\n * @method toChecksumAddress\n * @param {String} address the given HEX address\n * @return {String}\n */\nvar toChecksumAddress = function (address) {\n    if (typeof address === 'undefined') return '';\n\n    if(!/^(0x)?[0-9a-f]{40}$/i.test(address))\n        throw new Error('Given address \"'+ address +'\" is not a valid Ethereum address.');\n\n\n\n    address = address.toLowerCase().replace(/^0x/i,'');\n    var addressHash = utils.sha3(address).replace(/^0x/i,'');\n    var checksumAddress = '0x';\n\n    for (var i = 0; i < address.length; i++ ) {\n        // If ith character is 9 to f then make it uppercase\n        if (parseInt(addressHash[i], 16) > 7) {\n            checksumAddress += address[i].toUpperCase();\n        } else {\n            checksumAddress += address[i];\n        }\n    }\n    return checksumAddress;\n};\n\n\n\nmodule.exports = {\n    _fireError: _fireError,\n    _jsonInterfaceMethodToString: _jsonInterfaceMethodToString,\n    // extractDisplayName: extractDisplayName,\n    // extractTypeName: extractTypeName,\n    randomHex: randomHex,\n    _: _,\n    BN: utils.BN,\n    isBN: utils.isBN,\n    isBigNumber: utils.isBigNumber,\n    isHex: utils.isHex,\n    isHexStrict: utils.isHexStrict,\n    sha3: utils.sha3,\n    keccak256: utils.sha3,\n    soliditySha3: soliditySha3,\n    isAddress: utils.isAddress,\n    checkAddressChecksum: utils.checkAddressChecksum,\n    toChecksumAddress: toChecksumAddress,\n    toHex: utils.toHex,\n    toBN: utils.toBN,\n\n    bytesToHex: utils.bytesToHex,\n    hexToBytes: utils.hexToBytes,\n\n    hexToNumberString: utils.hexToNumberString,\n\n    hexToNumber: utils.hexToNumber,\n    toDecimal: utils.hexToNumber, // alias\n\n    numberToHex: utils.numberToHex,\n    fromDecimal: utils.numberToHex, // alias\n\n    hexToUtf8: utils.hexToUtf8,\n    hexToString: utils.hexToUtf8,\n    toUtf8: utils.hexToUtf8,\n\n    utf8ToHex: utils.utf8ToHex,\n    stringToHex: utils.utf8ToHex,\n    fromUtf8: utils.utf8ToHex,\n\n    hexToAscii: hexToAscii,\n    toAscii: hexToAscii,\n    asciiToHex: asciiToHex,\n    fromAscii: asciiToHex,\n\n    unitMap: ethjsUnit.unitMap,\n    toWei: toWei,\n    fromWei: fromWei,\n\n    padLeft: utils.leftPad,\n    leftPad: utils.leftPad,\n    padRight: utils.rightPad,\n    rightPad: utils.rightPad,\n    toTwosComplement: utils.toTwosComplement\n};\n\n","var f = require('./formatters');\nvar SolidityParam = require('./param');\n\n/**\n * SolidityType prototype is used to encode/decode solidity params of certain type\n */\nvar SolidityType = function (config) {\n    this._inputFormatter = config.inputFormatter;\n    this._outputFormatter = config.outputFormatter;\n};\n\n/**\n * Should be used to determine if this SolidityType do match given name\n *\n * @method isType\n * @param {String} name\n * @return {Bool} true if type match this SolidityType, otherwise false\n */\nSolidityType.prototype.isType = function (name) {\n    throw \"This method should be overwritten for type \" + name;\n};\n\n/**\n * Should be used to determine what is the length of static part in given type\n *\n * @method staticPartLength\n * @param {String} name\n * @return {Number} length of static part in bytes\n */\nSolidityType.prototype.staticPartLength = function (name) {\n    // If name isn't an array then treat it like a single element array.\n    return (this.nestedTypes(name) || ['[1]'])\n        .map(function (type) {\n            // the length of the nested array\n            return parseInt(type.slice(1, -1), 10) || 1;\n        })\n        .reduce(function (previous, current) {\n            return previous * current;\n        // all basic types are 32 bytes long\n        }, 32);\n};\n\n/**\n * Should be used to determine if type is dynamic array\n * eg:\n * \"type[]\" => true\n * \"type[4]\" => false\n *\n * @method isDynamicArray\n * @param {String} name\n * @return {Bool} true if the type is dynamic array\n */\nSolidityType.prototype.isDynamicArray = function (name) {\n    var nestedTypes = this.nestedTypes(name);\n    return !!nestedTypes && !nestedTypes[nestedTypes.length - 1].match(/[0-9]{1,}/g);\n};\n\n/**\n * Should be used to determine if type is static array\n * eg:\n * \"type[]\" => false\n * \"type[4]\" => true\n *\n * @method isStaticArray\n * @param {String} name\n * @return {Bool} true if the type is static array\n */\nSolidityType.prototype.isStaticArray = function (name) {\n    var nestedTypes = this.nestedTypes(name);\n    return !!nestedTypes && !!nestedTypes[nestedTypes.length - 1].match(/[0-9]{1,}/g);\n};\n\n/**\n * Should return length of static array\n * eg.\n * \"int[32]\" => 32\n * \"int256[14]\" => 14\n * \"int[2][3]\" => 3\n * \"int\" => 1\n * \"int[1]\" => 1\n * \"int[]\" => 1\n *\n * @method staticArrayLength\n * @param {String} name\n * @return {Number} static array length\n */\nSolidityType.prototype.staticArrayLength = function (name) {\n    var nestedTypes = this.nestedTypes(name);\n    if (nestedTypes) {\n       return parseInt(nestedTypes[nestedTypes.length - 1].match(/[0-9]{1,}/g) || 1);\n    }\n    return 1;\n};\n\n/**\n * Should return nested type\n * eg.\n * \"int[32]\" => \"int\"\n * \"int256[14]\" => \"int256\"\n * \"int[2][3]\" => \"int[2]\"\n * \"int\" => \"int\"\n * \"int[]\" => \"int\"\n *\n * @method nestedName\n * @param {String} name\n * @return {String} nested name\n */\nSolidityType.prototype.nestedName = function (name) {\n    // remove last [] in name\n    var nestedTypes = this.nestedTypes(name);\n    if (!nestedTypes) {\n        return name;\n    }\n\n    return name.substr(0, name.length - nestedTypes[nestedTypes.length - 1].length);\n};\n\n/**\n * Should return true if type has dynamic size by default\n * such types are \"string\", \"bytes\"\n *\n * @method isDynamicType\n * @param {String} name\n * @return {Bool} true if is dynamic, otherwise false\n */\nSolidityType.prototype.isDynamicType = function () {\n    return false;\n};\n\n/**\n * Should return array of nested types\n * eg.\n * \"int[2][3][]\" => [\"[2]\", \"[3]\", \"[]\"]\n * \"int[] => [\"[]\"]\n * \"int\" => null\n *\n * @method nestedTypes\n * @param {String} name\n * @return {Array} array of nested types\n */\nSolidityType.prototype.nestedTypes = function (name) {\n    // return list of strings eg. \"[]\", \"[3]\", \"[]\", \"[2]\"\n    return name.match(/(\\[[0-9]*\\])/g);\n};\n\n/**\n * Should be used to encode the value\n *\n * @method encode\n * @param {Object} value\n * @param {String} name\n * @return {String} encoded value\n */\nSolidityType.prototype.encode = function (value, name) {\n    var self = this;\n    if (this.isDynamicArray(name)) {\n\n        return (function () {\n            var length = value.length;                          // in int\n            var nestedName = self.nestedName(name);\n\n            var result = [];\n            result.push(f.formatInputInt(length).encode());\n\n            value.forEach(function (v) {\n                result.push(self.encode(v, nestedName));\n            });\n\n            return result;\n        })();\n\n    } else if (this.isStaticArray(name)) {\n\n        return (function () {\n            var length = self.staticArrayLength(name);          // in int\n            var nestedName = self.nestedName(name);\n\n            var result = [];\n            for (var i = 0; i < length; i++) {\n                result.push(self.encode(value[i], nestedName));\n            }\n\n            return result;\n        })();\n\n    }\n\n    return this._inputFormatter(value, name).encode();\n};\n\n/**\n * Should be used to decode value from bytes\n *\n * @method decode\n * @param {String} bytes\n * @param {Number} offset in bytes\n * @param {String} name type name\n * @returns {Object} decoded value\n */\nSolidityType.prototype.decode = function (bytes, offset, name) {\n    var self = this;\n\n    if (this.isDynamicArray(name)) {\n\n        return (function () {\n            var arrayOffset = parseInt('0x' + bytes.substr(offset * 2, 64)); // in bytes\n            var length = parseInt('0x' + bytes.substr(arrayOffset * 2, 64)); // in int\n            var arrayStart = arrayOffset + 32; // array starts after length; // in bytes\n\n            var nestedName = self.nestedName(name);\n            var nestedStaticPartLength = self.staticPartLength(nestedName);  // in bytes\n            var roundedNestedStaticPartLength = Math.floor((nestedStaticPartLength + 31) / 32) * 32;\n            var result = [];\n\n            for (var i = 0; i < length * roundedNestedStaticPartLength; i += roundedNestedStaticPartLength) {\n                result.push(self.decode(bytes, arrayStart + i, nestedName));\n            }\n\n            return result;\n        })();\n\n    } else if (this.isStaticArray(name)) {\n\n        return (function () {\n            var length = self.staticArrayLength(name);                      // in int\n            var arrayStart = offset;                                        // in bytes\n\n            var nestedName = self.nestedName(name);\n            var nestedStaticPartLength = self.staticPartLength(nestedName); // in bytes\n            var roundedNestedStaticPartLength = Math.floor((nestedStaticPartLength + 31) / 32) * 32;\n            var result = [];\n\n            for (var i = 0; i < length * roundedNestedStaticPartLength; i += roundedNestedStaticPartLength) {\n                result.push(self.decode(bytes, arrayStart + i, nestedName));\n            }\n\n            return result;\n        })();\n    } else if (this.isDynamicType(name)) {\n\n        return (function () {\n            var dynamicOffset = parseInt('0x' + bytes.substr(offset * 2, 64));      // in bytes\n            var length = parseInt('0x' + bytes.substr(dynamicOffset * 2, 64));      // in bytes\n            var roundedLength = Math.floor((length + 31) / 32);                     // in int\n            var param = new SolidityParam(bytes.substr(dynamicOffset * 2, ( 1 + roundedLength) * 64), 0, bytes);\n            return self._outputFormatter(param, name);\n        })();\n    }\n\n    var length = this.staticPartLength(name);\n    var param = new SolidityParam(bytes.substr(offset * 2, length * 2), undefined, bytes);\n    return this._outputFormatter(param, name);\n};\n\nmodule.exports = SolidityType;\n","var f = require('../formatters');\nvar SolidityType = require('../type');\n\nvar SolidityTypeString = function () {\n    this._inputFormatter = f.formatInputString;\n    this._outputFormatter = f.formatOutputString;\n};\n\nSolidityTypeString.prototype = new SolidityType({});\nSolidityTypeString.prototype.constructor = SolidityTypeString;\n\nSolidityTypeString.prototype.isType = function (name) {\n    return !!name.match(/^string(\\[([0-9]*)\\])*$/);\n};\n\nSolidityTypeString.prototype.isDynamicType = function () {\n    return true;\n};\n\nmodule.exports = SolidityTypeString;\n"],"sourceRoot":""}