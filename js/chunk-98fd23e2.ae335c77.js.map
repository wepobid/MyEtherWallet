{"version":3,"sources":["webpack:///./src/layouts/InterfaceLayout/containers/SwapContainer/SwapContainer.vue?8568","webpack:///src/layouts/InterfaceLayout/containers/SwapContainer/SwapContainer.vue","webpack:///./src/layouts/InterfaceLayout/containers/SwapContainer/SwapContainer.vue?45b7","webpack:///./src/layouts/InterfaceLayout/containers/SwapContainer/SwapContainer.vue","webpack:///./src/layouts/InterfaceLayout/containers/SwapContainer/index.js","webpack:///./src/layouts/InterfaceLayout/containers/SwapContainer/SwapContainer.vue?cffc"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","directives","name","rawName","value","bityExitToFiat","expression","ref","attrs","selectedProvider","swapDetails","currentAddress","on","resetSwapState","$t","_v","_s","tokenBalances","fromCurrency","swapAll","_e","fromArray","overrideFrom","setFromCurrency","domProps","$event","target","composing","fromValue","amountChanged","fromBelowMinAllowed","hasEnough","fromAboveMaxAllowed","flipCurrencies","images","swap","toArray","overrideTo","setToCurrency","toValue","toBelowMinAllowed","toAboveMaxAllowed","isExitToFiat","toCurrency","overrideAddress","setToAddress","validAddress","unableToValidate","baseCurrency","setExitFromAddress","validExitAddress","unableToValidateExit","currency","setRefundAddress","validRefundAddress","unableToValidateRefund","$tc","loadingError","haveProviderRates","providerList","noProvidersPair","loadingData","providersFound","switchCurrencyOrder","supportedProviders","providerSelectedName","setSelectedProvider","finalizingSwap","class","validSwap","swapConfirmationModalOpen","reset","exitSourceAddress","exitToFiatCallback","exitToFiatAbort","staticRenderFns","components","InterfaceContainerTitle","SwapCurrencyPicker","SwapAddressSelector","ProvidersRadioSelector","SwapConfirmationModal","SwapExitToFiat","SwapSendToModal","props","tokensWithBalance","type","Array","default","data","toAddress","refundAddress","exitFromAddress","displayToValue","displayFromValue","invalidFrom","lastBestRate","currencyDetails","kybernetowrk","bity","visaMaster","providerData","providerRatesRecieved","tempStatuses","providerNames","fiatCurrenciesArray","ratesRetrived","issueRecievingRates","debounceUpdateEstimate","debounceDoThing","computed","bestRate","length","provider","find","entry","errorLogger","e","checkBityMax","maxValue","includes","isProvider","showRefundAddress","allAddressesValid","validBaseToAddress","watch","mounted","account","address","web3","utils","_","debounce","debounceReviseRateEstimate","methods","updateRateEstimate","to","symbol","from","updateEstimate","convertToTokenBase","getBalance","setToCurrencyBuilder","setFromCurrencyBuilder","simplex","direction","fromCur","toCur","fromVal","openConfirmModal","dataForInitialization","maybeToken","$refs","swapConfirmation","swapconfirmation","show","Error","swapSendTo","component"],"mappings":"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","file":"js/chunk-98fd23e2.ae335c77.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"swap-container\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.bityExitToFiat),expression:\"!bityExitToFiat\"}]},[_c('swap-confirmation-modal',{ref:\"swapConfirmation\",attrs:{\"selected-provider\":_vm.selectedProvider,\"swap-details\":_vm.swapDetails,\"current-address\":_vm.currentAddress},on:{\"swapStarted\":_vm.resetSwapState}}),_c('swap-send-to-modal',{ref:\"swapSendTo\",attrs:{\"selected-provider\":_vm.selectedProvider,\"swap-details\":_vm.swapDetails,\"current-address\":_vm.currentAddress},on:{\"swapStarted\":_vm.resetSwapState}}),_c('div',{staticClass:\"title-block\"},[_c('interface-container-title',{attrs:{\"title\":_vm.$t('common.swap')}})],1),_c('div',{staticClass:\"form-content-container\"},[_c('div',{staticClass:\"send-form\"},[_c('div',{staticClass:\"form-block amount-to-address\"},[_c('div',{staticClass:\"amount\"},[_c('div',{staticClass:\"title title-and-copy\"},[_c('h4',[_vm._v(_vm._s(_vm.$t('swap.from')))]),(_vm.tokenBalances[_vm.fromCurrency] > 0)?_c('p',{staticClass:\"all-button prevent-user-select\",on:{\"click\":_vm.swapAll}},[_vm._v(\" \"+_vm._s(_vm.$t('common.balance.total'))+\" \")]):_vm._e()]),_c('swap-currency-picker',{attrs:{\"currencies\":_vm.fromArray,\"override-currency\":_vm.overrideFrom,\"from-source\":true,\"page\":\"SwapContainerFrom\"},on:{\"selectedCurrency\":_vm.setFromCurrency}}),_c('div',{staticClass:\"the-form amount-number\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.fromValue),expression:\"fromValue\"}],attrs:{\"placeholder\":_vm.$t('swap.deposit-amount'),\"type\":\"number\",\"name\":\"\",\"value\":\"\",\"step\":\"any\"},domProps:{\"value\":(_vm.fromValue)},on:{\"input\":[function($event){if($event.target.composing){ return; }_vm.fromValue=$event.target.value},function($event){return _vm.amountChanged('from')}]}})]),_c('div',{staticClass:\"error-message-container\"},[(_vm.fromBelowMinAllowed)?_c('p',[_vm._v(_vm._s(_vm.fromBelowMinAllowed))]):_vm._e(),(!_vm.hasEnough && !_vm.fromBelowMinAllowed)?_c('p',[_vm._v(\" \"+_vm._s(_vm.$t('swap.warning.not-enough-funds'))+\" \")]):_vm._e(),(_vm.fromAboveMaxAllowed)?_c('p',[_vm._v(_vm._s(_vm.fromAboveMaxAllowed))]):_vm._e()])],1),_c('div',{staticClass:\"exchange-icon\",on:{\"click\":_vm.flipCurrencies}},[_c('img',{attrs:{\"src\":_vm.images.swap,\"alt\":\"\"}})]),_c('div',{staticClass:\"amount\"},[_c('div',{staticClass:\"title\"},[_c('h4',[_vm._v(_vm._s(_vm.$t('swap.to')))])]),_c('swap-currency-picker',{attrs:{\"currencies\":_vm.toArray,\"override-currency\":_vm.overrideTo,\"from-source\":false,\"page\":\"SwapContainerTo\"},on:{\"selectedCurrency\":_vm.setToCurrency}}),_c('div',{staticClass:\"the-form amount-number\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.toValue),expression:\"toValue\"}],attrs:{\"placeholder\":_vm.$t('swap.recieve-amount'),\"type\":\"number\",\"name\":\"\",\"value\":\"\",\"step\":\"any\"},domProps:{\"value\":(_vm.toValue)},on:{\"input\":[function($event){if($event.target.composing){ return; }_vm.toValue=$event.target.value},function($event){return _vm.amountChanged('to')}]}})]),_c('div',{staticClass:\"error-message-container\"},[(_vm.toBelowMinAllowed)?_c('p',[_vm._v(_vm._s(_vm.toBelowMinAllowed))]):_vm._e(),(_vm.toAboveMaxAllowed)?_c('p',[_vm._v(_vm._s(_vm.toAboveMaxAllowed))]):_vm._e()])],1)])]),(!_vm.isExitToFiat)?_c('div',{staticClass:\"send-form\"},[_c('div',{staticClass:\"the-form gas-amount\"},[_c('swap-address-selector',{attrs:{\"currency\":_vm.toCurrency,\"current-address\":_vm.currentAddress,\"copybutton\":true,\"title\":_vm.$t('sendTx.to-addr'),\"clear-address\":_vm.overrideAddress},on:{\"toAddress\":_vm.setToAddress,\"validAddress\":function($event){_vm.validAddress = $event},\"unableToValidate\":function($event){_vm.unableToValidate = $event}}})],1)]):_vm._e(),(_vm.isExitToFiat && _vm.fromCurrency !== _vm.baseCurrency)?_c('div',{staticClass:\"send-form\"},[_c('div',{staticClass:\"the-form gas-amount\"},[_c('swap-address-selector',{attrs:{\"currency\":_vm.fromCurrency,\"current-address\":_vm.currentAddress,\"copybutton\":true,\"clear-address\":_vm.overrideAddress,\"title\":_vm.$t('sendTx.from-addr')},on:{\"toAddress\":_vm.setExitFromAddress,\"validAddress\":function($event){_vm.validExitAddress = $event},\"unableToValidate\":function($event){_vm.unableToValidateExit = $event}}})],1)]):_vm._e(),(_vm.showRefundAddress)?_c('div',{staticClass:\"send-form\"},[_c('div',{staticClass:\"the-form gas-amount\"},[_c('swap-address-selector',{attrs:{\"currency\":_vm.fromCurrency,\"current-address\":_vm.currentAddress,\"copybutton\":true,\"clear-address\":_vm.overrideAddress,\"title\":_vm.$t('swap.refund', { currency: _vm.fromCurrency })},on:{\"toAddress\":_vm.setRefundAddress,\"validAddress\":function($event){_vm.validRefundAddress = $event},\"unableToValidate\":function($event){_vm.unableToValidateRefund = $event}}})],1)]):_vm._e(),_c('div',{staticClass:\"send-form\"},[_c('div',{staticClass:\"title-container\"},[_c('div',{staticClass:\"title title-and-copy\"},[_c('h4',[_vm._v(_vm._s(_vm.$tc('swap.providers.string', 2)))])])]),_c('providers-radio-selector',{attrs:{\"loading-provider-error\":_vm.loadingError,\"loading-provider-rates\":!_vm.haveProviderRates,\"provider-data\":_vm.providerList,\"from-value\":+_vm.fromValue,\"to-value\":+_vm.toValue,\"no-providers-pair\":_vm.noProvidersPair,\"loading-data\":_vm.loadingData,\"providers-found\":_vm.providersFound,\"provider-selected\":_vm.selectedProvider,\"switch-currency-order\":_vm.switchCurrencyOrder,\"all-supported-providers\":_vm.supportedProviders,\"provider-selected-name\":_vm.providerSelectedName},on:{\"selectedProvider\":_vm.setSelectedProvider}})],1),_c('div',{staticClass:\"submit-button-container\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.finalizingSwap),expression:\"finalizingSwap\"}],staticClass:\"disabled submit-button large-round-button-green-filled clickable\"},[_c('i',{staticClass:\"fa fa-spinner fa-spin\"}),_vm._v(\" \"+_vm._s(_vm.$t('swap.button-loading'))+\" \")]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.finalizingSwap),expression:\"!finalizingSwap\"}],class:[\n            _vm.validSwap ? '' : 'disabled',\n            'submit-button large-round-button-green-filled clickable'\n          ],on:{\"click\":_vm.swapConfirmationModalOpen}},[_vm._v(\" \"+_vm._s(_vm.$t('common.continue'))+\" \"),_c('i',{staticClass:\"fa fa-long-arrow-right\",attrs:{\"aria-hidden\":\"true\"}})]),_c('div',{staticClass:\"clear-all-btn\",on:{\"click\":function($event){return _vm.reset()}}},[_vm._v(\" \"+_vm._s(_vm.$t('common.clear-all'))+\" \")])])])],1),(_vm.bityExitToFiat)?_c('swap-exit-to-fiat',{attrs:{\"swap-details\":_vm.swapDetails,\"exit-from-address\":_vm.exitSourceAddress,\"exit-to-fiat-callback\":_vm.exitToFiatCallback},on:{\"backButtonClick\":_vm.exitToFiatAbort}}):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"swap-container\">\n    <div v-show=\"!bityExitToFiat\">\n      <swap-confirmation-modal\n        ref=\"swapConfirmation\"\n        :selected-provider=\"selectedProvider\"\n        :swap-details=\"swapDetails\"\n        :current-address=\"currentAddress\"\n        @swapStarted=\"resetSwapState\"\n      />\n\n      <swap-send-to-modal\n        ref=\"swapSendTo\"\n        :selected-provider=\"selectedProvider\"\n        :swap-details=\"swapDetails\"\n        :current-address=\"currentAddress\"\n        @swapStarted=\"resetSwapState\"\n      />\n\n      <div class=\"title-block\">\n        <interface-container-title :title=\"$t('common.swap')\" />\n      </div>\n\n      <div class=\"form-content-container\">\n        <div class=\"send-form\">\n          <div class=\"form-block amount-to-address\">\n            <div class=\"amount\">\n              <div class=\"title title-and-copy\">\n                <h4>{{ $t('swap.from') }}</h4>\n                <p\n                  v-if=\"tokenBalances[fromCurrency] > 0\"\n                  class=\"all-button prevent-user-select\"\n                  @click=\"swapAll\"\n                >\n                  {{ $t('common.balance.total') }}\n                </p>\n              </div>\n              <swap-currency-picker\n                :currencies=\"fromArray\"\n                :override-currency=\"overrideFrom\"\n                :from-source=\"true\"\n                page=\"SwapContainerFrom\"\n                @selectedCurrency=\"setFromCurrency\"\n              />\n              <div class=\"the-form amount-number\">\n                <input\n                  v-model=\"fromValue\"\n                  :placeholder=\"$t('swap.deposit-amount')\"\n                  type=\"number\"\n                  name\n                  value\n                  step=\"any\"\n                  @input=\"amountChanged('from')\"\n                />\n              </div>\n              <div class=\"error-message-container\">\n                <p v-if=\"fromBelowMinAllowed\">{{ fromBelowMinAllowed }}</p>\n                <p v-if=\"!hasEnough && !fromBelowMinAllowed\">\n                  {{ $t('swap.warning.not-enough-funds') }}\n                </p>\n                <p v-if=\"fromAboveMaxAllowed\">{{ fromAboveMaxAllowed }}</p>\n              </div>\n            </div>\n            <div class=\"exchange-icon\" @click=\"flipCurrencies\">\n              <img :src=\"images.swap\" alt />\n            </div>\n            <div class=\"amount\">\n              <div class=\"title\">\n                <h4>{{ $t('swap.to') }}</h4>\n              </div>\n              <swap-currency-picker\n                :currencies=\"toArray\"\n                :override-currency=\"overrideTo\"\n                :from-source=\"false\"\n                page=\"SwapContainerTo\"\n                @selectedCurrency=\"setToCurrency\"\n              />\n              <div class=\"the-form amount-number\">\n                <input\n                  v-model=\"toValue\"\n                  :placeholder=\"$t('swap.recieve-amount')\"\n                  type=\"number\"\n                  name\n                  value\n                  step=\"any\"\n                  @input=\"amountChanged('to')\"\n                />\n              </div>\n              <div class=\"error-message-container\">\n                <p v-if=\"toBelowMinAllowed\">{{ toBelowMinAllowed }}</p>\n                <p v-if=\"toAboveMaxAllowed\">{{ toAboveMaxAllowed }}</p>\n              </div>\n            </div>\n          </div>\n          <!-- form-block amount-to-address -->\n        </div>\n\n        <div v-if=\"!isExitToFiat\" class=\"send-form\">\n          <div class=\"the-form gas-amount\">\n            <swap-address-selector\n              :currency=\"toCurrency\"\n              :current-address=\"currentAddress\"\n              :copybutton=\"true\"\n              :title=\"$t('sendTx.to-addr')\"\n              :clear-address=\"overrideAddress\"\n              @toAddress=\"setToAddress\"\n              @validAddress=\"validAddress = $event\"\n              @unableToValidate=\"unableToValidate = $event\"\n            />\n          </div>\n        </div>\n\n        <div\n          v-if=\"isExitToFiat && fromCurrency !== baseCurrency\"\n          class=\"send-form\"\n        >\n          <div class=\"the-form gas-amount\">\n            <swap-address-selector\n              :currency=\"fromCurrency\"\n              :current-address=\"currentAddress\"\n              :copybutton=\"true\"\n              :clear-address=\"overrideAddress\"\n              :title=\"$t('sendTx.from-addr')\"\n              @toAddress=\"setExitFromAddress\"\n              @validAddress=\"validExitAddress = $event\"\n              @unableToValidate=\"unableToValidateExit = $event\"\n            />\n          </div>\n        </div>\n\n        <div v-if=\"showRefundAddress\" class=\"send-form\">\n          <div class=\"the-form gas-amount\">\n            <swap-address-selector\n              :currency=\"fromCurrency\"\n              :current-address=\"currentAddress\"\n              :copybutton=\"true\"\n              :clear-address=\"overrideAddress\"\n              :title=\"$t('swap.refund', { currency: fromCurrency })\"\n              @toAddress=\"setRefundAddress\"\n              @validAddress=\"validRefundAddress = $event\"\n              @unableToValidate=\"unableToValidateRefund = $event\"\n            />\n          </div>\n        </div>\n\n        <div class=\"send-form\">\n          <div class=\"title-container\">\n            <div class=\"title title-and-copy\">\n              <h4>{{ $tc('swap.providers.string', 2) }}</h4>\n            </div>\n          </div>\n          <providers-radio-selector\n            :loading-provider-error=\"loadingError\"\n            :loading-provider-rates=\"!haveProviderRates\"\n            :provider-data=\"providerList\"\n            :from-value=\"+fromValue\"\n            :to-value=\"+toValue\"\n            :no-providers-pair=\"noProvidersPair\"\n            :loading-data=\"loadingData\"\n            :providers-found=\"providersFound\"\n            :provider-selected=\"selectedProvider\"\n            :switch-currency-order=\"switchCurrencyOrder\"\n            :all-supported-providers=\"supportedProviders\"\n            :provider-selected-name=\"providerSelectedName\"\n            @selectedProvider=\"setSelectedProvider\"\n          />\n        </div>\n\n        <div class=\"submit-button-container\">\n          <div\n            v-show=\"finalizingSwap\"\n            class=\"disabled submit-button large-round-button-green-filled clickable\"\n          >\n            <i class=\"fa fa-spinner fa-spin\" />\n            {{ $t('swap.button-loading') }}\n          </div>\n          <div\n            v-show=\"!finalizingSwap\"\n            :class=\"[\n              validSwap ? '' : 'disabled',\n              'submit-button large-round-button-green-filled clickable'\n            ]\"\n            @click=\"swapConfirmationModalOpen\"\n          >\n            {{ $t('common.continue') }}\n            <i class=\"fa fa-long-arrow-right\" aria-hidden=\"true\" />\n          </div>\n          <div class=\"clear-all-btn\" @click=\"reset()\">\n            {{ $t('common.clear-all') }}\n          </div>\n        </div>\n      </div>\n    </div>\n    <swap-exit-to-fiat\n      v-if=\"bityExitToFiat\"\n      :swap-details=\"swapDetails\"\n      :exit-from-address=\"exitSourceAddress\"\n      :exit-to-fiat-callback=\"exitToFiatCallback\"\n      @backButtonClick=\"exitToFiatAbort\"\n    ></swap-exit-to-fiat>\n  </div>\n</template>\n<script>\nimport BigNumber from 'bignumber.js';\nimport debug from 'debug';\nimport { mapState } from 'vuex';\n\nimport { Toast } from '@/helpers';\nimport ProvidersRadioSelector from './components/ProvidersRadioSelector';\nimport SwapAddressSelector from './components/SwapAddressSelector';\nimport InterfaceContainerTitle from '../../components/InterfaceContainerTitle';\nimport swapIcon from '@/assets/images/icons/swap-widget.svg';\nimport ImageKybernetowrk from '@/assets/images/etc/kybernetwork.png';\nimport ImageBity from '@/assets/images/etc/bity.png';\nimport ImageVisaMaster from '@/assets/images/etc/visamaster.png';\n\nimport SwapCurrencyPicker from './components/SwapCurrencyPicker';\nimport SwapConfirmationModal from './components/SwapConfirmationModal';\nimport SwapExitToFiat from './components/SwapExitToFiat';\nimport SwapSendToModal from './components/SwapSendToModal';\n\nimport {\n  SwapProviders,\n  providers,\n  bestProviderForQuantity,\n  bestRateForQuantity,\n  isValidEntry,\n  providerNames,\n  supportedProviders,\n  BASE_CURRENCY,\n  fiat,\n  MIN_SWAP_AMOUNT,\n  ERC20\n} from '@/partners';\n\nconst errorLogger = debug('v5:swapContainer');\n\nexport default {\n  components: {\n    'interface-container-title': InterfaceContainerTitle,\n    'swap-currency-picker': SwapCurrencyPicker,\n    'swap-address-selector': SwapAddressSelector,\n    'providers-radio-selector': ProvidersRadioSelector,\n    'swap-confirmation-modal': SwapConfirmationModal,\n    'swap-exit-to-fiat': SwapExitToFiat,\n    'swap-send-to-modal': SwapSendToModal\n  },\n  props: {\n    tokensWithBalance: {\n      type: Array,\n      default: function() {\n        return [];\n      }\n    }\n  },\n  data() {\n    return {\n      baseCurrency: BASE_CURRENCY,\n      providerSelectedName: '',\n      toAddress: '',\n      currentAddress: '',\n      refundAddress: '',\n      exitFromAddress: '',\n      fromCurrency: 'ETH',\n      toCurrency: 'ETH',\n      displayToValue: 1,\n      displayFromValue: 1,\n      fromValue: 1,\n      toValue: 1,\n      invalidFrom: 'none',\n      lastBestRate: 0,\n      selectedProvider: {},\n      swapDetails: {},\n      currencyDetails: {},\n      swap: new SwapProviders(\n        providers,\n        {\n          network: this.$store.state.main.network.type.name,\n          web3: this.$store.state.main.web3,\n          getRateForUnit: false\n        },\n        { tokensWithBalance: this.tokensWithBalance }\n      ),\n      images: {\n        kybernetowrk: ImageKybernetowrk,\n        bity: ImageBity,\n        visaMaster: ImageVisaMaster,\n        swap: swapIcon\n      },\n      toArray: [],\n      fromArray: [],\n      providerData: [],\n      tokenBalances: {},\n      providerRatesRecieved: [],\n      noProvidersPair: {},\n      providersFound: [],\n      tempStatuses: [],\n      overrideFrom: {},\n      overrideTo: {},\n      providerNames: providerNames,\n      supportedProviders: supportedProviders,\n      fiatCurrenciesArray: fiat.map(entry => entry.symbol),\n      finalizingSwap: false,\n      validAddress: true,\n      validRefundAddress: true,\n      validExitAddress: true,\n      ratesRetrived: false,\n      issueRecievingRates: false,\n      loadingData: true,\n      haveProviderRates: false,\n      loadingError: false,\n      switchCurrencyOrder: false,\n      bityExitToFiat: false,\n      exitToFiatCallback: () => {},\n      debounceUpdateEstimate: {},\n      debounceDoThing: {},\n      unableToValidate: false,\n      unableToValidateExit: false,\n      unableToValidateRefund: false,\n      overrideAddress: false\n    };\n  },\n  computed: {\n    ...mapState('main', [\n      'account',\n      'ens',\n      'gasPrice',\n      'web3',\n      'network',\n      'online'\n    ]),\n    bestRate() {\n      try {\n        if (this.providerData.length > 0) {\n          if (this.selectedProvider.provider) {\n            return this.providerList.find(entry => {\n              return entry.provider === this.selectedProvider.provider;\n            }).rate;\n          }\n          return bestRateForQuantity([...this.providerList], this.fromValue);\n        }\n        return this.lastBestRate;\n      } catch (e) {\n        errorLogger(e);\n      }\n      return null;\n    },\n    fromBelowMinAllowed() {\n      if (new BigNumber(MIN_SWAP_AMOUNT).gt(new BigNumber(this.fromValue)))\n        return `${this.$t('swap.value-below-min')} ${MIN_SWAP_AMOUNT}`;\n      if (\n        new BigNumber(this.selectedProvider.minValue).gt(\n          new BigNumber(this.fromValue)\n        )\n      )\n        return this.$t('swap.value-below-min', {\n          value: this.selectedProvider.maxValue,\n          currency: this.fromCurrency\n        });\n      return false;\n    },\n    fromAboveMaxAllowed() {\n      if (this.selectedProvider.provider === this.providerNames.bity) {\n        if (this.checkBityMax) {\n          return this.$t('swap.value-above-max', {\n            value: this.selectedProvider.maxValue,\n            currency: this.fromCurrency\n          });\n        }\n        return false;\n      } else if (\n        new BigNumber(this.fromValue).gt(\n          new BigNumber(this.selectedProvider.maxValue)\n        ) &&\n        new BigNumber(this.selectedProvider.maxValue).gt(new BigNumber(0))\n      )\n        return this.$t('swap.value-above-max', {\n          value: this.selectedProvider.maxValue,\n          currency: this.fromCurrency\n        });\n      return false;\n    },\n    toBelowMinAllowed() {\n      if (new BigNumber(0).gte(new BigNumber(this.toValue)))\n        return this.$t('swap.below-min-swap');\n      return false;\n    },\n    toAboveMaxAllowed() {\n      if (this.checkBityMax) return this.$t('swap.above-max-swap');\n      return false;\n    },\n    providerList() {\n      if (this.providerData.length > 0) {\n        return bestProviderForQuantity([...this.providerData], this.fromValue);\n      }\n      return [];\n    },\n    isExitToFiat() {\n      return this.fiatCurrenciesArray.includes(this.toCurrency);\n    },\n    validSwap() {\n      // initial chack.  will provide an alert on the next screen if no address is provided\n      const canExit =\n        this.isExitToFiat && this.fromCurrency !== this.baseCurrency\n          ? this.exitFromAddress !== ''\n          : true;\n      return (\n        this.hasEnough &&\n        (this.toAddress !== '' || canExit) &&\n        this.allAddressesValid &&\n        this.selectedProvider.minValue <= +this.fromValue &&\n        (+this.fromValue <= this.selectedProvider.maxValue ||\n          this.selectedProvider.maxValue === 0)\n      );\n    },\n    checkBityMax() {\n      if (this.swap.isProvider(this.providerNames.bity)) {\n        return (\n          !this.swap\n            .getProvider(this.providerNames.bity)\n            .maxCheck(\n              this.fromCurrency,\n              this.fromValue,\n              this.toCurrency,\n              this.toValue\n            ) && this.selectedProvider.provider === this.providerNames.bity\n        );\n      }\n      return false;\n    },\n    showRefundAddress() {\n      return (\n        !SwapProviders.isToken(this.fromCurrency) &&\n        this.selectedProvider.provider === this.providerNames.changelly\n      );\n    },\n    allAddressesValid() {\n      const validBaseToAddress = this.toAddress !== '' && this.validAddress;\n\n      if (this.isExitToFiat) {\n        if (this.fromCurrency === this.baseCurrency) {\n          return true;\n        }\n        return this.exitFromAddress !== '' && this.validExitAddress;\n      }\n      if (this.showRefundAddress) {\n        if (\n          this.fromCurrency === this.baseCurrency ||\n          SwapProviders.isToken(this.fromCurrency)\n        ) {\n          const validRefundAddress =\n            this.refundAddress === '' && this.validRefundAddress;\n          return validBaseToAddress && validRefundAddress;\n        }\n        return SwapProviders.checkAddress(\n          this.refundAddress,\n          this.fromCurrency\n        );\n      }\n\n      return validBaseToAddress;\n    },\n    hasEnough() {\n      return this.swap.hasEnough(\n        this.fromCurrency,\n        this.fromValue,\n        this.baseCurrency,\n        this.tokenBalances,\n        this.account.balance\n      );\n    },\n    exitSourceAddress() {\n      return this.isExitToFiat && this.fromCurrency === this.baseCurrency\n        ? this.currentAddress\n        : this.exitFromAddress;\n    }\n  },\n  watch: {\n    ['this.network.type.name']() {\n      this.swap.updateNetwork(this.network.type.name, this.web3);\n    },\n    ['swap.updateProviderRates']() {\n      const { toArray, fromArray } = this.swap.initialCurrencyLists;\n      this.toArray = toArray;\n      this.fromArray = fromArray;\n    },\n    ['swap.haveProviderRates']() {\n      this.haveProviderRates = this.swap.ratesRetrieved;\n      const { toArray, fromArray } = this.swap.buildInitialCurrencyArrays();\n      this.toArray = toArray;\n      this.fromArray = fromArray;\n      this.lastBestRate = bestRateForQuantity(\n        [...this.providerList],\n        this.fromValue\n      );\n      this.updateRateEstimate(\n        this.fromCurrency,\n        this.toCurrency,\n        this.fromValue,\n        'from'\n      );\n    },\n    network(newVal) {\n      this.providerData = [];\n      this.haveProviderRates = false;\n      this.loadingData = false;\n      this.swap = new SwapProviders(providers, {\n        network: newVal.type.name,\n        web3: this.web3\n      });\n    }\n  },\n  mounted() {\n    const { toArray, fromArray } = this.swap.initialCurrencyLists;\n    this.toArray = toArray;\n    this.fromArray = fromArray;\n    this.currentAddress = this.account.address;\n    this.debounceUpdateEstimate = this.web3.utils._.debounce(\n      this.updateEstimate,\n      300\n    );\n    this.debounceReviseRateEstimate = this.web3.utils._.debounce(\n      this.updateRateEstimate,\n      2000\n    );\n  },\n  methods: {\n    reset() {\n      this.fromCurrency = 'ETH';\n      this.toCurrency = 'BTC';\n      this.overrideFrom = { name: 'Ether', symbol: 'ETH' };\n      this.overrideTo = { name: 'Bitcoin', symbol: 'BTC' };\n      this.fromValue = 1;\n      this.overrideAddress = !this.overrideAddress;\n      this.providerSelectedName = '';\n      this.toAddress = '';\n      this.refundAddress = '';\n      this.exitFromAddress = '';\n      this.updateRateEstimate(\n        this.fromCurrency,\n        this.toCurrency,\n        this.fromValue,\n        'from'\n      );\n      this.finalizingSwap = false;\n      this.validAddress = true;\n      this.issueRecievingRates = false;\n      this.loadingError = false;\n      this.switchCurrencyOrder = false;\n      this.bityExitToFiat = false;\n    },\n    flipCurrencies() {\n      this.providerSelectedName = '';\n      this.switchCurrencyOrder = true;\n      const origTo = this.toValue;\n      this.fromCurrency = this.currencyDetails.to.symbol;\n      this.toCurrency = this.currencyDetails.from.symbol;\n      this.overrideFrom = this.currencyDetails.to;\n      this.overrideTo = this.currencyDetails.from;\n      this.updateRateEstimate(\n        this.fromCurrency,\n        this.toCurrency,\n        origTo,\n        'from'\n      );\n      this.switchCurrencyOrder = false;\n    },\n    setSelectedProvider(provider) {\n      this.selectedProvider = this.providerList.find(entry => {\n        return entry.provider === provider;\n      });\n      this.providerSelectedName = this.selectedProvider.provider;\n      this.updateEstimate('from');\n    },\n    setToAddress(address) {\n      this.toAddress = address;\n    },\n    setRefundAddress(address) {\n      this.refundAddress = address;\n    },\n    setExitFromAddress(address) {\n      this.exitFromAddress = address;\n    },\n    swapAll() {\n      this.fromValue = this.swap.convertToTokenBase(\n        this.fromCurrency,\n        this.tokenBalances[this.fromCurrency]\n      );\n      this.amountChanged('from');\n    },\n    setFromCurrency(value, dir = 'from') {\n      this.providerSelectedName = '';\n      this.currencyDetails.from = value;\n      this.fromCurrency = value.symbol;\n      this.getBalance(this.fromCurrency);\n      this.toArray = this.swap.setToCurrencyBuilder(value);\n      this.updateRateEstimate(\n        this.fromCurrency,\n        this.toCurrency,\n        this.fromValue,\n        dir\n      );\n    },\n    setToCurrency(value, dir = 'to') {\n      this.providerSelectedName = '';\n      this.currencyDetails.to = value;\n      this.toCurrency = value.symbol;\n      this.fromArray = this.swap.setFromCurrencyBuilder(value);\n      this.updateRateEstimate(\n        this.fromCurrency,\n        this.toCurrency,\n        this.fromValue,\n        dir\n      );\n    },\n    async getBalance(currency) {\n      if (SwapProviders.isToken(currency) && currency !== this.baseCurrency) {\n        const balance = await new this.web3.eth.Contract(\n          ERC20,\n          this.swap.getTokenAddress(currency)\n        ).methods\n          .balanceOf(this.currentAddress)\n          .call();\n\n        this.$set(this.tokenBalances, currency, balance);\n      }\n    },\n    amountChanged(direction) {\n      if (\n        (isValidEntry(this.fromValue) && direction === 'from') ||\n        (isValidEntry(this.toValue) && direction === 'to')\n      ) {\n        if (\n          this.swap.getProvider(this.providerNames.simplex).currencies.fiat[\n            this.fromCurrency\n          ]\n        ) {\n          this.debounceUpdateEstimate(this.providerNames.simplex + direction);\n        } else {\n          this.debounceUpdateEstimate(direction);\n          const fromCur = this.fromCurrency;\n          const toCur = this.toCurrency;\n          const fromVal = this.fromValue;\n          this.debounceReviseRateEstimate(fromCur, toCur, fromVal, direction);\n        }\n      }\n    },\n    async updateEstimate(input) {\n      if (this.simplexUpdate) {\n        this.simplexUpdate = false;\n        return;\n      }\n\n      let fromValue, toValue, simplexProvider, simplexRateDetails;\n      switch (input) {\n        case 'to':\n          this.fromValue = this.swap.calculateFromValue(\n            this.toValue,\n            this.bestRate,\n            this.fromCurrency\n          );\n          break;\n        case 'from':\n          this.toValue = this.swap.calculateToValue(\n            this.fromValue,\n            this.bestRate,\n            this.toCurrency\n          );\n          break;\n        case `${this.providerNames.simplex}to`:\n          this.simplexUpdate = true;\n          simplexProvider = this.swap.getProvider(this.providerNames.simplex);\n\n          if (simplexProvider.canQuote(this.fromValue, this.toValue)) {\n            simplexRateDetails = await simplexProvider.updateDigital(\n              this.fromCurrency,\n              this.toCurrency,\n              this.toValue\n            );\n\n            this.fromValue = simplexRateDetails.fromValue;\n            this.toValue = simplexRateDetails.toValue;\n          } else {\n            simplexRateDetails = await simplexProvider.updateFiat(\n              this.fromCurrency,\n              this.toCurrency,\n              51\n            );\n\n            const rate = new BigNumber(simplexRateDetails.toValue)\n              .div(simplexRateDetails.fromValue)\n              .toString(10);\n\n            this.fromValue = this.swap.calculateFromValue(\n              this.toValue,\n              rate,\n              this.fromCurrency\n            );\n          }\n\n          break;\n        case `${this.providerNames.simplex}from`:\n          this.simplexUpdate = true;\n          simplexProvider = this.swap.getProvider(this.providerNames.simplex);\n          if (simplexProvider.canQuote(this.fromValue, this.toValue)) {\n            simplexRateDetails = await simplexProvider.updateFiat(\n              this.fromCurrency,\n              this.toCurrency,\n              this.fromValue\n            );\n\n            this.fromValue = simplexRateDetails.fromValue;\n            this.toValue = simplexRateDetails.toValue;\n          } else {\n            simplexRateDetails = await simplexProvider.updateFiat(\n              this.fromCurrency,\n              this.toCurrency,\n              51\n            );\n\n            const rate = new BigNumber(simplexRateDetails.toValue)\n              .div(simplexRateDetails.fromValue)\n              .toString(10);\n\n            this.toValue = this.swap.calculateToValue(this.fromValue, rate);\n          }\n\n          break;\n        default:\n          toValue = this.swap.calculateToValue(this.fromValue, this.bestRate);\n          fromValue = this.swap.calculateFromValue(this.toValue, this.bestRate);\n          this.toValue = toValue;\n          this.fromValue = fromValue;\n          break;\n      }\n    },\n    async updateRateEstimate(fromCurrency, toCurrency, fromValue, to) {\n      if (this.haveProviderRates) {\n        this.loadingData = true;\n        this.noProvidersPair = { fromCurrency, toCurrency };\n        this.selectedProvider = {}; // Reset the selected provider when new rate pair is choosen\n        this.providerData = [];\n        const {\n          providersFound,\n          callsToMake\n        } = await this.swap.updateRateEstimate(\n          fromCurrency,\n          toCurrency,\n          fromValue,\n          this.toValue\n        );\n        this.providersFound = providersFound;\n        const results = await Promise.all(\n          callsToMake.map(func =>\n            func(fromCurrency, toCurrency, fromValue, this.toValue)\n          )\n        );\n        this.loadingData = false;\n        if (\n          results.every(\n            entry =>\n              entry.fromCurrency === this.fromCurrency &&\n              entry.toCurrency === this.toCurrency\n          )\n        ) {\n          this.providerData = bestProviderForQuantity(\n            results.map(entry => {\n              if (+entry.rate > 0) {\n                return {\n                  provider: entry.provider,\n                  fromCurrency,\n                  fromValue: this.fromValue,\n                  toCurrency,\n                  rate: +entry.rate,\n                  minValue: entry.minValue || 0,\n                  maxValue: entry.maxValue || 0,\n                  computeConversion: function(_fromValue) {\n                    return new BigNumber(_fromValue)\n                      .times(this.rate)\n                      .toFixed(6)\n                      .toString(10);\n                  },\n                  additional: entry.additional || {}\n                };\n              } else if (entry.provider === this.providerNames.changelly) {\n                Toast.responseHandler(\n                  `Failed to retrieve Changelly rate from ${fromCurrency} to ${toCurrency}`,\n                  3\n                );\n              } else if (entry.provider === this.providerNames.bity) {\n                Toast.responseHandler(\n                  `Failed to retrieve Bity rate from ${fromCurrency} to ${toCurrency}`,\n                  3\n                );\n              } else if (entry.provider === this.providerNames.kyber) {\n                Toast.responseHandler(\n                  `Failed to retrieve Kyber Network rate from ${fromCurrency} to ${toCurrency}`,\n                  3\n                );\n              } else if (entry.provider === this.providerNames.simplex) {\n                Toast.responseHandler(\n                  `Failed to retrieve Simplex rate from ${fromCurrency} to ${toCurrency}`,\n                  3\n                );\n              }\n            }),\n            fromValue\n          );\n          this.updateEstimate(to);\n        }\n      }\n    },\n    async swapConfirmationModalOpen() {\n      try {\n        if (this.validSwap) {\n          this.finalizingSwap = true;\n          const providerDetails = this.providerList.find(entry => {\n            return entry.provider === this.selectedProvider.provider;\n          });\n          const swapDetails = {\n            providerDetails: providerDetails,\n            fromValue: this.fromValue,\n            toValue: this.toValue,\n            toAddress: this.toAddress || this.currentAddress,\n            fromAddress: this.currentAddress,\n            refundAddress: SwapProviders.isToken(providerDetails.fromCurrency)\n              ? this.currentAddress\n              : this.refundAddress,\n            exitFromAddress:\n              this.isExitToFiat && this.fromCurrency === this.baseCurrency\n                ? this.currentAddress\n                : this.exitFromAddress\n          };\n          this.swapDetails = await this.swap.startSwap(swapDetails);\n          this.finalizingSwap = false;\n\n          if (this.swapDetails.isExitToFiat) {\n            this.bityExitToFiat = true;\n            this.exitToFiatCallback = swapDetailsExit => {\n              this.bityExitToFiat = false;\n              this.swapDetails = swapDetailsExit;\n              this.openConfirmModal(this.swapDetails);\n            };\n          } else {\n            this.openConfirmModal(this.swapDetails);\n          }\n        }\n      } catch (e) {\n        //abort (empty response from provider or failure to finalize details)\n        if (e.message === 'abort') {\n          this.finalizingSwap = false;\n          return;\n        }\n        this.$refs.swapConfirmation.$refs.swapconfirmation.hide();\n        this.$refs.swapSendTo.$refs.swapconfirmation.hide();\n        this.finalizingSwap = false;\n        errorLogger(e);\n        Toast.responseHandler(e, false);\n      }\n    },\n    openConfirmModal(swapDetails) {\n      if (swapDetails.dataForInitialization && swapDetails.maybeToken) {\n        this.$refs.swapConfirmation.$refs.swapconfirmation.show();\n      } else if (swapDetails.dataForInitialization && !swapDetails.maybeToken) {\n        this.$refs.swapSendTo.$refs.swapconfirmation.show();\n      } else {\n        throw Error('Error while requesting finalized details from provider');\n      }\n    },\n    exitToFiatAbort() {\n      // get any component state values to temporarily persist, and reset swap state to state before exit to fiat selected.\n      this.bityExitToFiat = !this.bityExitToFiat;\n    },\n    resetSwapState() {\n      this.reset();\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'SwapContainer.scss';\n</style>\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SwapContainer.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SwapContainer.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SwapContainer.vue?vue&type=template&id=50608882&scoped=true&\"\nimport script from \"./SwapContainer.vue?vue&type=script&lang=js&\"\nexport * from \"./SwapContainer.vue?vue&type=script&lang=js&\"\nimport style0 from \"./SwapContainer.vue?vue&type=style&index=0&id=50608882&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"50608882\",\n  null\n  \n)\n\nexport default component.exports","export { default } from './SwapContainer';\n","import mod from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SwapContainer.vue?vue&type=style&index=0&id=50608882&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SwapContainer.vue?vue&type=style&index=0&id=50608882&lang=scss&scoped=true&\""],"sourceRoot":""}